{{#each imports}}
{{{this}}}
{{/each}}
import type { ComponentProps } from 'react'
import { {{className}} } from 'styled-system/recipes'
import { styled } from 'styled-system/jsx'
import { createStyleContext } from '~/lib/create-style-context'

const { withProvider, withContext } = createStyleContext({{className}})
 
{{#each parts}}
{{#if (eq @key "Root")}}
{{#if this.slot}}
export const {{@key}} = withProvider(styled({{this.component}}), '{{this.slot}}')
{{else}}
export const {{@key}} = withProvider({{this.component}})
{{/if}} 
{{else}}
export const {{@key}} = withContext(styled({{this.component}}), '{{this.slot}}')
{{/if}}
{{/each}}

{{#each parts}}
export interface {{@key}}Props extends ComponentProps<typeof {{@key}}> {}
{{/each}}


