---
import type { CollectionEntry } from 'astro:content'
import { FigmaIcon, FileTextIcon, PenLineIcon } from 'lucide-react'
import { Box, Container, HStack } from 'styled-system/jsx'
import { prose } from 'styled-system/recipes'
import { Badge, Heading, Text } from '~/components/ui'
import { hasVariants } from '~/lib/page-control'
import { DocsHeroTabs } from './docs-hero-tabs'

interface Props {
  entry: CollectionEntry<'components' | 'overview'>
}

const { entry } = Astro.props
const { slug } = Astro.params

const value = slug?.split('/')[0] ?? 'panda'
const isComponent = entry.collection === 'components'

const showHeroTabs = await hasVariants(Astro.params.slug)
const pathname = Astro.url.pathname.replace(/\/$/, '')

---

<Box borderBottomWidth="1px" bg={{ base: 'gray.2', _dark: 'black.a2' }}>
  <Container maxW="66rem" py={{ base: '16', md: '24' }}>
    <article class={prose({ size: 'base' })}>
      <Heading as="h1" fontWeight="bold">
        {entry.data.title === 'Introduction' ? 'Welcome to Park UI' : entry.data.title}
      </Heading>
      <Text className="lead">{entry.data.description}</Text>
    </article>
    {
      isComponent && (
        <HStack gap="3">
          {entry.data.ark?.link && (
            <a href={`${entry.data.ark.link}#api-reference`} target="_blank">
              <Badge borderRadius="l2">
                <FileTextIcon />
                API Reference
              </Badge>
            </a>
          )}
          <a href="https://www.figma.com/community/file/1268615283036362769" target="_blank">
            <Badge borderRadius="l2">
              <FigmaIcon />
              Figma
            </Badge>
          </a>
          <a
            href={`https://github.com/cschroeter/park-ui/issues/new?title=[${entry.data.title}]%20Issue`}
            target="_blank"
          >
            <Badge borderRadius="l2">
              <PenLineIcon />
              Feedback
            </Badge>
          </a>
        </HStack>
      )
    }
  </Container>

  {showHeroTabs && <DocsHeroTabs pathname={pathname} value={value} client:load />}
</Box>
