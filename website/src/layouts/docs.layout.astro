---
import type { MarkdownHeading } from 'astro'
import { Code } from 'astro:components'
import { Box, Container, Flex, HStack, Stack } from 'styled-system/jsx'
import Breadcrumbs from '~/components/navigation/breadcrumbs.astro'
import DocsFooter from '~/components/navigation/docs-footer.astro'
import { MobileSidebarContainer } from '~/components/navigation/mobile-sidebar-container'
import Navbar from '~/components/navigation/navbar.astro'
import Sidebar from '~/components/navigation/sidebar.astro'
import { TableOfContent } from '~/components/navigation/toc'
import { ThemeDrawer } from '~/components/theme/theme-drawer'
import { pandaConfig, tailwindConfig } from '~/lib/use-theme-generator'
import Layout from './layout.astro'
import { layout } from './layout.recipe'

interface Props {
  title: string
  description?: string
  headings?: MarkdownHeading[]
}

const { title, description, headings } = Astro.props
const styles = layout()
---

<Layout title={title} description={description}>
  <header class={styles.header}>
    <Navbar borderBottomWidth="1px">
      <ThemeDrawer client:load slot="action">
        <Code code={pandaConfig} lang="tsx" theme="css-variables" slot="panda" />
        <Code code={tailwindConfig} lang="tsx" theme="css-variables" slot="tailwind" />
      </ThemeDrawer>
      <Box display={{ base: 'block', md: 'none' }}>
        <Container py="1">
          <HStack gap="2">
            <MobileSidebarContainer client:load>
              <Sidebar />
            </MobileSidebarContainer>
            <Breadcrumbs />
          </HStack>
        </Container>
      </Box>
    </Navbar>
  </header>
  <nav class={styles.nav} id="sidebar">
    <Sidebar />
  </nav>
  <main class={styles.main}>
    <slot name="hero" />
    <Flex justify="space-between" py="12" position="relative">
      <Container maxW="51rem" minWidth="0">
        <Stack gap="12">
          <slot />
          <DocsFooter />
        </Stack>
      </Container>
      <Box display={{ base: 'none', lg: 'block' }} flex="0 0 240px">
        <Box position="sticky" top="28" right="0" ps="8">
          <TableOfContent headings={headings} client:load />
        </Box>
      </Box>
    </Flex>
  </main>
</Layout>

<script>
  const restoreScrollPosition = () => {
    const leftSidebarScroll = sessionStorage.getItem('sidebar-scroll')
    if (leftSidebarScroll !== null) {
      document.querySelector('#sidebar')?.scrollTo({ top: parseInt(leftSidebarScroll, 10) })
    }
  }
  const registerScrollEvent = () => {
    const leftSidebar = document.querySelector('#sidebar')
    leftSidebar?.addEventListener('scroll', () => {
      sessionStorage.setItem('sidebar-scroll', leftSidebar?.scrollTop.toString() ?? '0')
    })
  }

  document.addEventListener('astro:after-swap', restoreScrollPosition)
  document.addEventListener('astro:page-load', registerScrollEvent)
</script>
