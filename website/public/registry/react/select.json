{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "dependencies": ["@ark-ui/react", "lucide-react"],
  "files": [
    {
      "content": "'use client'\nimport { ark } from '@ark-ui/react/factory'\nimport { Select } from '@ark-ui/react/select'\nimport { CheckIcon, ChevronsUpDownIcon } from 'lucide-react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { type SelectVariantProps, select } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport type RootProps = HTMLStyledProps<'div'> & SelectVariantProps\n\nexport const Root = withProvider(Select.Root, 'root', {\n  defaultProps: { positioning: { sameWidth: true } },\n}) as Select.RootComponent<RootProps>\n\nexport const RootProvider = withProvider(\n  Select.RootProvider,\n  'root',\n) as Select.RootProviderComponent<RootProps>\n\nexport const ClearTrigger = withContext(Select.ClearTrigger, 'clearTrigger')\nexport const Content = withContext(Select.Content, 'content')\nexport const Control = withContext(Select.Control, 'control')\nexport const IndicatorGroup = withContext(ark.div, 'indicatorGroup')\nexport const Item = withContext(Select.Item, 'item')\nexport const ItemGroup = withContext(Select.ItemGroup, 'itemGroup')\nexport const ItemGroupLabel = withContext(Select.ItemGroupLabel, 'itemGroupLabel')\nexport const ItemText = withContext(Select.ItemText, 'itemText')\nexport const Label = withContext(Select.Label, 'label')\nexport const List = withContext(Select.List, 'list')\nexport const Positioner = withContext(Select.Positioner, 'positioner')\nexport const Trigger = withContext(Select.Trigger, 'trigger')\nexport const ValueText = withContext(Select.ValueText, 'valueText')\nexport const Indicator = withContext(Select.Indicator, 'indicator', {\n  defaultProps: { children: <ChevronsUpDownIcon /> },\n})\nexport const ItemIndicator = withContext(Select.ItemIndicator, 'itemIndicator', {\n  defaultProps: { children: <CheckIcon /> },\n})\nexport const HiddenSelect = Select.HiddenSelect\n\nexport const Context = Select.Context\nexport const ItemContext = Select.ItemContext\n",
      "type": "registry:ui",
      "path": "select.tsx"
    }
  ],
  "registryDependencies": ["select-recipe"]
}
