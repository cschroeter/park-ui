{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "name": "skeleton",
  "type": "registry:ui",
  "dependencies": ["@ark-ui/react", "react"],
  "files": [
    {
      "content": "import { ark } from '@ark-ui/react/factory'\nimport { type ComponentProps, forwardRef } from 'react'\nimport { Stack, type StackProps, styled } from 'styled-system/jsx'\nimport { skeleton } from 'styled-system/recipes'\n\nexport type SkeletonProps = ComponentProps<typeof Skeleton>\nexport const Skeleton = styled(ark.div, skeleton)\n\nexport type SkeletonCircleProps = ComponentProps<typeof SkeletonCircle>\nexport const SkeletonCircle = styled(ark.div, skeleton, { defaultProps: { circle: true } })\n\nexport interface SkeletonTextProps extends SkeletonProps {\n  /**\n   * Number of lines to display\n   * @default 3\n   */\n  noOfLines?: number | undefined\n  rootProps?: StackProps | undefined\n}\n\nexport const SkeletonText = forwardRef<HTMLDivElement, SkeletonTextProps>(\n  function SkeletonText(props, ref) {\n    const { noOfLines = 3, gap, rootProps, ...skeletonProps } = props\n    return (\n      <Stack ref={ref} gap={gap} width=\"full\" {...rootProps}>\n        {[...Array(noOfLines).keys()].map((index) => (\n          <Skeleton\n            key={index}\n            height=\"4\"\n            _last={{ maxW: noOfLines === 1 ? '100%' : '80%' }}\n            {...skeletonProps}\n          />\n        ))}\n      </Stack>\n    )\n  },\n)\n",
      "type": "registry:ui",
      "path": "skeleton.tsx",
      "exports": "export {\n  Skeleton,\n  SkeletonCircle,\n  type SkeletonCircleProps,\n  type SkeletonProps,\n  SkeletonText,\n  type SkeletonTextProps,\n} from './skeleton'"
    }
  ],
  "registryDependencies": ["skeleton-recipe"]
}
