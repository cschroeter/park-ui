{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:ui",
  "dependencies": ["@ark-ui/react", "lucide-react", "react"],
  "files": [
    {
      "content": "'use client'\nimport { Pagination, usePaginationContext } from '@ark-ui/react/pagination'\nimport { EllipsisIcon } from 'lucide-react'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { pagination } from 'styled-system/recipes'\nimport { IconButton } from './icon-button'\n\nconst { withProvider, withContext } = createStyleContext(pagination)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider(Pagination.Root, 'root')\nexport const RootProvider = withProvider(Pagination.RootProvider, 'root')\nexport const Item = withContext(Pagination.Item, 'item')\nexport const Ellipsis = withContext(Pagination.Ellipsis, 'ellipsis')\nexport const PrevTrigger = withContext(Pagination.PrevTrigger, 'prevTrigger')\nexport const NextTrigger = withContext(Pagination.NextTrigger, 'nextTrigger')\n\nexport { PaginationContext as Context } from '@ark-ui/react/pagination'\n\nexport interface PaginationItemsProps extends React.HTMLAttributes<HTMLElement> {\n  render: (page: { type: 'page'; value: number }) => React.ReactNode\n  ellipsis?: React.ReactElement | undefined\n}\n\nexport const Items = (props: PaginationItemsProps) => {\n  const { pages } = usePaginationContext()\n  const { render, ellipsis, ...rest } = props\n\n  return pages.map((page, index) => {\n    if (page.type === 'ellipsis') {\n      return (\n        <Ellipsis asChild key={index} index={index} {...rest}>\n          {ellipsis || (\n            <IconButton as=\"span\">\n              <EllipsisIcon />\n            </IconButton>\n          )}\n        </Ellipsis>\n      )\n    }\n\n    return (\n      <Item asChild key={index} type=\"page\" value={page.value} {...rest}>\n        {render(page)}\n      </Item>\n    )\n  })\n}\n",
      "type": "registry:ui",
      "path": "ui/pagination.tsx"
    }
  ],
  "registryDependencies": ["icon-button", "pagination-recipe"]
}
