{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:ui",
  "dependencies": ["@ark-ui/react", "react"],
  "files": [
    {
      "content": "'use client'\nimport { Checkbox, useCheckboxContext } from '@ark-ui/react/checkbox'\nimport { type ComponentProps, forwardRef } from 'react'\nimport { createStyleContext, styled } from 'styled-system/jsx'\nimport { checkbox } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\n\nconst { withProvider, withContext } = createStyleContext(checkbox)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport type HiddenInputProps = ComponentProps<typeof HiddenInput>\n\nexport const Root = withProvider(Checkbox.Root, 'root')\nexport const RootProvider = withProvider(Checkbox.RootProvider, 'root')\nexport const Control = withContext(Checkbox.Control, 'control')\nexport const Group = withProvider(Checkbox.Group, 'group')\nexport const Label = withContext(Checkbox.Label, 'label')\nexport const HiddenInput = Checkbox.HiddenInput\n\nexport {\n  type CheckboxCheckedState as CheckedState,\n  CheckboxGroupProvider as GroupProvider,\n} from '@ark-ui/react/checkbox'\n\nexport const Indicator = forwardRef<SVGSVGElement, HTMLStyledProps<'svg'>>(\n  function Indicator(props, ref) {\n    const { indeterminate, checked } = useCheckboxContext()\n\n    return (\n      <Checkbox.Indicator indeterminate={indeterminate} asChild>\n        <styled.svg\n          ref={ref}\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"3px\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          {...props}\n        >\n          <title>Checkmark</title>\n          {indeterminate ? <path d=\"M5 12h14\" /> : checked ? <path d=\"M20 6 9 17l-5-5\" /> : null}\n        </styled.svg>\n      </Checkbox.Indicator>\n    )\n  },\n)\n",
      "type": "registry:ui",
      "path": "checkbox.tsx",
      "exports": "export * as Checkbox from './checkbox'"
    }
  ],
  "registryDependencies": ["checkbox-recipe"]
}
