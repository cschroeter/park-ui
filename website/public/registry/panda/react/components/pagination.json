{
  "files": [
    {
      "filename": "pagination.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Pagination as ArkPagination, type PaginationRootProps } from '@ark-ui/react/pagination'\nimport { forwardRef } from 'react'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { type PaginationVariantProps, pagination } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { Button } from '~/components/ui/button'\nimport { IconButton } from '~/components/ui/icon-button'\n\nexport interface PaginationProps\n  extends Assign<JsxStyleProps, PaginationRootProps>,\n    PaginationVariantProps {}\n\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>((props, ref) => {\n  const [variantProps, paginationProps] = pagination.splitVariantProps(props)\n  const [cssProps, localProps] = splitCssProps(paginationProps)\n  const { className, ...rootProps } = localProps\n  const styles = pagination(variantProps)\n\n  return (\n    <ArkPagination.Root\n      className={cx(styles.root, css(cssProps), className)}\n      ref={ref}\n      {...rootProps}\n    >\n      <ArkPagination.PrevTrigger className={styles.prevTrigger} asChild>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronLeftIcon />\n        </IconButton>\n      </ArkPagination.PrevTrigger>\n      <ArkPagination.Context>\n        {(pagination) =>\n          pagination.pages.map((page, index) =>\n            page.type === 'page' ? (\n              <ArkPagination.Item className={styles.item} key={index} {...page} asChild>\n                <Button variant=\"outline\">{page.value}</Button>\n              </ArkPagination.Item>\n            ) : (\n              <ArkPagination.Ellipsis key={index} index={index} className={styles.ellipsis}>\n                &#8230;\n              </ArkPagination.Ellipsis>\n            ),\n          )\n        }\n      </ArkPagination.Context>\n      <ArkPagination.NextTrigger className={styles.nextTrigger} asChild>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronRightIcon />\n        </IconButton>\n      </ArkPagination.NextTrigger>\n    </ArkPagination.Root>\n  )\n})\n\nPagination.displayName = 'Pagination'\n\nconst ChevronLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Left Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m15 18l-6-6l6-6\"\n    />\n  </svg>\n)\n\nconst ChevronRightIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Right Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m9 18l6-6l-6-6\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
