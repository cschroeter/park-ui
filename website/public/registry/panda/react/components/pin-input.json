{
  "files": [
    {
      "filename": "pin-input.tsx",
      "content": "import { ark } from '@ark-ui/react/factory'\nimport {\n  PinInput as ArkPinInput,\n  type PinInputProps as ArkPinInputProps,\n} from '@ark-ui/react/pin-input'\nimport { forwardRef, type ReactNode } from 'react'\nimport { styled } from 'styled-system/jsx'\nimport { input, pinInput, type PinInputVariantProps } from 'styled-system/recipes'\n\nexport interface PinInputProps extends ArkPinInputProps, PinInputVariantProps {\n  children?: ReactNode\n  length?: number\n}\n\nconst Input = styled(ark.input, input)\n\nexport const PinInput = forwardRef<HTMLDivElement, PinInputProps>((props, ref) => {\n  const [variantProps, localProps] = pinInput.splitVariantProps(props)\n  const { children, length, ...rootProps } = localProps\n  const arr = Array.from({ length: length ?? 4 }, (_, index) => index)\n  const styles = pinInput(variantProps)\n\n  return (\n    <ArkPinInput.Root className={styles.root} {...rootProps}>\n      {children && <ArkPinInput.Label className={styles.label}>{children}</ArkPinInput.Label>}\n      <ArkPinInput.Control className={styles.control}>\n        {arr.map((id, index) => (\n          <ArkPinInput.Input className={styles.input} key={id} index={index} asChild>\n            <Input size=\"lg\" width=\"0\" textAlign=\"center\" />\n          </ArkPinInput.Input>\n        ))}\n      </ArkPinInput.Control>\n    </ArkPinInput.Root>\n  )\n})\n\nPinInput.displayName = 'PinInput'\n",
      "hasMultipleParts": false
    }
  ]
}
