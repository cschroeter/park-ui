{
  "files": [
    {
      "filename": "radio-button-group.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { RadioGroup } from '@ark-ui/react/radio-group'\nimport { type RadioButtonGroupVariantProps, radioButtonGroup } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(radioButtonGroup)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, RadioGroup.RootProps>,\n    RadioButtonGroupVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(RadioGroup.Root, 'root')\n\nexport const Indicator = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, RadioGroup.IndicatorProps>\n>(RadioGroup.Indicator, 'indicator')\n\nexport const ItemControl = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, RadioGroup.ItemControlProps>\n>(RadioGroup.ItemControl, 'itemControl')\n\nexport const Item = withContext<HTMLLabelElement, Assign<JsxStyleProps, RadioGroup.ItemProps>>(\n  RadioGroup.Item,\n  'item',\n)\n\nexport const ItemText = withContext<\n  HTMLSpanElement,\n  Assign<JsxStyleProps, RadioGroup.ItemTextProps>\n>(RadioGroup.ItemText, 'itemText')\n\nexport const Label = withContext<HTMLLabelElement, Assign<JsxStyleProps, RadioGroup.LabelProps>>(\n  RadioGroup.Label,\n  'label',\n)\n\nexport {\n  RadioGroupContext as Context,\n  type RadioGroupContextProps as ContextProps,\n} from '@ark-ui/react/radio-group'\n",
      "hasMultipleParts": true
    }
  ]
}
