{
  "files": [
    {
      "filename": "accordion.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Accordion } from '@ark-ui/react/accordion'\nimport { type AccordionVariantProps, accordion } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(accordion)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, Accordion.RootProps>,\n    AccordionVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(Accordion.Root, 'root')\n\nexport const ItemContent = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Accordion.ItemContentProps>\n>(Accordion.ItemContent, 'itemContent')\n\nexport const ItemIndicator = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Accordion.ItemIndicatorProps>\n>(Accordion.ItemIndicator, 'itemIndicator')\n\nexport const Item = withContext<HTMLDivElement, Assign<JsxStyleProps, Accordion.ItemProps>>(\n  Accordion.Item,\n  'item',\n)\n\nexport const ItemTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, Accordion.ItemTriggerProps>\n>(Accordion.ItemTrigger, 'itemTrigger')\n\nexport {\n  AccordionContext as Context,\n  AccordionItemContext as ItemContext,\n  type AccordionContextProps as ContextProps,\n  type AccordionItemContextProps as ItemContextProps,\n} from '@ark-ui/react/accordion'\n\nexport type {\n  AccordionFocusChangeDetails as FocusChangeDetails,\n  AccordionValueChangeDetails as ValueChangeDetails,\n} from '@ark-ui/react/accordion'\n",
      "hasMultipleParts": true
    }
  ]
}
