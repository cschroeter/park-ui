{
  "files": [
    {
      "filename": "dialog.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Dialog } from '@ark-ui/react/dialog'\nimport { type DialogVariantProps, dialog } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(dialog)\n\nexport interface RootProps extends Dialog.RootProps, DialogVariantProps {}\nexport const Root = withRootProvider<RootProps>(Dialog.Root)\n\nexport const Backdrop = withContext<HTMLDivElement, Assign<JsxStyleProps, Dialog.BackdropProps>>(\n  Dialog.Backdrop,\n  'backdrop',\n)\n\nexport const CloseTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, Dialog.CloseTriggerProps>\n>(Dialog.CloseTrigger, 'closeTrigger')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Dialog.ContentProps>>(\n  Dialog.Content,\n  'content',\n)\n\nexport const Description = withContext<\n  HTMLParagraphElement,\n  Assign<JsxStyleProps, Dialog.DescriptionProps>\n>(Dialog.Description, 'description')\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Dialog.PositionerProps>\n>(Dialog.Positioner, 'positioner')\n\nexport const Title = withContext<HTMLHeadingElement, Assign<JsxStyleProps, Dialog.TitleProps>>(\n  Dialog.Title,\n  'title',\n)\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Dialog.TriggerProps>>(\n  Dialog.Trigger,\n  'trigger',\n)\n\nexport {\n  DialogContext as Context,\n  type DialogContextProps as ContextProps,\n} from '@ark-ui/react/dialog'\n",
      "hasMultipleParts": true
    }
  ]
}
