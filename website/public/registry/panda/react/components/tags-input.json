{
  "files": [
    {
      "filename": "tags-input.tsx",
      "content": "import { TagsInput } from '@ark-ui/react/tags-input'\nimport type { ComponentProps } from 'react'\nimport { styled } from 'styled-system/jsx'\nimport { tagsInput } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tagsInput)\n\nexport const Root = withProvider(styled(TagsInput.Root), 'root')\nexport const ClearTrigger = withContext(styled(TagsInput.ClearTrigger), 'clearTrigger')\nexport const Control = withContext(styled(TagsInput.Control), 'control')\nexport const Input = withContext(styled(TagsInput.Input), 'input')\nexport const Item = withContext(styled(TagsInput.Item), 'item')\nexport const ItemDeleteTrigger = withContext(\n  styled(TagsInput.ItemDeleteTrigger),\n  'itemDeleteTrigger',\n)\nexport const ItemInput = withContext(styled(TagsInput.ItemInput), 'itemInput')\nexport const ItemPreview = withContext(styled(TagsInput.ItemPreview), 'itemPreview')\nexport const ItemText = withContext(styled(TagsInput.ItemText), 'itemText')\nexport const Label = withContext(styled(TagsInput.Label), 'label')\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface ClearTriggerProps extends ComponentProps<typeof ClearTrigger> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface InputProps extends ComponentProps<typeof Input> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemDeleteTriggerProps extends ComponentProps<typeof ItemDeleteTrigger> {}\nexport interface ItemInputProps extends ComponentProps<typeof ItemInput> {}\nexport interface ItemPreviewProps extends ComponentProps<typeof ItemPreview> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\n",
      "hasMultipleParts": true
    }
  ]
}
