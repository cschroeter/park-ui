{
  "files": [
    {
      "filename": "date-picker.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { DatePicker } from '@ark-ui/react/date-picker'\nimport { type DatePickerVariantProps, datePicker } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(datePicker)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, DatePicker.RootProps>,\n    DatePickerVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(DatePicker.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.ClearTriggerProps>\n>(DatePicker.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, DatePicker.ContentProps>>(\n  DatePicker.Content,\n  'content',\n)\n\nexport const Control = withContext<HTMLDivElement, Assign<JsxStyleProps, DatePicker.ControlProps>>(\n  DatePicker.Control,\n  'control',\n)\n\nexport const Input = withContext<HTMLInputElement, Assign<JsxStyleProps, DatePicker.InputProps>>(\n  DatePicker.Input,\n  'input',\n)\n\nexport const Label = withContext<HTMLLabelElement, Assign<JsxStyleProps, DatePicker.LabelProps>>(\n  DatePicker.Label,\n  'label',\n)\n\nexport const MonthSelect = withContext<\n  HTMLSelectElement,\n  Assign<JsxStyleProps, DatePicker.MonthSelectProps>\n>(DatePicker.MonthSelect, 'monthSelect')\n\nexport const NextTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.NextTriggerProps>\n>(DatePicker.NextTrigger, 'nextTrigger')\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, DatePicker.MonthSelectProps>\n>(DatePicker.Positioner, 'positioner')\n\nexport const PresetTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.PresetTriggerProps>\n>(DatePicker.PresetTrigger, 'presetTrigger')\n\nexport const PrevTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.PrevTriggerProps>\n>(DatePicker.PrevTrigger, 'prevTrigger')\n\nexport const RangeText = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, DatePicker.RangeTextProps>\n>(DatePicker.RangeText, 'rangeText')\n\nexport const TableBody = withContext<\n  HTMLTableSectionElement,\n  Assign<JsxStyleProps, DatePicker.TableBodyProps>\n>(DatePicker.TableBody, 'tableBody')\n\nexport const TableCell = withContext<\n  HTMLTableCellElement,\n  Assign<JsxStyleProps, DatePicker.TableCellProps>\n>(DatePicker.TableCell, 'tableCell')\n\nexport const TableCellTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.TableCellTriggerProps>\n>(DatePicker.TableCellTrigger, 'tableCellTrigger')\n\nexport const TableHead = withContext<\n  HTMLTableSectionElement,\n  Assign<JsxStyleProps, DatePicker.TableHeadProps>\n>(DatePicker.TableHead, 'tableHead')\n\nexport const TableHeader = withContext<\n  HTMLTableCellElement,\n  Assign<JsxStyleProps, DatePicker.TableHeaderProps>\n>(DatePicker.TableHeader, 'tableHeader')\n\nexport const Table = withContext<HTMLTableElement, Assign<JsxStyleProps, DatePicker.TableProps>>(\n  DatePicker.Table,\n  'table',\n)\n\nexport const TableRow = withContext<\n  HTMLTableRowElement,\n  Assign<JsxStyleProps, DatePicker.TableRowProps>\n>(DatePicker.TableRow, 'tableRow')\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.TriggerProps>\n>(DatePicker.Trigger, 'trigger')\n\nexport const ViewControl = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, DatePicker.ViewControlProps>\n>(DatePicker.ViewControl, 'viewControl')\n\nexport const View = withContext<HTMLDivElement, Assign<JsxStyleProps, DatePicker.ViewProps>>(\n  DatePicker.View,\n  'view',\n)\n\nexport const ViewTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, DatePicker.ViewTriggerProps>\n>(DatePicker.ViewTrigger, 'viewTrigger')\n\nexport const YearSelect = withContext<\n  HTMLSelectElement,\n  Assign<JsxStyleProps, DatePicker.YearSelectProps>\n>(DatePicker.YearSelect, 'yearSelect')\n\nexport {\n  DatePickerContext as Context,\n  type DatePickerContextProps as ContextProps,\n} from '@ark-ui/react/date-picker'\n",
      "hasMultipleParts": true
    }
  ]
}
