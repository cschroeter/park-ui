{
  "files": [
    {
      "filename": "breadcrumb.tsx",
      "content": "import { ark } from '@ark-ui/react/factory'\nimport { forwardRef, type ComponentProps, type ReactNode } from 'react'\nimport { css, cx } from 'styled-system/css'\nimport { styled, splitCssProps } from 'styled-system/jsx'\nimport type { Assign, JsxStyleProps } from 'styled-system/types'\nimport { breadcrumb, type BreadcrumbVariantProps } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(breadcrumb)\n\nconst Root = withProvider(styled(ark.nav), 'root')\nconst List = withContext(styled(ark.ul), 'list')\nconst Item = withContext(styled(ark.li), 'item')\nconst Link = withContext(styled(ark.a), 'link')\nconst Separator = withContext(styled(ark.span), 'separator')\n\nexport interface BreadcrumbProps\n  extends Assign<JsxStyleProps, ComponentProps<typeof Root>>,\n  BreadcrumbVariantProps {\n  links: Array<{ href: string, children: ReactNode }>\n  current?: number,\n  separator?: ReactNode\n}\n\nexport const Breadcrumb = forwardRef<HTMLDivElement, BreadcrumbProps>((props, ref) => {\n  const [variantProps, breadcrumbProps] = breadcrumb.splitVariantProps(props)\n  const [cssProps, localProps] = splitCssProps(breadcrumbProps)\n  const { links, className, current = 0, separator, ...rootProps } = localProps\n  const styles = breadcrumb(variantProps)\n\n  return (\n    <Root\n      className={cx(styles.root, css(cssProps), className)}\n      ref={ref}\n      {...rootProps}\n    >\n      <List>\n        {links.map((link, i) => (\n          <Item key={i}>\n            <Link href={link.href} className={i === current ? 'active' : ''}>\n              {link.children}\n            </Link>\n            {i < links.length - 1 && (separator || <Separator>{' / '}</Separator>)}\n          </Item>\n        ))}\n      </List>\n    </Root>\n  )\n})\n\nBreadcrumb.displayName = 'Breadcrumb'\n",
      "hasMultipleParts": true
    }
  ]
}
