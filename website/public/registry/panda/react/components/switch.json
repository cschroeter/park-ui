{
  "files": [
    {
      "filename": "switch.tsx",
      "content": "import { Switch as ArkSwitch, type SwitchProps as ArkSwitchProps } from '@ark-ui/react/switch'\nimport { forwardRef, type ReactNode } from 'react'\nimport { switchRecipe, type SwitchRecipeVariantProps } from 'styled-system/recipes'\n\nexport interface SwitchProps extends ArkSwitchProps, SwitchRecipeVariantProps {\n  children?: ReactNode\n}\n\nexport const Switch = forwardRef<HTMLLabelElement, SwitchProps>((props, ref) => {\n  const [variantProps, localProps] = switchRecipe.splitVariantProps(props)\n  const { children, checked, ...rootProps } = localProps\n  const styles = switchRecipe(variantProps)\n\n  return (\n    <ArkSwitch.Root ref={ref} className={styles.root} {...rootProps}>\n      <ArkSwitch.Control className={styles.control}>\n        <ArkSwitch.Thumb className={styles.thumb} />\n      </ArkSwitch.Control>\n      {children && <ArkSwitch.Label className={styles.label}>{children}</ArkSwitch.Label>}\n    </ArkSwitch.Root>\n  )\n})\n\nSwitch.displayName = 'Switch'\n",
      "hasMultipleParts": false
    }
  ]
}
