{
  "files": [
    {
      "filename": "drawer.tsx",
      "content": "import type { Assign, HTMLArkProps } from '@ark-ui/react'\nimport { Dialog as Drawer } from '@ark-ui/react/dialog'\nimport { ark } from '@ark-ui/react/factory'\nimport { type DrawerVariantProps, drawer } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(drawer)\n\nexport interface RootProps extends Drawer.RootProps, DrawerVariantProps {}\nexport const Root = withRootProvider<RootProps>(Drawer.Root)\n\nexport const Backdrop = withContext<HTMLDivElement, Assign<JsxStyleProps, Drawer.BackdropProps>>(\n  Drawer.Backdrop,\n  'backdrop',\n)\n\nexport const Body = withContext<HTMLDivElement, Assign<JsxStyleProps, HTMLArkProps<'div'>>>(\n  ark.div,\n  'body',\n)\n\nexport const CloseTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, Drawer.CloseTriggerProps>\n>(Drawer.CloseTrigger, 'closeTrigger')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Drawer.ContentProps>>(\n  Drawer.Content,\n  'content',\n)\n\nexport const Description = withContext<\n  HTMLParagraphElement,\n  Assign<JsxStyleProps, Drawer.DescriptionProps>\n>(Drawer.Description, 'description')\n\nexport const Footer = withContext<HTMLDivElement, Assign<JsxStyleProps, HTMLArkProps<'div'>>>(\n  ark.div,\n  'footer',\n)\n\nexport const Header = withContext<HTMLDivElement, Assign<JsxStyleProps, HTMLArkProps<'div'>>>(\n  ark.div,\n  'header',\n)\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Drawer.PositionerProps>\n>(Drawer.Positioner, 'positioner')\n\nexport const Title = withContext<HTMLHeadingElement, Assign<JsxStyleProps, Drawer.TitleProps>>(\n  Drawer.Title,\n  'title',\n)\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Drawer.TriggerProps>>(\n  Drawer.Trigger,\n  'trigger',\n)\n\nexport {\n  DialogContext as Context,\n  type DialogContextProps as ContextProps,\n} from '@ark-ui/react/dialog'\n",
      "hasMultipleParts": true
    }
  ]
}
