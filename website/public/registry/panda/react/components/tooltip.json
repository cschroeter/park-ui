{
  "files": [
    {
      "filename": "tooltip.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Tooltip } from '@ark-ui/react/tooltip'\nimport { type TooltipVariantProps, tooltip } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(tooltip)\n\nexport interface RootProps extends Tooltip.RootProps, TooltipVariantProps {}\nexport const Root = withRootProvider<RootProps>(Tooltip.Root)\n\nexport const Arrow = withContext<HTMLDivElement, Assign<JsxStyleProps, Tooltip.ArrowProps>>(\n  Tooltip.Arrow,\n  'arrow',\n)\n\nexport const ArrowTip = withContext<HTMLDivElement, Assign<JsxStyleProps, Tooltip.ArrowTipProps>>(\n  Tooltip.ArrowTip,\n  'arrowTip',\n)\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Tooltip.ContentProps>>(\n  Tooltip.Content,\n  'content',\n)\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Tooltip.PositionerProps>\n>(Tooltip.Positioner, 'positioner')\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Tooltip.TriggerProps>>(\n  Tooltip.Trigger,\n  'trigger',\n)\n\nexport {\n  TooltipContext as Context,\n  type TooltipContextProps as ContextProps,\n} from '@ark-ui/react/tooltip'\n",
      "hasMultipleParts": true
    }
  ]
}
