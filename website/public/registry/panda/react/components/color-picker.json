{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker as ArkColorPicker } from '@ark-ui/react/color-picker'\nimport type { ComponentProps } from 'react'\nimport { styled } from 'styled-system/jsx'\nimport { colorPicker } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nconst ColorPicker = withProvider(styled(ArkColorPicker.Root), 'root')\nconst ColorPickerArea = withContext(styled(ArkColorPicker.Area), 'area')\nconst ColorPickerAreaBackground = withContext(\n  styled(ArkColorPicker.AreaBackground),\n  'areaBackground',\n)\nconst ColorPickerAreaThumb = withContext(styled(ArkColorPicker.AreaThumb), 'areaThumb')\nconst ColorPickerChannelInput = withContext(styled(ArkColorPicker.ChannelInput), 'channelInput')\nconst ColorPickerChannelSlider = withContext(styled(ArkColorPicker.ChannelSlider), 'channelSlider')\nconst ColorPickerChannelSliderThumb = withContext(\n  styled(ArkColorPicker.ChannelSliderThumb),\n  'channelSliderThumb',\n)\nconst ColorPickerChannelSliderTrack = withContext(\n  styled(ArkColorPicker.ChannelSliderTrack),\n  'channelSliderTrack',\n)\nconst ColorPickerContent = withContext(styled(ArkColorPicker.Content), 'content')\nconst ColorPickerControl = withContext(styled(ArkColorPicker.Control), 'control')\nconst ColorPickerEyeDropperTrigger = withContext(\n  styled(ArkColorPicker.EyeDropperTrigger),\n  'eyeDropperTrigger',\n)\nconst ColorPickerFormatSelect = withContext(styled(ArkColorPicker.FormatSelect), 'formatSelect')\nconst ColorPickerFormatTrigger = withContext(styled(ArkColorPicker.FormatTrigger), 'formatTrigger')\nconst ColorPickerLabel = withContext(styled(ArkColorPicker.Label), 'label')\nconst ColorPickerPositioner = withContext(styled(ArkColorPicker.Positioner), 'positioner')\nconst ColorPickerSwatch = withContext(styled(ArkColorPicker.Swatch), 'swatch')\nconst ColorPickerSwatchGroup = withContext(styled(ArkColorPicker.SwatchGroup), 'swatchGroup')\nconst ColorPickerSwatchIndicator = withContext(\n  styled(ArkColorPicker.SwatchIndicator),\n  'swatchIndicator',\n)\nconst ColorPickerSwatchTrigger = withContext(styled(ArkColorPicker.SwatchTrigger), 'swatchTrigger')\nconst ColorPickerTransparencyGrid = withContext(\n  styled(ArkColorPicker.TransparencyGrid),\n  'transparencyGrid',\n)\nconst ColorPickerTrigger = withContext(styled(ArkColorPicker.Trigger), 'trigger')\nconst ColorPickerValueText = withContext(styled(ArkColorPicker.ValueText), 'valueText')\nconst ColorPickerView = withContext(styled(ArkColorPicker.View), 'view')\n\nconst Root = ColorPicker\nconst Area = ColorPickerArea\nconst AreaBackground = ColorPickerAreaBackground\nconst AreaThumb = ColorPickerAreaThumb\nconst ChannelInput = ColorPickerChannelInput\nconst ChannelSlider = ColorPickerChannelSlider\nconst ChannelSliderThumb = ColorPickerChannelSliderThumb\nconst ChannelSliderTrack = ColorPickerChannelSliderTrack\nconst Content = ColorPickerContent\nconst Control = ColorPickerControl\nconst EyeDropperTrigger = ColorPickerEyeDropperTrigger\nconst FormatSelect = ColorPickerFormatSelect\nconst FormatTrigger = ColorPickerFormatTrigger\nconst Label = ColorPickerLabel\nconst Positioner = ColorPickerPositioner\nconst Swatch = ColorPickerSwatch\nconst SwatchGroup = ColorPickerSwatchGroup\nconst SwatchIndicator = ColorPickerSwatchIndicator\nconst SwatchTrigger = ColorPickerSwatchTrigger\nconst TransparencyGrid = ColorPickerTransparencyGrid\nconst Trigger = ColorPickerTrigger\nconst ValueText = ColorPickerValueText\nconst View = ColorPickerView\n\nexport {\n  Area,\n  AreaBackground,\n  AreaThumb,\n  ChannelInput,\n  ChannelSlider,\n  ChannelSliderThumb,\n  ChannelSliderTrack,\n  ColorPicker,\n  ColorPickerArea,\n  ColorPickerAreaBackground,\n  ColorPickerAreaThumb,\n  ColorPickerChannelInput,\n  ColorPickerChannelSlider,\n  ColorPickerChannelSliderThumb,\n  ColorPickerChannelSliderTrack,\n  ColorPickerContent,\n  ColorPickerControl,\n  ColorPickerEyeDropperTrigger,\n  ColorPickerFormatSelect,\n  ColorPickerFormatTrigger,\n  ColorPickerLabel,\n  ColorPickerPositioner,\n  ColorPickerSwatch,\n  ColorPickerSwatchGroup,\n  ColorPickerSwatchIndicator,\n  ColorPickerSwatchTrigger,\n  ColorPickerTransparencyGrid,\n  ColorPickerTrigger,\n  ColorPickerValueText,\n  ColorPickerView,\n  Content,\n  Control,\n  EyeDropperTrigger,\n  FormatSelect,\n  FormatTrigger,\n  Label,\n  Positioner,\n  Root,\n  Swatch,\n  SwatchGroup,\n  SwatchIndicator,\n  SwatchTrigger,\n  TransparencyGrid,\n  Trigger,\n  ValueText,\n  View,\n}\n\nexport interface ColorPickerProps extends ComponentProps<typeof ColorPicker> {}\nexport interface ColorPickerAreaProps extends ComponentProps<typeof ColorPickerArea> {}\nexport interface ColorPickerAreaBackgroundProps\n  extends ComponentProps<typeof ColorPickerAreaBackground> {}\nexport interface ColorPickerAreaThumbProps extends ComponentProps<typeof ColorPickerAreaThumb> {}\nexport interface ColorPickerChannelInputProps\n  extends ComponentProps<typeof ColorPickerChannelInput> {}\nexport interface ColorPickerChannelSliderProps\n  extends ComponentProps<typeof ColorPickerChannelSlider> {}\nexport interface ColorPickerChannelSliderThumbProps\n  extends ComponentProps<typeof ColorPickerChannelSliderThumb> {}\nexport interface ColorPickerChannelSliderTrackProps\n  extends ComponentProps<typeof ColorPickerChannelSliderTrack> {}\nexport interface ColorPickerContentProps extends ComponentProps<typeof ColorPickerContent> {}\nexport interface ColorPickerControlProps extends ComponentProps<typeof ColorPickerControl> {}\nexport interface ColorPickerEyeDropperTriggerProps\n  extends ComponentProps<typeof ColorPickerEyeDropperTrigger> {}\nexport interface ColorPickerFormatSelectProps\n  extends ComponentProps<typeof ColorPickerFormatSelect> {}\nexport interface ColorPickerFormatTriggerProps\n  extends ComponentProps<typeof ColorPickerFormatTrigger> {}\nexport interface ColorPickerLabelProps extends ComponentProps<typeof ColorPickerLabel> {}\nexport interface ColorPickerPositionerProps extends ComponentProps<typeof ColorPickerPositioner> {}\nexport interface ColorPickerSwatchProps extends ComponentProps<typeof ColorPickerSwatch> {}\nexport interface ColorPickerSwatchGroupProps\n  extends ComponentProps<typeof ColorPickerSwatchGroup> {}\nexport interface ColorPickerSwatchIndicatorProps\n  extends ComponentProps<typeof ColorPickerSwatchIndicator> {}\nexport interface ColorPickerSwatchTriggerProps\n  extends ComponentProps<typeof ColorPickerSwatchTrigger> {}\nexport interface ColorPickerTransparencyGridProps\n  extends ComponentProps<typeof ColorPickerTransparencyGrid> {}\nexport interface ColorPickerTriggerProps extends ComponentProps<typeof ColorPickerTrigger> {}\nexport interface ColorPickerValueTextProps extends ComponentProps<typeof ColorPickerValueText> {}\nexport interface ColorPickerViewProps extends ComponentProps<typeof ColorPickerView> {}\n",
      "hasMultipleParts": true
    }
  ]
}
