{
  "files": [
    {
      "filename": "segment-group.tsx",
      "content": "import { SegmentGroup as ArkSegmentGroup } from '@ark-ui/react/segment-group'\nimport { styled, type HTMLStyledProps } from 'styled-system/jsx'\nimport { segmentGroup } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(segmentGroup)\n\nconst SegmentGroup = withProvider(styled(ArkSegmentGroup.Root), 'root')\nconst SegmentGroupIndicator = withContext(styled(ArkSegmentGroup.Indicator), 'indicator')\nconst SegmentGroupItem = withContext(styled(ArkSegmentGroup.Item), 'item')\nconst SegmentGroupItemControl = withContext(styled(ArkSegmentGroup.ItemControl), 'itemControl')\nconst SegmentGroupItemText = withContext(styled(ArkSegmentGroup.ItemText), 'itemText')\nconst SegmentGroupLabel = withContext(styled(ArkSegmentGroup.Label), 'label')\n\nconst Root = SegmentGroup\nconst Indicator = SegmentGroupIndicator\nconst Item = SegmentGroupItem\nconst ItemControl = SegmentGroupItemControl\nconst ItemText = SegmentGroupItemText\nconst Label = SegmentGroupLabel\n\nexport {\n  Indicator,\n  Item,\n  ItemControl,\n  ItemText,\n  Label,\n  Root,\n  SegmentGroup,\n  SegmentGroupIndicator,\n  SegmentGroupItem,\n  SegmentGroupItemControl,\n  SegmentGroupItemText,\n  SegmentGroupLabel,\n}\n\nexport interface SegmentGroupProps extends HTMLStyledProps<typeof SegmentGroup> {}\nexport interface SegmentGroupIndicatorProps extends HTMLStyledProps<typeof SegmentGroupIndicator> {}\nexport interface SegmentGroupItemProps extends HTMLStyledProps<typeof SegmentGroupItem> {}\nexport interface SegmentGroupItemControlProps\n  extends HTMLStyledProps<typeof SegmentGroupItemControl> {}\nexport interface SegmentGroupItemTextProps extends HTMLStyledProps<typeof SegmentGroupItemText> {}\nexport interface SegmentGroupLabelProps extends HTMLStyledProps<typeof SegmentGroupLabel> {}\n",
      "hasMultipleParts": true
    }
  ]
}
