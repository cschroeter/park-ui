{
  "files": [
    {
      "filename": "combobox.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Combobox } from '@ark-ui/react/combobox'\nimport { type ComboboxVariantProps, combobox } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(combobox)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, Combobox.RootProps<Combobox.CollectionItem>>,\n    ComboboxVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(Combobox.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, Combobox.ClearTriggerProps>\n>(Combobox.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Combobox.ContentProps>>(\n  Combobox.Content,\n  'content',\n)\n\nexport const Control = withContext<HTMLDivElement, Assign<JsxStyleProps, Combobox.ControlProps>>(\n  Combobox.Control,\n  'control',\n)\n\nexport const Input = withContext<HTMLInputElement, Assign<JsxStyleProps, Combobox.InputProps>>(\n  Combobox.Input,\n  'input',\n)\n\nexport const ItemGroupLabel = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Combobox.ItemGroupLabelProps>\n>(Combobox.ItemGroupLabel, 'itemGroupLabel')\n\nexport const ItemGroup = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Combobox.ItemGroupProps>\n>(Combobox.ItemGroup, 'itemGroup')\n\nexport const ItemIndicator = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Combobox.ItemIndicatorProps>\n>(Combobox.ItemIndicator, 'itemIndicator')\n\nexport const Item = withContext<HTMLDivElement, Assign<JsxStyleProps, Combobox.ItemProps>>(\n  Combobox.Item,\n  'item',\n)\n\nexport const ItemText = withContext<HTMLDivElement, Assign<JsxStyleProps, Combobox.ItemTextProps>>(\n  Combobox.ItemText,\n  'itemText',\n)\n\nexport const Label = withContext<HTMLLabelElement, Assign<JsxStyleProps, Combobox.LabelProps>>(\n  Combobox.Label,\n  'label',\n)\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Combobox.PositionerProps>\n>(Combobox.Positioner, 'positioner')\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Combobox.TriggerProps>>(\n  Combobox.Trigger,\n  'trigger',\n)\n\nexport {\n  ComboboxContext as Context,\n  type ComboboxContextProps as ContextProps,\n} from '@ark-ui/react/combobox'\n\nexport type {\n  ComboboxHighlightChangeDetails as HighlightChangeDetails,\n  ComboboxInputValueChangeDetails as InputValueChangeDetails,\n  ComboboxOpenChangeDetails as OpenChangeDetails,\n  ComboboxValueChangeDetails as ValueChangeDetails,\n} from '@ark-ui/react/combobox'\n",
      "hasMultipleParts": true
    }
  ]
}
