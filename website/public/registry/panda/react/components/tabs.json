{
  "files": [
    {
      "filename": "tabs.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Tabs } from '@ark-ui/react/tabs'\nimport { type TabsVariantProps, tabs } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tabs)\n\nexport interface RootProps extends Assign<JsxStyleProps, Tabs.RootProps>, TabsVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(Tabs.Root, 'root')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Tabs.ContentProps>>(\n  Tabs.Content,\n  'content',\n)\n\nexport const Indicator = withContext<HTMLDivElement, Assign<JsxStyleProps, Tabs.IndicatorProps>>(\n  Tabs.Indicator,\n  'indicator',\n)\n\nexport const List = withContext<HTMLDivElement, Assign<JsxStyleProps, Tabs.ListProps>>(\n  Tabs.List,\n  'list',\n)\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Tabs.TriggerProps>>(\n  Tabs.Trigger,\n  'trigger',\n)\n\nexport { TabsContext as Context, type TabsContextProps as ContextProps } from '@ark-ui/react/tabs'\n",
      "hasMultipleParts": true
    }
  ]
}
