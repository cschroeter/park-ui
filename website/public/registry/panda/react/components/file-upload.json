{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { FileUpload } from '@ark-ui/react/file-upload'\nimport { type FileUploadVariantProps, fileUpload } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(fileUpload)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, FileUpload.RootProps>,\n    FileUploadVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(FileUpload.Root, 'root')\n\nexport const Dropzone = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, FileUpload.DropzoneProps>\n>(FileUpload.Dropzone, 'dropzone')\n\nexport const ItemDeleteTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, FileUpload.ItemDeleteTriggerProps>\n>(FileUpload.ItemDeleteTrigger, 'itemDeleteTrigger')\n\nexport const ItemGroup = withContext<\n  HTMLUListElement,\n  Assign<JsxStyleProps, FileUpload.ItemGroupProps>\n>(FileUpload.ItemGroup, 'itemGroup')\n\nexport const ItemName = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, FileUpload.ItemNameProps>\n>(FileUpload.ItemName, 'itemName')\n\nexport const ItemPreviewImage = withContext<\n  HTMLImageElement,\n  Assign<JsxStyleProps, FileUpload.ItemPreviewImageProps>\n>(FileUpload.ItemPreviewImage, 'itemPreviewImage')\n\nexport const ItemPreview = withContext<\n  HTMLImageElement,\n  Assign<JsxStyleProps, FileUpload.ItemPreviewProps>\n>(FileUpload.ItemPreview, 'itemPreview')\n\nexport const Item = withContext<HTMLLIElement, Assign<JsxStyleProps, FileUpload.ItemProps>>(\n  FileUpload.Item,\n  'item',\n)\n\nexport const ItemSizeText = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, FileUpload.ItemSizeTextProps>\n>(FileUpload.ItemSizeText, 'itemSizeText')\n\nexport const Label = withContext<HTMLLabelElement, Assign<JsxStyleProps, FileUpload.LabelProps>>(\n  FileUpload.Label,\n  'label',\n)\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, FileUpload.TriggerProps>\n>(FileUpload.Trigger, 'trigger')\n\nexport {\n  FileUploadContext as Context,\n  FileUploadHiddenInput as HiddenInput,\n  type FileUploadContextProps as ContextProps,\n  type FileUploadHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/react/file-upload'\n",
      "hasMultipleParts": true
    }
  ]
}
