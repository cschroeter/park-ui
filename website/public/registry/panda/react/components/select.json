{
  "files": [
    {
      "filename": "select.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Select } from '@ark-ui/react/select'\nimport { type SelectVariantProps, select } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, Select.RootProps<Select.CollectionItem>>,\n    SelectVariantProps {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(Select.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  HTMLButtonElement,\n  Assign<JsxStyleProps, Select.ClearTriggerProps>\n>(Select.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.ContentProps>>(\n  Select.Content,\n  'content',\n)\n\nexport const Control = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.ControlProps>>(\n  Select.Control,\n  'control',\n)\n\nexport const Indicator = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.IndicatorProps>>(\n  Select.Indicator,\n  'indicator',\n)\n\nexport const ItemGroupLabel = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Select.ItemGroupLabelProps>\n>(Select.ItemGroupLabel, 'itemGroupLabel')\n\nexport const ItemGroup = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.ItemGroupProps>>(\n  Select.ItemGroup,\n  'itemGroup',\n)\n\nexport const ItemIndicator = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Select.ItemIndicatorProps>\n>(Select.ItemIndicator, 'itemIndicator')\n\nexport const Item = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.ItemProps>>(\n  Select.Item,\n  'item',\n)\n\nexport const ItemText = withContext<HTMLDivElement, Assign<JsxStyleProps, Select.ItemTextProps>>(\n  Select.ItemText,\n  'itemText',\n)\n\nexport const Label = withContext<HTMLLabelElement, Assign<JsxStyleProps, Select.LabelProps>>(\n  Select.Label,\n  'label',\n)\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<JsxStyleProps, Select.PositionerProps>\n>(Select.Positioner, 'positioner')\n\nexport const Trigger = withContext<HTMLButtonElement, Assign<JsxStyleProps, Select.TriggerProps>>(\n  Select.Trigger,\n  'trigger',\n)\n\nexport const ValueText = withContext<HTMLSpanElement, Assign<JsxStyleProps, Select.ValueTextProps>>(\n  Select.ValueText,\n  'valueText',\n)\n\nexport {\n  SelectContext as Context,\n  SelectHiddenSelect as HiddenSelect,\n  type SelectContextProps as ContextProps,\n  type SelectHiddenSelectProps as HiddenSelectProps,\n} from '@ark-ui/react/select'\n",
      "hasMultipleParts": true
    }
  ]
}
