{
  "files": [
    {
      "filename": "checkbox.tsx",
      "content": "import { Checkbox as ArkCheckbox, type CheckboxProps as ArkCheckboxProps } from '@ark-ui/solid'\nimport { Show, children, splitProps, type JSX } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { checkbox, type CheckboxVariantProps } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\n\nexport interface CheckboxProps\n  extends ArkCheckboxProps,\n    CheckboxVariantProps,\n    Omit<HTMLStyledProps<'label'>, 'defaultChecked' | 'dir' | 'translate' | 'content' | 'color'> {\n  children?: JSX.Element\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const [variantProps, localProps] = checkbox.splitVariantProps(props)\n  const [local, rootProps] = splitProps(localProps, ['children'])\n  const getChildren = children(() => local.children)\n  const styles = checkbox(variantProps)\n\n  return (\n    <ArkCheckbox.Root class={cx(styles.root, css(rootProps))} {...rootProps}>\n      {(state) => (\n        <>\n          <ArkCheckbox.Control class={styles.control}>\n            <Show when={state().isChecked}>\n              <CheckIcon />\n            </Show>\n            <Show when={state().isIndeterminate}>\n              <MinusIcon />\n            </Show>\n          </ArkCheckbox.Control>\n          <Show when={getChildren()}>\n            <ArkCheckbox.Label class={styles.label}>{local.children}</ArkCheckbox.Label>\n          </Show>\n        </>\n      )}\n    </ArkCheckbox.Root>\n  )\n}\n\nconst CheckIcon = () => (\n  <svg viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M11.6666 3.5L5.24992 9.91667L2.33325 7\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n)\n\nconst MinusIcon = () => (\n  <svg viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M2.91675 7H11.0834\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
