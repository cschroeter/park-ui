{
  "files": [
    {
      "filename": "drawer.tsx",
      "content": "import { type Assign, Dialog as Drawer, type HTMLArkProps, ark } from '@ark-ui/solid'\nimport { type DrawerVariantProps, drawer } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(drawer)\n\nexport interface RootProps extends Drawer.RootProps, DrawerVariantProps {}\nexport const Root = withRootProvider<RootProps>(Drawer.Root)\n\nexport const Backdrop = withContext<Assign<JsxStyleProps, Drawer.BackdropProps>>(\n  Drawer.Backdrop,\n  'backdrop',\n)\n\nexport const Body = withContext<Assign<JsxStyleProps, HTMLArkProps<'div'>>>(ark.div, 'body')\n\nexport const CloseTrigger = withContext<Assign<JsxStyleProps, Drawer.CloseTriggerProps>>(\n  Drawer.CloseTrigger,\n  'closeTrigger',\n)\n\nexport const Content = withContext<Assign<JsxStyleProps, Drawer.ContentProps>>(\n  Drawer.Content,\n  'content',\n)\n\nexport const Description = withContext<Assign<JsxStyleProps, Drawer.DescriptionProps>>(\n  Drawer.Description,\n  'description',\n)\n\nexport const Footer = withContext<Assign<JsxStyleProps, HTMLArkProps<'div'>>>(ark.div, 'footer')\n\nexport const Header = withContext<Assign<JsxStyleProps, HTMLArkProps<'div'>>>(ark.div, 'header')\n\nexport const Positioner = withContext<Assign<JsxStyleProps, Drawer.PositionerProps>>(\n  Drawer.Positioner,\n  'positioner',\n)\n\nexport const Title = withContext<Assign<JsxStyleProps, Drawer.TitleProps>>(Drawer.Title, 'title')\n\nexport const Trigger = withContext<Assign<JsxStyleProps, Drawer.TriggerProps>>(\n  Drawer.Trigger,\n  'trigger',\n)\n\nexport {\n  DialogContext as Context,\n  type DialogContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
