{
  "files": [
    {
      "filename": "date-picker.tsx",
      "content": "import { type Assign, DatePicker } from '@ark-ui/solid'\nimport { type DatePickerVariantProps, datePicker } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(datePicker)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, DatePicker.RootProps>,\n    DatePickerVariantProps {}\nexport const Root = withProvider<RootProps>(DatePicker.Root, 'root')\n\nexport const ClearTrigger = withContext<Assign<JsxStyleProps, DatePicker.ClearTriggerProps>>(\n  DatePicker.ClearTrigger,\n  'clearTrigger',\n)\n\nexport const Content = withContext<Assign<JsxStyleProps, DatePicker.ContentProps>>(\n  DatePicker.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<JsxStyleProps, DatePicker.ControlProps>>(\n  DatePicker.Control,\n  'control',\n)\n\nexport const Input = withContext<Assign<JsxStyleProps, DatePicker.InputProps>>(\n  DatePicker.Input,\n  'input',\n)\n\nexport const Label = withContext<Assign<JsxStyleProps, DatePicker.LabelProps>>(\n  DatePicker.Label,\n  'label',\n)\n\nexport const MonthSelect = withContext<Assign<JsxStyleProps, DatePicker.MonthSelectProps>>(\n  DatePicker.MonthSelect,\n  'monthSelect',\n)\n\nexport const NextTrigger = withContext<Assign<JsxStyleProps, DatePicker.NextTriggerProps>>(\n  DatePicker.NextTrigger,\n  'nextTrigger',\n)\n\nexport const Positioner = withContext<Assign<JsxStyleProps, DatePicker.PositionerProps>>(\n  DatePicker.Positioner,\n  'positioner',\n)\n\nexport const PresetTrigger = withContext<Assign<JsxStyleProps, DatePicker.PresetTriggerProps>>(\n  DatePicker.PresetTrigger,\n  'presetTrigger',\n)\n\nexport const PrevTrigger = withContext<Assign<JsxStyleProps, DatePicker.PrevTriggerProps>>(\n  DatePicker.PrevTrigger,\n  'prevTrigger',\n)\n\nexport const RangeText = withContext<Assign<JsxStyleProps, DatePicker.RangeTextProps>>(\n  DatePicker.RangeText,\n  'rangeText',\n)\n\nexport const TableBody = withContext<Assign<JsxStyleProps, DatePicker.TableBodyProps>>(\n  DatePicker.TableBody,\n  'tableBody',\n)\n\nexport const TableCell = withContext<Assign<JsxStyleProps, DatePicker.TableCellProps>>(\n  DatePicker.TableCell,\n  'tableCell',\n)\n\nexport const TableCellTrigger = withContext<\n  Assign<JsxStyleProps, DatePicker.TableCellTriggerProps>\n>(DatePicker.TableCellTrigger, 'tableCellTrigger')\n\nexport const TableHead = withContext<Assign<JsxStyleProps, DatePicker.TableHeadProps>>(\n  DatePicker.TableHead,\n  'tableHead',\n)\n\nexport const TableHeader = withContext<Assign<JsxStyleProps, DatePicker.TableHeaderProps>>(\n  DatePicker.TableHeader,\n  'tableHeader',\n)\n\nexport const Table = withContext<Assign<JsxStyleProps, DatePicker.TableProps>>(\n  DatePicker.Table,\n  'table',\n)\n\nexport const TableRow = withContext<Assign<JsxStyleProps, DatePicker.TableRowProps>>(\n  DatePicker.TableRow,\n  'tableRow',\n)\n\nexport const Trigger = withContext<Assign<JsxStyleProps, DatePicker.TriggerProps>>(\n  DatePicker.Trigger,\n  'trigger',\n)\n\nexport const ViewControl = withContext<Assign<JsxStyleProps, DatePicker.ViewControlProps>>(\n  DatePicker.ViewControl,\n  'viewControl',\n)\n\nexport const View = withContext<Assign<JsxStyleProps, DatePicker.ViewProps>>(\n  DatePicker.View,\n  'view',\n)\n\nexport const ViewTrigger = withContext<Assign<JsxStyleProps, DatePicker.ViewTriggerProps>>(\n  DatePicker.ViewTrigger,\n  'viewTrigger',\n)\n\nexport const YearSelect = withContext<Assign<JsxStyleProps, DatePicker.YearSelectProps>>(\n  DatePicker.YearSelect,\n  'yearSelect',\n)\n\nexport {\n  DatePickerContext as Context,\n  type DatePickerContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
