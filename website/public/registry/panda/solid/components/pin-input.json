{
  "files": [
    {
      "filename": "pin-input.tsx",
      "content": "import { ark, PinInput as ArkPinInput, type PinInputProps as ArkPinInputProps } from '@ark-ui/solid'\nimport { Show, Index, splitProps, children, type JSX } from 'solid-js'\nimport { pinInput, input, type PinInputVariantProps } from 'styled-system/recipes'\nimport { styled } from 'styled-system/jsx'\n\nexport interface PinInputProps extends ArkPinInputProps, PinInputVariantProps {\n  children?: JSX.Element\n  length?: number\n}\n\nconst Input = styled(ark.input, input)\n\nexport const PinInput = (props: PinInputProps) => {\n  const [variantProps, localProps] = pinInput.splitVariantProps(props)\n  const [local, rootProps] = splitProps(localProps, ['children', 'length'])\n  const getChildren = children(() => local.children)\n  const arr = Array.from({ length: local.length ?? 4 }, (_, index) => index)\n  const styles = pinInput(variantProps)\n\n  return (\n    <ArkPinInput.Root class={styles.root} {...rootProps}>\n      <Show when={getChildren()}>\n        <ArkPinInput.Label class={styles.label}>{local.children}</ArkPinInput.Label>\n      </Show>\n      <ArkPinInput.Control class={styles.control}>\n        <Index each={arr}>\n          {(id) => (\n            <ArkPinInput.Input class={styles.input} index={id()} asChild>\n              <Input size=\"lg\" width=\"0\" textAlign=\"center\" />\n            </ArkPinInput.Input>\n          )}\n        </Index>\n      </ArkPinInput.Control>\n    </ArkPinInput.Root>\n  )\n}\n\nPinInput.displayName = 'PinInput'\n",
      "hasMultipleParts": false
    }
  ]
}
