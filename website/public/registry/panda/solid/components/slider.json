{
  "files": [
    {
      "filename": "slider.tsx",
      "content": "import { Slider as ArkSlider, type SliderProps as ArkSliderProps } from '@ark-ui/solid'\nimport { Index, Show, children, splitProps, type JSX } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { slider, type SliderVariantProps } from 'styled-system/recipes'\nimport type { Assign, HTMLStyledProps } from 'styled-system/types'\n\nexport interface SliderProps\n  extends Assign<HTMLStyledProps<'div'>, ArkSliderProps>,\n    SliderVariantProps {\n  children?: JSX.Element\n  marks?: {\n    value: number\n    label?: JSX.Element\n  }[]\n}\n\nexport const Slider = (props: SliderProps) => {\n  const [variantProps, localProps] = slider.splitVariantProps(props)\n  const [local, rootProps] = splitProps(localProps, ['children'])\n  const getChildren = children(() => local.children)\n  const styles = slider(variantProps)\n\n  return (\n    <ArkSlider.Root class={cx(styles.root, css(rootProps))} {...rootProps}>\n      {(api) => (\n        <>\n          <Show when={getChildren()}>\n            <ArkSlider.Label class={styles.label}>{getChildren()}</ArkSlider.Label>\n          </Show>\n          <ArkSlider.Control class={styles.control}>\n            <ArkSlider.Track class={styles.track}>\n              <ArkSlider.Range class={styles.range} />\n            </ArkSlider.Track>\n            <Index each={api().value}>\n              {(_, index) => <ArkSlider.Thumb index={index} class={styles.thumb} />}\n            </Index>\n          </ArkSlider.Control>\n          <Show when={rootProps.marks}>\n            <ArkSlider.MarkerGroup class={styles.markerGroup}>\n              <Index each={rootProps.marks}>\n                {(mark) => (\n                  <ArkSlider.Marker value={mark().value} class={styles.marker}>\n                    {mark().label}\n                  </ArkSlider.Marker>\n                )}\n              </Index>\n            </ArkSlider.MarkerGroup>\n          </Show>\n        </>\n      )}\n    </ArkSlider.Root>\n  )\n}\n",
      "hasMultipleParts": false
    }
  ]
}
