{
  "files": [
    {
      "filename": "accordion.tsx",
      "content": "import { Accordion, type Assign } from '@ark-ui/solid'\nimport { type AccordionVariantProps, accordion } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(accordion)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, Accordion.RootProps>,\n    AccordionVariantProps {}\nexport const Root = withProvider<RootProps>(Accordion.Root, 'root')\n\nexport const ItemContent = withContext<Assign<JsxStyleProps, Accordion.ItemContentProps>>(\n  Accordion.ItemContent,\n  'itemContent',\n)\n\nexport const ItemIndicator = withContext<Assign<JsxStyleProps, Accordion.ItemIndicatorProps>>(\n  Accordion.ItemIndicator,\n  'itemIndicator',\n)\n\nexport const Item = withContext<Assign<JsxStyleProps, Accordion.ItemProps>>(Accordion.Item, 'item')\n\nexport const ItemTrigger = withContext<Assign<JsxStyleProps, Accordion.ItemTriggerProps>>(\n  Accordion.ItemTrigger,\n  'itemTrigger',\n)\n\nexport {\n  AccordionContext as Context,\n  AccordionItemContext as ItemContext,\n  type AccordionContextProps as ContextProps,\n  type AccordionItemContextProps as ItemContextProps,\n} from '@ark-ui/solid'\n\nexport type {\n  AccordionFocusChangeDetails as FocusChangeDetails,\n  AccordionValueChangeDetails as ValueChangeDetails,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
