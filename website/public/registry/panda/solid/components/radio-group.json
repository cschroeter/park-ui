{
  "files": [
    {
      "filename": "radio-group.tsx",
      "content": "import { RadioGroup as ArkRadioGroup } from '@ark-ui/solid'\nimport { styled } from 'styled-system/jsx'\nimport { radioGroup } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(radioGroup)\n\nexport const RadioGroupRoot = withProvider(styled(ArkRadioGroup.Root), 'root')\nexport const RadioGroupIndicator = withContext(styled(ArkRadioGroup.Indicator), 'indicator')\nexport const RadioGroupItem = withContext(styled(ArkRadioGroup.Item), 'item')\nexport const RadioGroupItemControl = withContext(styled(ArkRadioGroup.ItemControl), 'itemControl')\nexport const RadioGroupItemText = withContext(styled(ArkRadioGroup.ItemText), 'itemText')\nexport const RadioGroupLabel = withContext(styled(ArkRadioGroup.Label), 'label')\n\nexport const RadioGroup = Object.assign(RadioGroupRoot, {\n  Root: RadioGroupRoot,\n  Indicator: RadioGroupIndicator,\n  Item: RadioGroupItem,\n  ItemControl: RadioGroupItemControl,\n  ItemText: RadioGroupItemText,\n  Label: RadioGroupLabel,\n})\n\nexport type RadioGroupProps = typeof RadioGroupRoot\nexport type RadioGroupIndicatorProps = typeof RadioGroupIndicator\nexport type RadioGroupItemProps = typeof RadioGroupItem\nexport type RadioGroupItemControlProps = typeof RadioGroupItemControl\nexport type RadioGroupItemTextProps = typeof RadioGroupItemText\nexport type RadioGroupLabelProps = typeof RadioGroupLabel\n",
      "hasMultipleParts": true
    }
  ]
}
