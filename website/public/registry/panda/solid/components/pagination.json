{
  "files": [
    {
      "filename": "pagination.tsx",
      "content": "import { Pagination as ArkPagination, type Assign, type PaginationRootProps } from '@ark-ui/solid'\nimport { For, splitProps } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { type PaginationVariantProps, pagination } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { IconButton } from '~/components/ui/icon-button'\nimport { Button } from './button'\n\nexport interface PaginationProps\n  extends Assign<JsxStyleProps, PaginationRootProps>,\n    PaginationVariantProps {}\n\nexport const Pagination = (props: PaginationProps) => {\n  const [variantProps, numberInputProps] = pagination.splitVariantProps(props)\n  const [cssProps, elementProps] = splitCssProps(numberInputProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['children', 'class'])\n  const styles = pagination(variantProps)\n\n  return (\n    <ArkPagination.Root class={cx(styles.root, css(cssProps), localProps.class)} {...rootProps}>\n      <ArkPagination.PrevTrigger class={styles.prevTrigger}>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronLeftIcon />\n        </IconButton>\n      </ArkPagination.PrevTrigger>\n      <ArkPagination.Context>\n        {(pagiation) => (\n          <For each={pagiation().pages}>\n            {(page, index) =>\n              page.type === 'page' ? (\n                <ArkPagination.Item\n                  {...page}\n                  class={styles.item}\n                  asChild={(props) => <Button {...props} variant=\"outline\" />}\n                >\n                  {page.value}\n                </ArkPagination.Item>\n              ) : (\n                <ArkPagination.Ellipsis index={index()} class={styles.ellipsis}>\n                  &#8230;\n                </ArkPagination.Ellipsis>\n              )\n            }\n          </For>\n        )}\n      </ArkPagination.Context>\n      <ArkPagination.NextTrigger class={styles.nextTrigger}>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronRightIcon />\n        </IconButton>\n      </ArkPagination.NextTrigger>\n    </ArkPagination.Root>\n  )\n}\n\nconst ChevronLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Left Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m15 18l-6-6l6-6\"\n    />\n  </svg>\n)\n\nconst ChevronRightIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Right Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m9 18l6-6l-6-6\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
