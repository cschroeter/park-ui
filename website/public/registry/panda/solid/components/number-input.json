{
  "files": [
    {
      "filename": "number-input.tsx",
      "content": "import {\n  NumberInput as ArkNumberInput,\n  type Assign,\n  type NumberInputRootProps,\n} from '@ark-ui/solid'\nimport { Show, children, splitProps } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { type NumberInputVariantProps, numberInput } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\n\nexport interface NumberInputProps\n  extends Assign<JsxStyleProps, NumberInputRootProps>,\n    NumberInputVariantProps {}\n\nexport const NumberInput = (props: NumberInputProps) => {\n  const [variantProps, numberInputProps] = numberInput.splitVariantProps(props)\n  const [cssProps, elementProps] = splitCssProps(numberInputProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['children', 'class'])\n  const getChildren = children(() => localProps.children)\n  const styles = numberInput(variantProps)\n\n  return (\n    <ArkNumberInput.Root class={cx(styles.root, css(cssProps), localProps.class)} {...rootProps}>\n      <Show when={getChildren()}>\n        <ArkNumberInput.Label class={styles.label}>{getChildren()}</ArkNumberInput.Label>\n      </Show>\n      <ArkNumberInput.Control class={styles.control}>\n        <ArkNumberInput.Input class={styles.input} />\n        <ArkNumberInput.IncrementTrigger class={styles.incrementTrigger}>\n          <ChevronUpIcon />\n        </ArkNumberInput.IncrementTrigger>\n        <ArkNumberInput.DecrementTrigger class={styles.decrementTrigger}>\n          <ChevronDownIcon />\n        </ArkNumberInput.DecrementTrigger>\n      </ArkNumberInput.Control>\n    </ArkNumberInput.Root>\n  )\n}\n\nconst ChevronUpIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Up Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m18 15l-6-6l-6 6\"\n    />\n  </svg>\n)\n\nconst ChevronDownIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Down Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m6 9l6 6l6-6\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
