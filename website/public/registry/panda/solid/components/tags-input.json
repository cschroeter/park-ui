{
  "files": [
    {
      "filename": "tags-input.tsx",
      "content": "import { type Assign, TagsInput } from '@ark-ui/solid'\nimport { type TagsInputVariantProps, tagsInput } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tagsInput)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, TagsInput.RootProps>,\n    TagsInputVariantProps {}\nexport const Root = withProvider<RootProps>(TagsInput.Root, 'root')\n\nexport const ClearTrigger = withContext<Assign<JsxStyleProps, TagsInput.ClearTriggerProps>>(\n  TagsInput.ClearTrigger,\n  'clearTrigger',\n)\n\nexport const Control = withContext<Assign<JsxStyleProps, TagsInput.ControlProps>>(\n  TagsInput.Control,\n  'control',\n)\n\nexport const Input = withContext<Assign<JsxStyleProps, TagsInput.InputProps>>(\n  TagsInput.Input,\n  'input',\n)\n\nexport const ItemDeleteTrigger = withContext<\n  Assign<JsxStyleProps, TagsInput.ItemDeleteTriggerProps>\n>(TagsInput.ItemDeleteTrigger, 'itemDeleteTrigger')\n\nexport const ItemInput = withContext<Assign<JsxStyleProps, TagsInput.ItemInputProps>>(\n  TagsInput.ItemInput,\n  'itemInput',\n)\n\nexport const ItemPreview = withContext<Assign<JsxStyleProps, TagsInput.ItemPreviewProps>>(\n  TagsInput.ItemPreview,\n  'itemPreview',\n)\n\nexport const Item = withContext<Assign<JsxStyleProps, TagsInput.ItemProps>>(TagsInput.Item, 'item')\n\nexport const ItemText = withContext<Assign<JsxStyleProps, TagsInput.ItemTextProps>>(\n  TagsInput.ItemText,\n  'itemText',\n)\n\nexport const Label = withContext<Assign<JsxStyleProps, TagsInput.LabelProps>>(\n  TagsInput.Label,\n  'label',\n)\n\nexport {\n  TagsInputContext as Context,\n  TagsInputHiddenInput as HiddenInput,\n  type TagsInputContextProps as ContextProps,\n  type TagsInputHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
