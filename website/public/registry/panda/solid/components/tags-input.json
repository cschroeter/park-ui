{
  "files": [
    {
      "filename": "tags-input.ts",
      "content": "import { TagsInput as ArkTagsInput } from '@ark-ui/solid'\nimport { styled } from 'styled-system/jsx'\nimport { tagsInput } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tagsInput)\n\nexport const TagsInputRoot = withProvider(styled(ArkTagsInput.Root), 'root')\nexport const TagsInputClearTrigger = withContext(styled(ArkTagsInput.ClearTrigger), 'clearTrigger')\nexport const TagsInputControl = withContext(styled(ArkTagsInput.Control), 'control')\nexport const TagsInputInput = withContext(styled(ArkTagsInput.Input), 'input')\nexport const TagsInputItem = withContext(styled(ArkTagsInput.Item), 'item')\nexport const TagsInputItemDeleteTrigger = withContext(\n  styled(ArkTagsInput.ItemDeleteTrigger),\n  'itemDeleteTrigger',\n)\nexport const TagsInputItemInput = withContext(styled(ArkTagsInput.ItemInput), 'itemInput')\nexport const TagsInputItemText = withContext(styled(ArkTagsInput.ItemText), 'itemText')\nexport const TagsInputLabel = withContext(styled(ArkTagsInput.Label), 'label')\n\nexport const TagsInput = Object.assign(TagsInputRoot, {\n  Root: TagsInputRoot,\n  ClearTrigger: TagsInputClearTrigger,\n  Control: TagsInputControl,\n  Input: TagsInputInput,\n  Item: TagsInputItem,\n  ItemDeleteTrigger: TagsInputItemDeleteTrigger,\n  ItemInput: TagsInputItemInput,\n  ItemText: TagsInputItemText,\n  Label: TagsInputLabel,\n})\n\nexport type TagsInputProps = typeof TagsInputRoot\nexport type TagsInputClearTriggerProps = typeof TagsInputClearTrigger\nexport type TagsInputControlProps = typeof TagsInputControl\nexport type TagsInputInputProps = typeof TagsInputInput\nexport type TagsInputItemProps = typeof TagsInputItem\nexport type TagsInputItemDeleteTriggerProps = typeof TagsInputItemDeleteTrigger\nexport type TagsInputItemInputProps = typeof TagsInputItemInput\nexport type TagsInputItemTextProps = typeof TagsInputItemText\nexport type TagsInputLabelProps = typeof TagsInputLabel\n",
      "hasMultipleParts": true
    }
  ]
}
