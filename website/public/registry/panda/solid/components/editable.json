{
  "files": [
    {
      "filename": "editable.tsx",
      "content": "import { Editable as ArkEditable } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { styled } from 'styled-system/jsx'\nimport { editable } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(editable)\n\nconst Editable = withProvider(styled(ArkEditable.Root), 'root')\nconst EditableArea = withContext(styled(ArkEditable.Area), 'area')\nconst EditableCancelTrigger = withContext(styled(ArkEditable.CancelTrigger), 'cancelTrigger')\nconst EditableControl = withContext(styled(ArkEditable.Control), 'control')\nconst EditableEditTrigger = withContext(styled(ArkEditable.EditTrigger), 'editTrigger')\nconst EditableInput = withContext(styled(ArkEditable.Input), 'input')\nconst EditableLabel = withContext(styled(ArkEditable.Label), 'label')\nconst EditablePreview = withContext(styled(ArkEditable.Preview), 'preview')\nconst EditableSubmitTrigger = withContext(styled(ArkEditable.SubmitTrigger), 'submitTrigger')\n\nconst Root = Editable\nconst Area = EditableArea\nconst CancelTrigger = EditableCancelTrigger\nconst Control = EditableControl\nconst EditTrigger = EditableEditTrigger\nconst Input = EditableInput\nconst Label = EditableLabel\nconst Preview = EditablePreview\nconst SubmitTrigger = EditableSubmitTrigger\n\nexport {\n  Area,\n  CancelTrigger,\n  Control,\n  EditTrigger,\n  Editable,\n  EditableArea,\n  EditableCancelTrigger,\n  EditableControl,\n  EditableEditTrigger,\n  EditableInput,\n  EditableLabel,\n  EditablePreview,\n  EditableSubmitTrigger,\n  Input,\n  Label,\n  Preview,\n  Root,\n  SubmitTrigger,\n}\n\nexport interface EditableProps extends ComponentProps<typeof Editable> {}\nexport interface EditableAreaProps extends ComponentProps<typeof EditableArea> {}\nexport interface EditableCancelTriggerProps extends ComponentProps<typeof EditableCancelTrigger> {}\nexport interface EditableControlProps extends ComponentProps<typeof EditableControl> {}\nexport interface EditableEditTriggerProps extends ComponentProps<typeof EditableEditTrigger> {}\nexport interface EditableInputProps extends ComponentProps<typeof EditableInput> {}\nexport interface EditableLabelProps extends ComponentProps<typeof EditableLabel> {}\nexport interface EditablePreviewProps extends ComponentProps<typeof EditablePreview> {}\nexport interface EditableSubmitTriggerProps extends ComponentProps<typeof EditableSubmitTrigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
