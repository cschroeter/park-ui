{
  "files": [
    {
      "filename": "editable.tsx",
      "content": "import { Editable } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { styled } from 'styled-system/jsx'\nimport { editable } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(editable)\n\nexport const Root = withProvider(styled(Editable.Root), 'root')\nexport const Area = withContext(styled(Editable.Area), 'area')\nexport const CancelTrigger = withContext(styled(Editable.CancelTrigger), 'cancelTrigger')\nexport const Control = withContext(styled(Editable.Control), 'control')\nexport const EditTrigger = withContext(styled(Editable.EditTrigger), 'editTrigger')\nexport const Input = withContext(styled(Editable.Input), 'input')\nexport const Label = withContext(styled(Editable.Label), 'label')\nexport const Preview = withContext(styled(Editable.Preview), 'preview')\nexport const SubmitTrigger = withContext(styled(Editable.SubmitTrigger), 'submitTrigger')\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface AreaProps extends ComponentProps<typeof Area> {}\nexport interface CancelTriggerProps extends ComponentProps<typeof CancelTrigger> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface EditTriggerProps extends ComponentProps<typeof EditTrigger> {}\nexport interface InputProps extends ComponentProps<typeof Input> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PreviewProps extends ComponentProps<typeof Preview> {}\nexport interface SubmitTriggerProps extends ComponentProps<typeof SubmitTrigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
