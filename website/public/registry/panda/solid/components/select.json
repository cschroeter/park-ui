{
  "files": [
    {
      "filename": "select.tsx",
      "content": "import { Select } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { styled } from 'styled-system/jsx'\nimport { select } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport const Root = withProvider(styled(Select.Root), 'root')\nexport const ClearTrigger = withContext(styled(Select.ClearTrigger), 'clearTrigger')\nexport const Content = withContext(styled(Select.Content), 'content')\nexport const Control = withContext(styled(Select.Control), 'control')\nexport const Indicator = withContext(styled(Select.Indicator), 'indicator')\nexport const Item = withContext(styled(Select.Item), 'item')\nexport const ItemGroup = withContext(styled(Select.ItemGroup), 'itemGroup')\nexport const ItemGroupLabel = withContext(styled(Select.ItemGroupLabel), 'itemGroupLabel')\nexport const ItemIndicator = withContext(styled(Select.ItemIndicator), 'itemIndicator')\nexport const ItemText = withContext(styled(Select.ItemText), 'itemText')\nexport const Label = withContext(styled(Select.Label), 'label')\nexport const Positioner = withContext(styled(Select.Positioner), 'positioner')\nexport const Trigger = withContext(styled(Select.Trigger), 'trigger')\nexport const ValueText = withContext(styled(Select.ValueText), 'valueText')\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface ClearTriggerProps extends ComponentProps<typeof ClearTrigger> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface IndicatorProps extends ComponentProps<typeof Indicator> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemGroupProps extends ComponentProps<typeof ItemGroup> {}\nexport interface ItemGroupLabelProps extends ComponentProps<typeof ItemGroupLabel> {}\nexport interface ItemIndicatorProps extends ComponentProps<typeof ItemIndicator> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface ValueTextProps extends ComponentProps<typeof ValueText> {}\n",
      "hasMultipleParts": true
    }
  ]
}
