{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { type Assign, ColorPicker } from '@ark-ui/solid'\nimport { type ColorPickerVariantProps, colorPicker } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport interface RootProps\n  extends Assign<JsxStyleProps, ColorPicker.RootProps>,\n    ColorPickerVariantProps {}\nexport const Root = withProvider<RootProps>(ColorPicker.Root, 'root')\n\nexport const AreaBackground = withContext<Assign<JsxStyleProps, ColorPicker.AreaBackgroundProps>>(\n  ColorPicker.AreaBackground,\n  'areaBackground',\n)\n\nexport const Area = withContext<Assign<JsxStyleProps, ColorPicker.AreaProps>>(\n  ColorPicker.Area,\n  'area',\n)\n\nexport const AreaThumb = withContext<Assign<JsxStyleProps, ColorPicker.AreaThumbProps>>(\n  ColorPicker.AreaThumb,\n  'areaThumb',\n)\n\nexport const ChannelInput = withContext<Assign<JsxStyleProps, ColorPicker.ChannelInputProps>>(\n  ColorPicker.ChannelInput,\n  'channelInput',\n)\n\nexport const ChannelSlider = withContext<Assign<JsxStyleProps, ColorPicker.ChannelSliderProps>>(\n  ColorPicker.ChannelSlider,\n  'channelSlider',\n)\n\nexport const ChannelSliderThumb = withContext<\n  Assign<JsxStyleProps, ColorPicker.ChannelSliderThumbProps>\n>(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\n\nexport const ChannelSliderTrack = withContext<\n  Assign<JsxStyleProps, ColorPicker.ChannelSliderTrackProps>\n>(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\n\nexport const Content = withContext<Assign<JsxStyleProps, ColorPicker.ContentProps>>(\n  ColorPicker.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<JsxStyleProps, ColorPicker.ControlProps>>(\n  ColorPicker.Control,\n  'control',\n)\n\nexport const EyeDropperTrigger = withContext<\n  Assign<JsxStyleProps, ColorPicker.EyeDropperTriggerProps>\n>(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\n\nexport const FormatSelect = withContext<Assign<JsxStyleProps, ColorPicker.FormatSelectProps>>(\n  ColorPicker.FormatSelect,\n  'formatSelect',\n)\n\nexport const FormatTrigger = withContext<Assign<JsxStyleProps, ColorPicker.FormatTriggerProps>>(\n  ColorPicker.FormatTrigger,\n  'formatTrigger',\n)\n\nexport const Label = withContext<Assign<JsxStyleProps, ColorPicker.LabelProps>>(\n  ColorPicker.Label,\n  'label',\n)\n\nexport const Positioner = withContext<Assign<JsxStyleProps, ColorPicker.PositionerProps>>(\n  ColorPicker.Positioner,\n  'positioner',\n)\n\nexport const SwatchGroup = withContext<Assign<JsxStyleProps, ColorPicker.SwatchGroupProps>>(\n  ColorPicker.SwatchGroup,\n  'swatchGroup',\n)\n\nexport const SwatchIndicator = withContext<Assign<JsxStyleProps, ColorPicker.SwatchIndicatorProps>>(\n  ColorPicker.SwatchIndicator,\n  'swatchIndicator',\n)\n\nexport const Swatch = withContext<Assign<JsxStyleProps, ColorPicker.SwatchProps>>(\n  ColorPicker.Swatch,\n  'swatch',\n)\n\nexport const SwatchTrigger = withContext<Assign<JsxStyleProps, ColorPicker.SwatchTriggerProps>>(\n  ColorPicker.SwatchTrigger,\n  'swatchTrigger',\n)\n\nexport const TransparencyGrid = withContext<\n  Assign<JsxStyleProps, ColorPicker.TransparencyGridProps>\n>(ColorPicker.TransparencyGrid, 'transparencyGrid')\n\nexport const Trigger = withContext<Assign<JsxStyleProps, ColorPicker.TriggerProps>>(\n  ColorPicker.Trigger,\n  'trigger',\n)\n\nexport const ValueText = withContext<Assign<JsxStyleProps, ColorPicker.ValueTextProps>>(\n  ColorPicker.ValueText,\n  'valueText',\n)\n\nexport const View = withContext<Assign<JsxStyleProps, ColorPicker.ViewProps>>(\n  ColorPicker.View,\n  'view',\n)\n\nexport {\n  ColorPickerContext as Context,\n  ColorPickerHiddenInput as HiddenInput,\n  type ColorPickerContextProps as ContextProps,\n  type ColorPickerHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
