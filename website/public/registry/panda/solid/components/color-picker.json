{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { styled } from 'styled-system/jsx'\nimport { colorPicker } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport const Root = withProvider(styled(ColorPicker.Root), 'root')\nexport const Area = withContext(styled(ColorPicker.Area), 'area')\nexport const AreaBackground = withContext(styled(ColorPicker.AreaBackground), 'areaBackground')\nexport const AreaThumb = withContext(styled(ColorPicker.AreaThumb), 'areaThumb')\nexport const ChannelInput = withContext(styled(ColorPicker.ChannelInput), 'channelInput')\nexport const ChannelSlider = withContext(styled(ColorPicker.ChannelSlider), 'channelSlider')\nexport const ChannelSliderThumb = withContext(\n  styled(ColorPicker.ChannelSliderThumb),\n  'channelSliderThumb',\n)\nexport const ChannelSliderTrack = withContext(\n  styled(ColorPicker.ChannelSliderTrack),\n  'channelSliderTrack',\n)\nexport const Content = withContext(styled(ColorPicker.Content), 'content')\nexport const Control = withContext(styled(ColorPicker.Control), 'control')\nexport const EyeDropperTrigger = withContext(\n  styled(ColorPicker.EyeDropperTrigger),\n  'eyeDropperTrigger',\n)\nexport const FormatSelect = withContext(styled(ColorPicker.FormatSelect), 'formatSelect')\nexport const FormatTrigger = withContext(styled(ColorPicker.FormatTrigger), 'formatTrigger')\nexport const Label = withContext(styled(ColorPicker.Label), 'label')\nexport const Positioner = withContext(styled(ColorPicker.Positioner), 'positioner')\nexport const Swatch = withContext(styled(ColorPicker.Swatch), 'swatch')\nexport const SwatchGroup = withContext(styled(ColorPicker.SwatchGroup), 'swatchGroup')\nexport const SwatchIndicator = withContext(styled(ColorPicker.SwatchIndicator), 'swatchIndicator')\nexport const SwatchTrigger = withContext(styled(ColorPicker.SwatchTrigger), 'swatchTrigger')\nexport const TransparencyGrid = withContext(\n  styled(ColorPicker.TransparencyGrid),\n  'transparencyGrid',\n)\nexport const Trigger = withContext(styled(ColorPicker.Trigger), 'trigger')\nexport const ValueText = withContext(styled(ColorPicker.ValueText), 'valueText')\nexport const View = withContext(styled(ColorPicker.View), 'view')\n\nexport interface RootProps extends ComponentProps<typeof Root> {}\nexport interface AreaProps extends ComponentProps<typeof Area> {}\nexport interface AreaBackgroundProps extends ComponentProps<typeof AreaBackground> {}\nexport interface AreaThumbProps extends ComponentProps<typeof AreaThumb> {}\nexport interface ChannelInputProps extends ComponentProps<typeof ChannelInput> {}\nexport interface ChannelSliderProps extends ComponentProps<typeof ChannelSlider> {}\nexport interface ChannelSliderThumbProps extends ComponentProps<typeof ChannelSliderThumb> {}\nexport interface ChannelSliderTrackProps extends ComponentProps<typeof ChannelSliderTrack> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface EyeDropperTriggerProps extends ComponentProps<typeof EyeDropperTrigger> {}\nexport interface FormatSelectProps extends ComponentProps<typeof FormatSelect> {}\nexport interface FormatTriggerProps extends ComponentProps<typeof FormatTrigger> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface SwatchProps extends ComponentProps<typeof Swatch> {}\nexport interface SwatchGroupProps extends ComponentProps<typeof SwatchGroup> {}\nexport interface SwatchIndicatorProps extends ComponentProps<typeof SwatchIndicator> {}\nexport interface SwatchTriggerProps extends ComponentProps<typeof SwatchTrigger> {}\nexport interface TransparencyGridProps extends ComponentProps<typeof TransparencyGrid> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface ValueTextProps extends ComponentProps<typeof ValueText> {}\nexport interface ViewProps extends ComponentProps<typeof View> {}\n",
      "hasMultipleParts": true
    }
  ]
}
