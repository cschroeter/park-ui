{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker as ArkColorPicker } from '@ark-ui/solid'\nimport { styled } from 'styled-system/jsx'\nimport { colorPicker } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nconst Root = withProvider(styled(ArkColorPicker.Root), 'root')\nconst Area = withContext(styled(ArkColorPicker.Area), 'area')\nconst AreaBackground = withContext(styled(ArkColorPicker.AreaBackground), 'areaBackground')\nconst AreaThumb = withContext(styled(ArkColorPicker.AreaThumb), 'areaThumb')\nconst ChannelInput = withContext(styled(ArkColorPicker.ChannelInput), 'channelInput')\nconst ChannelSlider = withContext(styled(ArkColorPicker.ChannelSlider), 'channelSlider')\nconst ChannelSliderThumb = withContext(\n  styled(ArkColorPicker.ChannelSliderThumb),\n  'channelSliderThumb',\n)\nconst ChannelSliderTrack = withContext(\n  styled(ArkColorPicker.ChannelSliderTrack),\n  'channelSliderTrack',\n)\nconst Content = withContext(styled(ArkColorPicker.Content), 'content')\nconst Control = withContext(styled(ArkColorPicker.Control), 'control')\nconst EyeDropperTrigger = withContext(styled(ArkColorPicker.EyeDropperTrigger), 'eyeDropperTrigger')\nconst FormatSelect = withContext(styled(ArkColorPicker.FormatSelect), 'formatSelect')\nconst FormatTrigger = withContext(styled(ArkColorPicker.FormatTrigger), 'formatTrigger')\nconst Label = withContext(styled(ArkColorPicker.Label), 'label')\nconst Positioner = withContext(styled(ArkColorPicker.Positioner), 'positioner')\nconst Swatch = withContext(styled(ArkColorPicker.Swatch), 'swatch')\nconst SwatchGroup = withContext(styled(ArkColorPicker.SwatchGroup), 'swatchGroup')\nconst SwatchIndicator = withContext(styled(ArkColorPicker.SwatchIndicator), 'swatchIndicator')\nconst SwatchTrigger = withContext(styled(ArkColorPicker.SwatchTrigger), 'swatchTrigger')\nconst TransparencyGrid = withContext(styled(ArkColorPicker.TransparencyGrid), 'transparencyGrid')\nconst Trigger = withContext(styled(ArkColorPicker.Trigger), 'trigger')\nconst ValueText = withContext(styled(ArkColorPicker.ValueText), 'valueText')\nconst View = withContext(styled(ArkColorPicker.View), 'view')\n\nexport {\n  Area,\n  AreaBackground,\n  AreaThumb,\n  ChannelInput,\n  ChannelSlider,\n  ChannelSliderThumb,\n  ChannelSliderTrack,\n  Content,\n  Control,\n  EyeDropperTrigger,\n  FormatSelect,\n  FormatTrigger,\n  Label,\n  Positioner,\n  Root,\n  Swatch,\n  SwatchGroup,\n  SwatchIndicator,\n  SwatchTrigger,\n  TransparencyGrid,\n  Trigger,\n  ValueText,\n  View,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
