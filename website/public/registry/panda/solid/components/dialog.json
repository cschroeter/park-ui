{
  "files": [
    {
      "filename": "dialog.tsx",
      "content": "import { type Assign, Dialog } from '@ark-ui/solid'\nimport { type DialogVariantProps, dialog } from 'styled-system/recipes'\nimport type { JsxStyleProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(dialog)\n\nexport interface RootProps extends Dialog.RootProps, DialogVariantProps {}\nexport const Root = withRootProvider<RootProps>(Dialog.Root)\n\nexport const Backdrop = withContext<Assign<JsxStyleProps, Dialog.BackdropProps>>(\n  Dialog.Backdrop,\n  'backdrop',\n)\n\nexport const CloseTrigger = withContext<Assign<JsxStyleProps, Dialog.CloseTriggerProps>>(\n  Dialog.CloseTrigger,\n  'closeTrigger',\n)\n\nexport const Content = withContext<Assign<JsxStyleProps, Dialog.ContentProps>>(\n  Dialog.Content,\n  'content',\n)\n\nexport const Description = withContext<Assign<JsxStyleProps, Dialog.DescriptionProps>>(\n  Dialog.Description,\n  'description',\n)\n\nexport const Positioner = withContext<Assign<JsxStyleProps, Dialog.PositionerProps>>(\n  Dialog.Positioner,\n  'positioner',\n)\n\nexport const Title = withContext<Assign<JsxStyleProps, Dialog.TitleProps>>(Dialog.Title, 'title')\n\nexport const Trigger = withContext<Assign<JsxStyleProps, Dialog.TriggerProps>>(\n  Dialog.Trigger,\n  'trigger',\n)\n\nexport {\n  DialogContext as Context,\n  type DialogContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
