{
  "files": [
    {
      "filename": "rating-group.tsx",
      "content": "import { RatingGroup as ArkRatingGroup, type RatingGroupRootProps } from '@ark-ui/solid'\nimport { Index, Show, children, splitProps, type JSX } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { ratingGroup, type RatingGroupVariantProps } from 'styled-system/recipes'\nimport type { Assign, JsxStyleProps } from 'styled-system/types'\n\nexport interface RatingGroupProps\n  extends Assign<JsxStyleProps, RatingGroupRootProps>,\n    RatingGroupVariantProps {\n  children?: JSX.Element\n}\n\nexport const RatingGroup = (props: RatingGroupProps) => {\n  const [variantProps, ratingGroupProps] = ratingGroup.splitVariantProps(props)\n  const [cssProps, elementProps] = splitCssProps(ratingGroupProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['children', 'class'])\n  const getChildren = children(() => localProps.children)\n  const styles = ratingGroup(variantProps)\n\n  return (\n    <ArkRatingGroup.Root class={cx(styles.root, css(cssProps), localProps.class)} {...rootProps}>\n      <Show when={getChildren()}>\n        <ArkRatingGroup.Label class={styles.label}>{getChildren()}</ArkRatingGroup.Label>\n      </Show>\n      <ArkRatingGroup.Control class={styles.control}>\n        {(api) => (\n          <Index each={api().items}>\n            {(index) => (\n              <ArkRatingGroup.Item class={styles.item} index={index()}>\n                {(api) => <StarIcon isHalf={api().isHalf} />}\n              </ArkRatingGroup.Item>\n            )}\n          </Index>\n        )}\n      </ArkRatingGroup.Control>\n    </ArkRatingGroup.Root>\n  )\n}\n\ninterface Props {\n  isHalf: boolean\n}\n\nconst StarIcon = (props: Props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"inherit\"\n    stroke=\"inherit\"\n    stroke-width=\"2\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <title>Star Icon</title>\n    <defs>\n      <linearGradient id=\"half\">\n        <stop offset=\"50%\" stop-color=\"var(--colors-color-palette-default)\" />\n        <stop offset=\"50%\" stop-color=\"var(--colors-bg-emphasized)\" />\n      </linearGradient>\n    </defs>\n    <polygon\n      fill={props.isHalf ? 'url(#half)' : 'inherit'}\n      points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
