{
  "files": [
    {
      "filename": "avatar.tsx",
      "content": "import { Avatar as ArkAvatar, type AvatarRootProps } from '@ark-ui/solid'\nimport { Show, splitProps } from 'solid-js'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps } from 'styled-system/jsx'\nimport { avatar, type AvatarVariantProps } from 'styled-system/recipes'\nimport type { Assign, JsxStyleProps } from 'styled-system/types'\n\nexport interface AvatarProps extends Assign<JsxStyleProps, AvatarRootProps>, AvatarVariantProps {\n  name?: string\n  src?: string\n}\n\nexport const Avatar = (props: AvatarProps) => {\n  const [variantProps, avatarProps] = avatar.splitVariantProps(props)\n  const [cssProps, elementProps] = splitCssProps(avatarProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['name', 'src', 'class'])\n  const styles = avatar(variantProps)\n\n  return (\n    <ArkAvatar.Root class={cx(styles.root, css(cssProps), localProps.class)} {...rootProps}>\n      <ArkAvatar.Fallback class={styles.fallback}>\n        <Show when={localProps.name} fallback={<UserIcon />}>\n          {getInitials(localProps.name)}\n        </Show>\n      </ArkAvatar.Fallback>\n      <ArkAvatar.Image class={styles.image} src={localProps.src} alt={localProps.name} />\n    </ArkAvatar.Root>\n  )\n}\n\nconst UserIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"2\"\n  >\n    <title>User Icon</title>\n    <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\n    <circle cx=\"12\" cy=\"7\" r=\"4\" />\n  </svg>\n)\n\nconst getInitials = (name = '') =>\n  name\n    .split(' ')\n    .map((part) => part[0])\n    .splice(0, 2)\n    .join('')\n    .toUpperCase()\n",
      "hasMultipleParts": false
    }
  ]
}
