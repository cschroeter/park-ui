{
  "files": [
    {
      "filename": "radio-button-group.ts",
      "content": "import { RadioGroup as ArkRadioButtonGroup } from '@ark-ui/solid'\nimport { styled } from 'styled-system/jsx'\nimport { radioButtonGroup } from 'styled-system/recipes'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(radioButtonGroup)\n\nexport const RadioButtonGroupRoot = withProvider(styled(ArkRadioButtonGroup.Root), 'root')\nexport const RadioButtonGroupIndicator = withContext(\n  styled(ArkRadioButtonGroup.Indicator),\n  'indicator',\n)\nexport const RadioButtonGroupItem = withContext(styled(ArkRadioButtonGroup.Item), 'item')\nexport const RadioButtonGroupItemControl = withContext(\n  styled(ArkRadioButtonGroup.ItemControl),\n  'itemControl',\n)\nexport const RadioButtonGroupItemText = withContext(\n  styled(ArkRadioButtonGroup.ItemText),\n  'itemText',\n)\nexport const RadioButtonGroupLabel = withContext(styled(ArkRadioButtonGroup.Label), 'label')\n\nexport const RadioButtonGroup = Object.assign(RadioButtonGroupRoot, {\n  Root: RadioButtonGroupRoot,\n  Indicator: RadioButtonGroupIndicator,\n  Item: RadioButtonGroupItem,\n  ItemControl: RadioButtonGroupItemControl,\n  ItemText: RadioButtonGroupItemText,\n  Label: RadioButtonGroupLabel,\n})\n\nexport type RadioButtonGroupProps = typeof RadioButtonGroupRoot\nexport type RadioButtonGroupIndicatorProps = typeof RadioButtonGroupIndicator\nexport type RadioButtonGroupItemProps = typeof RadioButtonGroupItem\nexport type RadioButtonGroupItemControlProps = typeof RadioButtonGroupItemControl\nexport type RadioButtonGroupItemTextProps = typeof RadioButtonGroupItemText\nexport type RadioButtonGroupLabelProps = typeof RadioButtonGroupLabel\n",
      "hasMultipleParts": true
    }
  ]
}
