{
  "files": [
    {
      "filename": "heading.tsx",
      "content": "import { mergeProps, splitProps } from 'solid-js'\nimport { Dynamic } from 'solid-js/web'\nimport { css, cx } from 'styled-system/css'\nimport { splitCssProps, type HTMLStyledProps } from 'styled-system/jsx'\nimport { text, type TextVariantProps } from 'styled-system/recipes'\n\ntype As = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n\nexport type HeadingProps = TextVariantProps & {\n  as?: As\n} & HTMLStyledProps<As>\n\nexport const Heading = (props: HeadingProps) => {\n  const mergedProps = mergeProps({ as: 'h2' }, props)\n  const [variantProps, headingProps] = splitProps(mergedProps, ['size'])\n  const [cssProps, elementProps] = splitCssProps(headingProps)\n  const [localProps, rootProps] = splitProps(elementProps, ['as', 'class'])\n  const className = text({ variant: 'heading', size: variantProps.size })\n\n  return (\n    <Dynamic\n      component={localProps.as}\n      class={cx(className, css(cssProps), localProps.class)}\n      {...rootProps}\n    />\n  )\n}\n",
      "hasMultipleParts": false
    }
  ]
}
