{
  "files": [
    {
      "filename": "menu.tsx",
      "content": "import { Menu } from '@ark-ui/react/menu'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'menu',\n  defaultVariants: { size: 'md' },\n  slots: {\n    contextTrigger: 'menu__contextTrigger',\n    trigger: 'menu__trigger',\n    triggerItem: 'menu__triggerItem',\n    indicator: 'menu__indicator',\n    positioner: 'menu__positioner',\n    arrow: 'menu__arrow',\n    arrowTip: 'menu__arrowTip',\n    content: 'menu__content',\n    separator: 'menu__separator',\n    item: 'menu__item',\n    optionItem: 'menu__optionItem',\n    optionItemIndicator: 'menu__optionItemIndicator',\n    optionItemText: 'menu__optionItemText',\n    itemGroupLabel: 'menu__itemGroupLabel',\n    itemGroup: 'menu__itemGroup',\n  },\n  variants: {\n    size: {\n      xs: {\n        contextTrigger: 'menu__contextTrigger--size_xs',\n        trigger: 'menu__trigger--size_xs',\n        triggerItem: 'menu__triggerItem--size_xs',\n        indicator: 'menu__indicator--size_xs',\n        positioner: 'menu__positioner--size_xs',\n        arrow: 'menu__arrow--size_xs',\n        arrowTip: 'menu__arrowTip--size_xs',\n        content: 'menu__content--size_xs',\n        separator: 'menu__separator--size_xs',\n        item: 'menu__item--size_xs',\n        optionItem: 'menu__optionItem--size_xs',\n        optionItemIndicator: 'menu__optionItemIndicator--size_xs',\n        optionItemText: 'menu__optionItemText--size_xs',\n        itemGroupLabel: 'menu__itemGroupLabel--size_xs',\n        itemGroup: 'menu__itemGroup--size_xs',\n      },\n      sm: {\n        contextTrigger: 'menu__contextTrigger--size_sm',\n        trigger: 'menu__trigger--size_sm',\n        triggerItem: 'menu__triggerItem--size_sm',\n        indicator: 'menu__indicator--size_sm',\n        positioner: 'menu__positioner--size_sm',\n        arrow: 'menu__arrow--size_sm',\n        arrowTip: 'menu__arrowTip--size_sm',\n        content: 'menu__content--size_sm',\n        separator: 'menu__separator--size_sm',\n        item: 'menu__item--size_sm',\n        optionItem: 'menu__optionItem--size_sm',\n        optionItemIndicator: 'menu__optionItemIndicator--size_sm',\n        optionItemText: 'menu__optionItemText--size_sm',\n        itemGroupLabel: 'menu__itemGroupLabel--size_sm',\n        itemGroup: 'menu__itemGroup--size_sm',\n      },\n      md: {\n        contextTrigger: 'menu__contextTrigger--size_md',\n        trigger: 'menu__trigger--size_md',\n        triggerItem: 'menu__triggerItem--size_md',\n        indicator: 'menu__indicator--size_md',\n        positioner: 'menu__positioner--size_md',\n        arrow: 'menu__arrow--size_md',\n        arrowTip: 'menu__arrowTip--size_md',\n        content: 'menu__content--size_md',\n        separator: 'menu__separator--size_md',\n        item: 'menu__item--size_md',\n        optionItem: 'menu__optionItem--size_md',\n        optionItemIndicator: 'menu__optionItemIndicator--size_md',\n        optionItemText: 'menu__optionItemText--size_md',\n        itemGroupLabel: 'menu__itemGroupLabel--size_md',\n        itemGroup: 'menu__itemGroup--size_md',\n      },\n      lg: {\n        contextTrigger: 'menu__contextTrigger--size_lg',\n        trigger: 'menu__trigger--size_lg',\n        triggerItem: 'menu__triggerItem--size_lg',\n        indicator: 'menu__indicator--size_lg',\n        positioner: 'menu__positioner--size_lg',\n        arrow: 'menu__arrow--size_lg',\n        arrowTip: 'menu__arrowTip--size_lg',\n        content: 'menu__content--size_lg',\n        separator: 'menu__separator--size_lg',\n        item: 'menu__item--size_lg',\n        optionItem: 'menu__optionItem--size_lg',\n        optionItemIndicator: 'menu__optionItemIndicator--size_lg',\n        optionItemText: 'menu__optionItemText--size_lg',\n        itemGroupLabel: 'menu__itemGroupLabel--size_lg',\n        itemGroup: 'menu__itemGroup--size_lg',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(Menu.Root)\nexport const Arrow = withContext(Menu.Arrow, 'arrow')\nexport const ArrowTip = withContext(Menu.ArrowTip, 'arrowTip')\nexport const Content = withContext(Menu.Content, 'content')\nexport const ContextTrigger = withContext(Menu.ContextTrigger, 'contextTrigger')\nexport const Item = withContext(Menu.Item, 'item')\nexport const ItemGroup = withContext(Menu.ItemGroup, 'itemGroup')\nexport const ItemGroupLabel = withContext(Menu.ItemGroupLabel, 'itemGroupLabel')\nexport const OptionItem = withContext(Menu.OptionItem, 'optionItem')\nexport const Positioner = withContext(Menu.Positioner, 'positioner')\nexport const Separator = withContext(Menu.Separator, 'separator')\nexport const Trigger = withContext(Menu.Trigger, 'trigger')\nexport const TriggerItem = withContext(Menu.TriggerItem, 'triggerItem')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface ArrowProps extends ComponentProps<typeof Arrow> {}\nexport interface ArrowTipProps extends ComponentProps<typeof ArrowTip> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ContextTriggerProps extends ComponentProps<typeof ContextTrigger> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemGroupProps extends ComponentProps<typeof ItemGroup> {}\nexport interface ItemGroupLabelProps extends ComponentProps<typeof ItemGroupLabel> {}\nexport interface OptionItemProps extends ComponentProps<typeof OptionItem> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface SeparatorProps extends ComponentProps<typeof Separator> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface TriggerItemProps extends ComponentProps<typeof TriggerItem> {}\n",
      "hasMultipleParts": true
    }
  ]
}
