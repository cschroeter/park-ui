{
  "files": [
    {
      "filename": "switch.tsx",
      "content": "import { Switch as ArkSwitch, type SwitchRootProps } from '@ark-ui/react/switch'\nimport { forwardRef } from 'react'\nimport { type VariantProps, tv } from 'tailwind-variants'\n\nexport interface SwitchProps extends SwitchRootProps, SwitchRecipeVariantProps {}\n\nexport const Switch = forwardRef<HTMLLabelElement, SwitchProps>((props, ref) => {\n  const { children, className, size, ...rootProps } = props\n  const { root, control, thumb, label } = styles({ size })\n\n  return (\n    <ArkSwitch.Root ref={ref} className={root({ className })} {...rootProps}>\n      <ArkSwitch.Control className={control()}>\n        <ArkSwitch.Thumb className={thumb()} />\n      </ArkSwitch.Control>\n      {children && <ArkSwitch.Label className={label()}>{children}</ArkSwitch.Label>}\n      <ArkSwitch.HiddenInput />\n    </ArkSwitch.Root>\n  )\n})\n\nSwitch.displayName = 'Switch'\n\ntype SwitchRecipeVariantProps = VariantProps<typeof styles>\n\nconst styles = tv(\n  {\n    base: 'switchRecipe',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'switchRecipe__root',\n      label: 'switchRecipe__label',\n      control: 'switchRecipe__control',\n      thumb: 'switchRecipe__thumb',\n    },\n    variants: {\n      size: {\n        sm: {\n          root: 'switchRecipe__root--size_sm',\n          label: 'switchRecipe__label--size_sm',\n          control: 'switchRecipe__control--size_sm',\n          thumb: 'switchRecipe__thumb--size_sm',\n        },\n        md: {\n          root: 'switchRecipe__root--size_md',\n          label: 'switchRecipe__label--size_md',\n          control: 'switchRecipe__control--size_md',\n          thumb: 'switchRecipe__thumb--size_md',\n        },\n        lg: {\n          root: 'switchRecipe__root--size_lg',\n          label: 'switchRecipe__label--size_lg',\n          control: 'switchRecipe__control--size_lg',\n          thumb: 'switchRecipe__thumb--size_lg',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n",
      "hasMultipleParts": false
    }
  ]
}
