{
  "files": [
    {
      "filename": "combobox.tsx",
      "content": "import { Combobox } from '@ark-ui/react/combobox'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'combobox',\n  defaultVariants: { size: 'md' },\n  slots: {\n    root: 'combobox__root',\n    label: 'combobox__label',\n    input: 'combobox__input',\n    positioner: 'combobox__positioner',\n    control: 'combobox__control',\n    trigger: 'combobox__trigger',\n    content: 'combobox__content',\n    clearTrigger: 'combobox__clearTrigger',\n    item: 'combobox__item',\n    itemText: 'combobox__itemText',\n    itemIndicator: 'combobox__itemIndicator',\n    itemGroup: 'combobox__itemGroup',\n    itemGroupLabel: 'combobox__itemGroupLabel',\n  },\n  variants: {\n    size: {\n      sm: {\n        root: 'combobox__root--size_sm',\n        label: 'combobox__label--size_sm',\n        input: 'combobox__input--size_sm',\n        positioner: 'combobox__positioner--size_sm',\n        control: 'combobox__control--size_sm',\n        trigger: 'combobox__trigger--size_sm',\n        content: 'combobox__content--size_sm',\n        clearTrigger: 'combobox__clearTrigger--size_sm',\n        item: 'combobox__item--size_sm',\n        itemText: 'combobox__itemText--size_sm',\n        itemIndicator: 'combobox__itemIndicator--size_sm',\n        itemGroup: 'combobox__itemGroup--size_sm',\n        itemGroupLabel: 'combobox__itemGroupLabel--size_sm',\n      },\n      md: {\n        root: 'combobox__root--size_md',\n        label: 'combobox__label--size_md',\n        input: 'combobox__input--size_md',\n        positioner: 'combobox__positioner--size_md',\n        control: 'combobox__control--size_md',\n        trigger: 'combobox__trigger--size_md',\n        content: 'combobox__content--size_md',\n        clearTrigger: 'combobox__clearTrigger--size_md',\n        item: 'combobox__item--size_md',\n        itemText: 'combobox__itemText--size_md',\n        itemIndicator: 'combobox__itemIndicator--size_md',\n        itemGroup: 'combobox__itemGroup--size_md',\n        itemGroupLabel: 'combobox__itemGroupLabel--size_md',\n      },\n      lg: {\n        root: 'combobox__root--size_lg',\n        label: 'combobox__label--size_lg',\n        input: 'combobox__input--size_lg',\n        positioner: 'combobox__positioner--size_lg',\n        control: 'combobox__control--size_lg',\n        trigger: 'combobox__trigger--size_lg',\n        content: 'combobox__content--size_lg',\n        clearTrigger: 'combobox__clearTrigger--size_lg',\n        item: 'combobox__item--size_lg',\n        itemText: 'combobox__itemText--size_lg',\n        itemIndicator: 'combobox__itemIndicator--size_lg',\n        itemGroup: 'combobox__itemGroup--size_lg',\n        itemGroupLabel: 'combobox__itemGroupLabel--size_lg',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst Root = withProvider(Combobox.Root, 'root')\nconst ClearTrigger = withContext(Combobox.ClearTrigger, 'clearTrigger')\nconst Content = withContext(Combobox.Content, 'content')\nconst Control = withContext(Combobox.Control, 'control')\nconst Input = withContext(Combobox.Input, 'input')\nconst Item = withContext(Combobox.Item, 'item')\nconst ItemGroup = withContext(Combobox.ItemGroup, 'itemGroup')\nconst ItemGroupLabel = withContext(Combobox.ItemGroupLabel, 'itemGroupLabel')\nconst ItemIndicator = withContext(Combobox.ItemIndicator, 'itemIndicator')\nconst ItemText = withContext(Combobox.ItemText, 'itemText')\nconst Label = withContext(Combobox.Label, 'label')\nconst Positioner = withContext(Combobox.Positioner, 'positioner')\nconst Trigger = withContext(Combobox.Trigger, 'trigger')\n\nexport {\n  ClearTrigger,\n  Content,\n  Control,\n  Input,\n  Item,\n  ItemGroup,\n  ItemGroupLabel,\n  ItemIndicator,\n  ItemText,\n  Label,\n  Positioner,\n  Root,\n  Trigger,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
