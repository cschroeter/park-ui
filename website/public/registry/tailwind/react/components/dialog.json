{
  "files": [
    {
      "filename": "dialog.tsx",
      "content": "import { Dialog } from '@ark-ui/react/dialog'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'dialog',\n  slots: {\n    trigger: 'dialog__trigger',\n    backdrop: 'dialog__backdrop',\n    positioner: 'dialog__positioner',\n    content: 'dialog__content',\n    title: 'dialog__title',\n    description: 'dialog__description',\n    closeTrigger: 'dialog__closeTrigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(Dialog.Root)\nexport const Backdrop = withContext(Dialog.Backdrop, 'backdrop')\nexport const CloseTrigger = withContext(Dialog.CloseTrigger, 'closeTrigger')\nexport const Content = withContext(Dialog.Content, 'content')\nexport const Description = withContext(Dialog.Description, 'description')\nexport const Positioner = withContext(Dialog.Positioner, 'positioner')\nexport const Title = withContext(Dialog.Title, 'title')\nexport const Trigger = withContext(Dialog.Trigger, 'trigger')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface BackdropProps extends ComponentProps<typeof Backdrop> {}\nexport interface CloseTriggerProps extends ComponentProps<typeof CloseTrigger> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface DescriptionProps extends ComponentProps<typeof Description> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface TitleProps extends ComponentProps<typeof Title> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
