{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import { FileUpload } from '@ark-ui/react/file-upload'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'fileUpload',\n  slots: {\n    root: 'fileUpload__root',\n    dropzone: 'fileUpload__dropzone',\n    item: 'fileUpload__item',\n    itemDeleteTrigger: 'fileUpload__itemDeleteTrigger',\n    itemGroup: 'fileUpload__itemGroup',\n    itemName: 'fileUpload__itemName',\n    itemPreview: 'fileUpload__itemPreview',\n    itemPreviewImage: 'fileUpload__itemPreviewImage',\n    itemSizeText: 'fileUpload__itemSizeText',\n    label: 'fileUpload__label',\n    trigger: 'fileUpload__trigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(FileUpload.Root, 'root')\nexport const Dropzone = withContext(FileUpload.Dropzone, 'dropzone')\nexport const Item = withContext(FileUpload.Item, 'item')\nexport const ItemDeleteTrigger = withContext(FileUpload.ItemDeleteTrigger, 'itemDeleteTrigger')\nexport const ItemGroup = withContext(FileUpload.ItemGroup, 'itemGroup')\nexport const ItemName = withContext(FileUpload.ItemName, 'itemName')\nexport const ItemPreview = withContext(FileUpload.ItemPreview, 'itemPreview')\nexport const ItemPreviewImage = withContext(FileUpload.ItemPreviewImage, 'itemPreviewImage')\nexport const ItemSizeText = withContext(FileUpload.ItemSizeText, 'itemSizeText')\nexport const Label = withContext(FileUpload.Label, 'label')\nexport const Trigger = withContext(FileUpload.Trigger, 'trigger')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface DropzoneProps extends ComponentProps<typeof Dropzone> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemDeleteTriggerProps extends ComponentProps<typeof ItemDeleteTrigger> {}\nexport interface ItemGroupProps extends ComponentProps<typeof ItemGroup> {}\nexport interface ItemNameProps extends ComponentProps<typeof ItemName> {}\nexport interface ItemPreviewProps extends ComponentProps<typeof ItemPreview> {}\nexport interface ItemPreviewImageProps extends ComponentProps<typeof ItemPreviewImage> {}\nexport interface ItemSizeTextProps extends ComponentProps<typeof ItemSizeText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
