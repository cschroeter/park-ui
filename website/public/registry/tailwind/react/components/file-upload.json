{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import { FileUpload as ArkFileUpload } from '@ark-ui/react/file-upload'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'fileUpload',\n  slots: {\n    root: 'fileUpload__root',\n    dropzone: 'fileUpload__dropzone',\n    item: 'fileUpload__item',\n    itemDeleteTrigger: 'fileUpload__itemDeleteTrigger',\n    itemGroup: 'fileUpload__itemGroup',\n    itemName: 'fileUpload__itemName',\n    itemPreview: 'fileUpload__itemPreview',\n    itemPreviewImage: 'fileUpload__itemPreviewImage',\n    itemSizeText: 'fileUpload__itemSizeText',\n    label: 'fileUpload__label',\n    trigger: 'fileUpload__trigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst FileUpload = withProvider(ArkFileUpload.Root, 'root')\nconst FileUploadDropzone = withContext(ArkFileUpload.Dropzone, 'dropzone')\nconst FileUploadItem = withContext(ArkFileUpload.Item, 'item')\nconst FileUploadItemDeleteTrigger = withContext(\n  ArkFileUpload.ItemDeleteTrigger,\n  'itemDeleteTrigger',\n)\nconst FileUploadItemGroup = withContext(ArkFileUpload.ItemGroup, 'itemGroup')\nconst FileUploadItemName = withContext(ArkFileUpload.ItemName, 'itemName')\nconst FileUploadItemPreview = withContext(ArkFileUpload.ItemPreview, 'itemPreview')\nconst FileUploadItemPreviewImage = withContext(ArkFileUpload.ItemPreviewImage, 'itemPreviewImage')\nconst FileUploadItemSizeText = withContext(ArkFileUpload.ItemSizeText, 'itemSizeText')\nconst FileUploadLabel = withContext(ArkFileUpload.Label, 'label')\nconst FileUploadTrigger = withContext(ArkFileUpload.Trigger, 'trigger')\n\nconst Root = FileUpload\nconst Dropzone = FileUploadDropzone\nconst Item = FileUploadItem\nconst ItemDeleteTrigger = FileUploadItemDeleteTrigger\nconst ItemGroup = FileUploadItemGroup\nconst ItemName = FileUploadItemName\nconst ItemPreview = FileUploadItemPreview\nconst ItemPreviewImage = FileUploadItemPreviewImage\nconst ItemSizeText = FileUploadItemSizeText\nconst Label = FileUploadLabel\nconst Trigger = FileUploadTrigger\n\nexport {\n  Dropzone,\n  FileUpload,\n  FileUploadDropzone,\n  FileUploadItem,\n  FileUploadItemDeleteTrigger,\n  FileUploadItemGroup,\n  FileUploadItemName,\n  FileUploadItemPreview,\n  FileUploadItemPreviewImage,\n  FileUploadItemSizeText,\n  FileUploadLabel,\n  FileUploadTrigger,\n  Item,\n  ItemDeleteTrigger,\n  ItemGroup,\n  ItemName,\n  ItemPreview,\n  ItemPreviewImage,\n  ItemSizeText,\n  Label,\n  Root,\n  Trigger,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
