{
  "files": [
    {
      "filename": "select.tsx",
      "content": "import { Select } from '@ark-ui/react/select'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'select',\n  defaultVariants: { size: 'md', variant: 'outline' },\n  slots: {\n    label: 'select__label',\n    positioner: 'select__positioner',\n    trigger: 'select__trigger',\n    indicator: 'select__indicator',\n    clearTrigger: 'select__clearTrigger',\n    item: 'select__item',\n    itemText: 'select__itemText',\n    itemIndicator: 'select__itemIndicator',\n    itemGroup: 'select__itemGroup',\n    itemGroupLabel: 'select__itemGroupLabel',\n    content: 'select__content',\n    root: 'select__root',\n    control: 'select__control',\n    valueText: 'select__valueText',\n  },\n  variants: {\n    variant: {\n      outline: {\n        label: 'select__label--variant_outline',\n        positioner: 'select__positioner--variant_outline',\n        trigger: 'select__trigger--variant_outline',\n        indicator: 'select__indicator--variant_outline',\n        clearTrigger: 'select__clearTrigger--variant_outline',\n        item: 'select__item--variant_outline',\n        itemText: 'select__itemText--variant_outline',\n        itemIndicator: 'select__itemIndicator--variant_outline',\n        itemGroup: 'select__itemGroup--variant_outline',\n        itemGroupLabel: 'select__itemGroupLabel--variant_outline',\n        content: 'select__content--variant_outline',\n        root: 'select__root--variant_outline',\n        control: 'select__control--variant_outline',\n        valueText: 'select__valueText--variant_outline',\n      },\n      ghost: {\n        label: 'select__label--variant_ghost',\n        positioner: 'select__positioner--variant_ghost',\n        trigger: 'select__trigger--variant_ghost',\n        indicator: 'select__indicator--variant_ghost',\n        clearTrigger: 'select__clearTrigger--variant_ghost',\n        item: 'select__item--variant_ghost',\n        itemText: 'select__itemText--variant_ghost',\n        itemIndicator: 'select__itemIndicator--variant_ghost',\n        itemGroup: 'select__itemGroup--variant_ghost',\n        itemGroupLabel: 'select__itemGroupLabel--variant_ghost',\n        content: 'select__content--variant_ghost',\n        root: 'select__root--variant_ghost',\n        control: 'select__control--variant_ghost',\n        valueText: 'select__valueText--variant_ghost',\n      },\n    },\n    size: {\n      sm: {\n        label: 'select__label--size_sm',\n        positioner: 'select__positioner--size_sm',\n        trigger: 'select__trigger--size_sm',\n        indicator: 'select__indicator--size_sm',\n        clearTrigger: 'select__clearTrigger--size_sm',\n        item: 'select__item--size_sm',\n        itemText: 'select__itemText--size_sm',\n        itemIndicator: 'select__itemIndicator--size_sm',\n        itemGroup: 'select__itemGroup--size_sm',\n        itemGroupLabel: 'select__itemGroupLabel--size_sm',\n        content: 'select__content--size_sm',\n        root: 'select__root--size_sm',\n        control: 'select__control--size_sm',\n        valueText: 'select__valueText--size_sm',\n      },\n      md: {\n        label: 'select__label--size_md',\n        positioner: 'select__positioner--size_md',\n        trigger: 'select__trigger--size_md',\n        indicator: 'select__indicator--size_md',\n        clearTrigger: 'select__clearTrigger--size_md',\n        item: 'select__item--size_md',\n        itemText: 'select__itemText--size_md',\n        itemIndicator: 'select__itemIndicator--size_md',\n        itemGroup: 'select__itemGroup--size_md',\n        itemGroupLabel: 'select__itemGroupLabel--size_md',\n        content: 'select__content--size_md',\n        root: 'select__root--size_md',\n        control: 'select__control--size_md',\n        valueText: 'select__valueText--size_md',\n      },\n      lg: {\n        label: 'select__label--size_lg',\n        positioner: 'select__positioner--size_lg',\n        trigger: 'select__trigger--size_lg',\n        indicator: 'select__indicator--size_lg',\n        clearTrigger: 'select__clearTrigger--size_lg',\n        item: 'select__item--size_lg',\n        itemText: 'select__itemText--size_lg',\n        itemIndicator: 'select__itemIndicator--size_lg',\n        itemGroup: 'select__itemGroup--size_lg',\n        itemGroupLabel: 'select__itemGroupLabel--size_lg',\n        content: 'select__content--size_lg',\n        root: 'select__root--size_lg',\n        control: 'select__control--size_lg',\n        valueText: 'select__valueText--size_lg',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(Select.Root, 'root')\nexport const ClearTrigger = withContext(Select.ClearTrigger, 'clearTrigger')\nexport const Content = withContext(Select.Content, 'content')\nexport const Control = withContext(Select.Control, 'control')\nexport const Indicator = withContext(Select.Indicator, 'indicator')\nexport const Item = withContext(Select.Item, 'item')\nexport const ItemGroup = withContext(Select.ItemGroup, 'itemGroup')\nexport const ItemGroupLabel = withContext(Select.ItemGroupLabel, 'itemGroupLabel')\nexport const ItemIndicator = withContext(Select.ItemIndicator, 'itemIndicator')\nexport const ItemText = withContext(Select.ItemText, 'itemText')\nexport const Label = withContext(Select.Label, 'label')\nexport const Positioner = withContext(Select.Positioner, 'positioner')\nexport const Trigger = withContext(Select.Trigger, 'trigger')\nexport const ValueText = withContext(Select.ValueText, 'valueText')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface ClearTriggerProps extends ComponentProps<typeof ClearTrigger> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface IndicatorProps extends ComponentProps<typeof Indicator> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemGroupProps extends ComponentProps<typeof ItemGroup> {}\nexport interface ItemGroupLabelProps extends ComponentProps<typeof ItemGroupLabel> {}\nexport interface ItemIndicatorProps extends ComponentProps<typeof ItemIndicator> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface ValueTextProps extends ComponentProps<typeof ValueText> {}\n",
      "hasMultipleParts": true
    }
  ]
}
