{
  "files": [
    {
      "filename": "number-input.tsx",
      "content": "import {\n  NumberInput as ArkNumberInput,\n  type NumberInputRootProps,\n} from '@ark-ui/react/number-input'\nimport { forwardRef } from 'react'\nimport { type VariantProps, tv } from 'tailwind-variants'\n\nexport interface NumberInputProps extends NumberInputRootProps, NumberInputVariantProps {}\n\nexport const NumberInput = forwardRef<HTMLDivElement, NumberInputProps>((props, ref) => {\n  const { children, size, className, ...rootProps } = props\n  const { root, control, label, input, incrementTrigger, decrementTrigger } = numberInput({ size })\n\n  return (\n    <ArkNumberInput.Root ref={ref} className={root({ className })} {...rootProps}>\n      {children && <ArkNumberInput.Label className={label()}>{children}</ArkNumberInput.Label>}\n      <ArkNumberInput.Control className={control()}>\n        <ArkNumberInput.Input className={input()} />\n        <ArkNumberInput.IncrementTrigger className={incrementTrigger()}>\n          <ChevronUpIcon />\n        </ArkNumberInput.IncrementTrigger>\n        <ArkNumberInput.DecrementTrigger className={decrementTrigger()}>\n          <ChevronDownIcon />\n        </ArkNumberInput.DecrementTrigger>\n      </ArkNumberInput.Control>\n    </ArkNumberInput.Root>\n  )\n})\n\nNumberInput.displayName = 'NumberInput'\n\ntype NumberInputVariantProps = VariantProps<typeof numberInput>\n\nconst numberInput = tv(\n  {\n    base: 'numberInput',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'numberInput__root',\n      label: 'numberInput__label',\n      input: 'numberInput__input',\n      control: 'numberInput__control',\n      incrementTrigger: 'numberInput__incrementTrigger',\n      decrementTrigger: 'numberInput__decrementTrigger',\n      scrubber: 'numberInput__scrubber',\n    },\n    variants: {\n      size: {\n        md: {\n          root: 'numberInput__root--size_md',\n          label: 'numberInput__label--size_md',\n          input: 'numberInput__input--size_md',\n          control: 'numberInput__control--size_md',\n          incrementTrigger: 'numberInput__incrementTrigger--size_md',\n          decrementTrigger: 'numberInput__decrementTrigger--size_md',\n          scrubber: 'numberInput__scrubber--size_md',\n        },\n        lg: {\n          root: 'numberInput__root--size_lg',\n          label: 'numberInput__label--size_lg',\n          input: 'numberInput__input--size_lg',\n          control: 'numberInput__control--size_lg',\n          incrementTrigger: 'numberInput__incrementTrigger--size_lg',\n          decrementTrigger: 'numberInput__decrementTrigger--size_lg',\n          scrubber: 'numberInput__scrubber--size_lg',\n        },\n        xl: {\n          root: 'numberInput__root--size_xl',\n          label: 'numberInput__label--size_xl',\n          input: 'numberInput__input--size_xl',\n          control: 'numberInput__control--size_xl',\n          incrementTrigger: 'numberInput__incrementTrigger--size_xl',\n          decrementTrigger: 'numberInput__decrementTrigger--size_xl',\n          scrubber: 'numberInput__scrubber--size_xl',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n\nconst ChevronUpIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Up</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m18 15l-6-6l-6 6\"\n    />\n  </svg>\n)\n\nconst ChevronDownIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Down</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m6 9l6 6l6-6\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
