{
  "files": [
    {
      "filename": "tabs.tsx",
      "content": "import { Tabs } from '@ark-ui/react/tabs'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst tabs = tv(\n  {\n    base: 'tabs',\n    defaultVariants: { size: 'md', variant: 'line' },\n    slots: {\n      root: 'tabs__root',\n      list: 'tabs__list',\n      trigger: 'tabs__trigger',\n      content: 'tabs__content',\n      indicator: 'tabs__indicator',\n    },\n    variants: {\n      variant: {\n        enclosed: {\n          root: 'tabs__root--variant_enclosed',\n          list: 'tabs__list--variant_enclosed',\n          trigger: 'tabs__trigger--variant_enclosed',\n          content: 'tabs__content--variant_enclosed',\n          indicator: 'tabs__indicator--variant_enclosed',\n        },\n        line: {\n          root: 'tabs__root--variant_line',\n          list: 'tabs__list--variant_line',\n          trigger: 'tabs__trigger--variant_line',\n          content: 'tabs__content--variant_line',\n          indicator: 'tabs__indicator--variant_line',\n        },\n        outline: {\n          root: 'tabs__root--variant_outline',\n          list: 'tabs__list--variant_outline',\n          trigger: 'tabs__trigger--variant_outline',\n          content: 'tabs__content--variant_outline',\n          indicator: 'tabs__indicator--variant_outline',\n        },\n      },\n      size: {\n        sm: {\n          root: 'tabs__root--size_sm',\n          list: 'tabs__list--size_sm',\n          trigger: 'tabs__trigger--size_sm',\n          content: 'tabs__content--size_sm',\n          indicator: 'tabs__indicator--size_sm',\n        },\n        md: {\n          root: 'tabs__root--size_md',\n          list: 'tabs__list--size_md',\n          trigger: 'tabs__trigger--size_md',\n          content: 'tabs__content--size_md',\n          indicator: 'tabs__indicator--size_md',\n        },\n        lg: {\n          root: 'tabs__root--size_lg',\n          list: 'tabs__list--size_lg',\n          trigger: 'tabs__trigger--size_lg',\n          content: 'tabs__content--size_lg',\n          indicator: 'tabs__indicator--size_lg',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(tabs)\n\nexport interface RootProps extends Tabs.RootProps, VariantProps<typeof tabs> {}\nexport const Root = withProvider<HTMLDivElement, RootProps>(Tabs.Root, 'root')\n\nexport const Content = withContext<HTMLDivElement, Tabs.ContentProps>(Tabs.Content, 'content')\n\nexport const Indicator = withContext<HTMLDivElement, Tabs.IndicatorProps>(\n  Tabs.Indicator,\n  'indicator',\n)\n\nexport const List = withContext<HTMLDivElement, Tabs.ListProps>(Tabs.List, 'list')\n\nexport const Trigger = withContext<HTMLButtonElement, Tabs.TriggerProps>(Tabs.Trigger, 'trigger')\n\nexport { TabsContext as Context, type TabsContextProps as ContextProps } from '@ark-ui/react/tabs'\n",
      "hasMultipleParts": true
    }
  ]
}
