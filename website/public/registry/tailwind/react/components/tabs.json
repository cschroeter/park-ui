{
  "files": [
    {
      "filename": "tabs.tsx",
      "content": "import { Tabs as ArkTabs } from '@ark-ui/react/tabs'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'tabs',\n  defaultVariants: { size: 'md', variant: 'line' },\n  slots: {\n    root: 'tabs__root',\n    list: 'tabs__list',\n    trigger: 'tabs__trigger',\n    content: 'tabs__content',\n    indicator: 'tabs__indicator',\n  },\n  variants: {\n    variant: {\n      line: {\n        root: 'tabs__root--variant_line',\n        list: 'tabs__list--variant_line',\n        trigger: 'tabs__trigger--variant_line',\n        content: 'tabs__content--variant_line',\n        indicator: 'tabs__indicator--variant_line',\n      },\n      outline: {\n        root: 'tabs__root--variant_outline',\n        list: 'tabs__list--variant_outline',\n        trigger: 'tabs__trigger--variant_outline',\n        content: 'tabs__content--variant_outline',\n        indicator: 'tabs__indicator--variant_outline',\n      },\n    },\n    size: {\n      sm: {\n        root: 'tabs__root--size_sm',\n        list: 'tabs__list--size_sm',\n        trigger: 'tabs__trigger--size_sm',\n        content: 'tabs__content--size_sm',\n        indicator: 'tabs__indicator--size_sm',\n      },\n      md: {\n        root: 'tabs__root--size_md',\n        list: 'tabs__list--size_md',\n        trigger: 'tabs__trigger--size_md',\n        content: 'tabs__content--size_md',\n        indicator: 'tabs__indicator--size_md',\n      },\n      lg: {\n        root: 'tabs__root--size_lg',\n        list: 'tabs__list--size_lg',\n        trigger: 'tabs__trigger--size_lg',\n        content: 'tabs__content--size_lg',\n        indicator: 'tabs__indicator--size_lg',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst Tabs = withProvider(ArkTabs.Root, 'root')\nconst TabsContent = withContext(ArkTabs.Content, 'content')\nconst TabsIndicator = withContext(ArkTabs.Indicator, 'indicator')\nconst TabsList = withContext(ArkTabs.List, 'list')\nconst TabsTrigger = withContext(ArkTabs.Trigger, 'trigger')\n\nconst Root = Tabs\nconst Content = TabsContent\nconst Indicator = TabsIndicator\nconst List = TabsList\nconst Trigger = TabsTrigger\n\nexport {\n  Content,\n  Indicator,\n  List,\n  Root,\n  Tabs,\n  TabsContent,\n  TabsIndicator,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
