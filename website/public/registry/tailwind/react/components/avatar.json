{
  "files": [
    {
      "filename": "avatar.tsx",
      "content": "import { Avatar as ArkAvatar, type AvatarRootProps } from '@ark-ui/react/avatar'\nimport { forwardRef } from 'react'\nimport { type VariantProps, tv } from 'tailwind-variants'\n\nexport interface AvatarProps extends AvatarRootProps, AvatarVariantProps {\n  name?: string\n  src?: string\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>((props, ref) => {\n  const { size, className, name, src, ...rootProps } = props\n  const { root, fallback, image } = avatar({ size })\n\n  return (\n    <ArkAvatar.Root ref={ref} className={root({ className })} {...rootProps}>\n      <ArkAvatar.Fallback className={fallback()}>\n        {getInitials(name) || <UserIcon />}\n      </ArkAvatar.Fallback>\n      <ArkAvatar.Image className={image()} src={src} alt={name} />\n    </ArkAvatar.Root>\n  )\n})\n\nAvatar.displayName = 'Avatar'\n\ntype AvatarVariantProps = VariantProps<typeof avatar>\n\nconst avatar = tv(\n  {\n    base: 'avatar',\n    defaultVariants: { size: 'md' },\n    slots: { root: 'avatar__root', image: 'avatar__image', fallback: 'avatar__fallback' },\n    variants: {\n      size: {\n        xs: {\n          root: 'avatar__root--size_xs',\n          image: 'avatar__image--size_xs',\n          fallback: 'avatar__fallback--size_xs',\n        },\n        sm: {\n          root: 'avatar__root--size_sm',\n          image: 'avatar__image--size_sm',\n          fallback: 'avatar__fallback--size_sm',\n        },\n        md: {\n          root: 'avatar__root--size_md',\n          image: 'avatar__image--size_md',\n          fallback: 'avatar__fallback--size_md',\n        },\n        lg: {\n          root: 'avatar__root--size_lg',\n          image: 'avatar__image--size_lg',\n          fallback: 'avatar__fallback--size_lg',\n        },\n        xl: {\n          root: 'avatar__root--size_xl',\n          image: 'avatar__image--size_xl',\n          fallback: 'avatar__fallback--size_xl',\n        },\n        '2xl': {\n          root: 'avatar__root--size_2xl',\n          image: 'avatar__image--size_2xl',\n          fallback: 'avatar__fallback--size_2xl',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n\nconst UserIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n  >\n    <title>User</title>\n    <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\n    <circle cx=\"12\" cy=\"7\" r=\"4\" />\n  </svg>\n)\n\nconst getInitials = (name = '') =>\n  name\n    .split(' ')\n    .map((part) => part[0])\n    .splice(0, 2)\n    .join('')\n    .toUpperCase()\n",
      "hasMultipleParts": false
    }
  ]
}
