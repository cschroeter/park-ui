{
  "files": [
    {
      "filename": "hover-card.tsx",
      "content": "import { HoverCard } from '@ark-ui/react/hover-card'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst hoverCard = tv(\n  {\n    base: 'hoverCard',\n    slots: {\n      arrow: 'hoverCard__arrow',\n      arrowTip: 'hoverCard__arrowTip',\n      trigger: 'hoverCard__trigger',\n      positioner: 'hoverCard__positioner',\n      content: 'hoverCard__content',\n    },\n    variants: {},\n  },\n  { twMerge: false },\n)\nconst { withRootProvider, withContext } = createStyleContext(hoverCard)\n\nexport interface RootProps extends HoverCard.RootProps, VariantProps<typeof hoverCard> {}\nexport const Root = withRootProvider<RootProps>(HoverCard.Root)\n\nexport const Arrow = withContext<HTMLDivElement, HoverCard.ArrowProps>(HoverCard.Arrow, 'arrow')\n\nexport const ArrowTip = withContext<HTMLDivElement, HoverCard.ArrowTipProps>(\n  HoverCard.ArrowTip,\n  'arrowTip',\n)\n\nexport const Content = withContext<HTMLDivElement, HoverCard.ContentProps>(\n  HoverCard.Content,\n  'content',\n)\n\nexport const Positioner = withContext<HTMLDivElement, HoverCard.PositionerProps>(\n  HoverCard.Positioner,\n  'positioner',\n)\n\nexport const Trigger = withContext<HTMLButtonElement, HoverCard.TriggerProps>(\n  HoverCard.Trigger,\n  'trigger',\n)\n\nexport {\n  HoverCardContext as Context,\n  type HoverCardContextProps as ContextProps,\n} from '@ark-ui/react/hover-card'\n",
      "hasMultipleParts": true
    }
  ]
}
