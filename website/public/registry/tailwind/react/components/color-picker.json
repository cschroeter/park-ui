{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker } from '@ark-ui/react/color-picker'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'colorPicker',\n  slots: {\n    root: 'colorPicker__root',\n    label: 'colorPicker__label',\n    control: 'colorPicker__control',\n    trigger: 'colorPicker__trigger',\n    positioner: 'colorPicker__positioner',\n    content: 'colorPicker__content',\n    area: 'colorPicker__area',\n    areaThumb: 'colorPicker__areaThumb',\n    areaBackground: 'colorPicker__areaBackground',\n    channelSlider: 'colorPicker__channelSlider',\n    channelSliderTrack: 'colorPicker__channelSliderTrack',\n    channelSliderThumb: 'colorPicker__channelSliderThumb',\n    channelInput: 'colorPicker__channelInput',\n    transparencyGrid: 'colorPicker__transparencyGrid',\n    swatchGroup: 'colorPicker__swatchGroup',\n    swatchTrigger: 'colorPicker__swatchTrigger',\n    swatchIndicator: 'colorPicker__swatchIndicator',\n    swatch: 'colorPicker__swatch',\n    eyeDropperTrigger: 'colorPicker__eyeDropperTrigger',\n    formatTrigger: 'colorPicker__formatTrigger',\n    formatSelect: 'colorPicker__formatSelect',\n    valueText: 'colorPicker__valueText',\n    view: 'colorPicker__view',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(ColorPicker.Root, 'root')\nexport const Area = withContext(ColorPicker.Area, 'area')\nexport const AreaBackground = withContext(ColorPicker.AreaBackground, 'areaBackground')\nexport const AreaThumb = withContext(ColorPicker.AreaThumb, 'areaThumb')\nexport const ChannelInput = withContext(ColorPicker.ChannelInput, 'channelInput')\nexport const ChannelSlider = withContext(ColorPicker.ChannelSlider, 'channelSlider')\nexport const ChannelSliderThumb = withContext(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\nexport const ChannelSliderTrack = withContext(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\nexport const Content = withContext(ColorPicker.Content, 'content')\nexport const Control = withContext(ColorPicker.Control, 'control')\nexport const EyeDropperTrigger = withContext(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\nexport const FormatSelect = withContext(ColorPicker.FormatSelect, 'formatSelect')\nexport const FormatTrigger = withContext(ColorPicker.FormatTrigger, 'formatTrigger')\nexport const Label = withContext(ColorPicker.Label, 'label')\nexport const Positioner = withContext(ColorPicker.Positioner, 'positioner')\nexport const Swatch = withContext(ColorPicker.Swatch, 'swatch')\nexport const SwatchGroup = withContext(ColorPicker.SwatchGroup, 'swatchGroup')\nexport const SwatchIndicator = withContext(ColorPicker.SwatchIndicator, 'swatchIndicator')\nexport const SwatchTrigger = withContext(ColorPicker.SwatchTrigger, 'swatchTrigger')\nexport const TransparencyGrid = withContext(ColorPicker.TransparencyGrid, 'transparencyGrid')\nexport const Trigger = withContext(ColorPicker.Trigger, 'trigger')\nexport const ValueText = withContext(ColorPicker.ValueText, 'valueText')\nexport const View = withContext(ColorPicker.View, 'view')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface AreaProps extends ComponentProps<typeof Area> {}\nexport interface AreaBackgroundProps extends ComponentProps<typeof AreaBackground> {}\nexport interface AreaThumbProps extends ComponentProps<typeof AreaThumb> {}\nexport interface ChannelInputProps extends ComponentProps<typeof ChannelInput> {}\nexport interface ChannelSliderProps extends ComponentProps<typeof ChannelSlider> {}\nexport interface ChannelSliderThumbProps extends ComponentProps<typeof ChannelSliderThumb> {}\nexport interface ChannelSliderTrackProps extends ComponentProps<typeof ChannelSliderTrack> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface ControlProps extends ComponentProps<typeof Control> {}\nexport interface EyeDropperTriggerProps extends ComponentProps<typeof EyeDropperTrigger> {}\nexport interface FormatSelectProps extends ComponentProps<typeof FormatSelect> {}\nexport interface FormatTriggerProps extends ComponentProps<typeof FormatTrigger> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface SwatchProps extends ComponentProps<typeof Swatch> {}\nexport interface SwatchGroupProps extends ComponentProps<typeof SwatchGroup> {}\nexport interface SwatchIndicatorProps extends ComponentProps<typeof SwatchIndicator> {}\nexport interface SwatchTriggerProps extends ComponentProps<typeof SwatchTrigger> {}\nexport interface TransparencyGridProps extends ComponentProps<typeof TransparencyGrid> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\nexport interface ValueTextProps extends ComponentProps<typeof ValueText> {}\nexport interface ViewProps extends ComponentProps<typeof View> {}\n",
      "hasMultipleParts": true
    }
  ]
}
