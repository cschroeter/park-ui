{
  "files": [
    {
      "filename": "popover.tsx",
      "content": "import { Popover } from '@ark-ui/react/popover'\nimport type { ComponentProps } from 'react'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'popover',\n  slots: {\n    arrow: 'popover__arrow',\n    arrowTip: 'popover__arrowTip',\n    anchor: 'popover__anchor',\n    trigger: 'popover__trigger',\n    indicator: 'popover__indicator',\n    positioner: 'popover__positioner',\n    content: 'popover__content',\n    title: 'popover__title',\n    description: 'popover__description',\n    closeTrigger: 'popover__closeTrigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(Popover.Root)\nexport const Anchor = withContext(Popover.Anchor, 'anchor')\nexport const Arrow = withContext(Popover.Arrow, 'arrow')\nexport const ArrowTip = withContext(Popover.ArrowTip, 'arrowTip')\nexport const CloseTrigger = withContext(Popover.CloseTrigger, 'closeTrigger')\nexport const Content = withContext(Popover.Content, 'content')\nexport const Description = withContext(Popover.Description, 'description')\nexport const Indicator = withContext(Popover.Indicator, 'indicator')\nexport const Positioner = withContext(Popover.Positioner, 'positioner')\nexport const Title = withContext(Popover.Title, 'title')\nexport const Trigger = withContext(Popover.Trigger, 'trigger')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface AnchorProps extends ComponentProps<typeof Anchor> {}\nexport interface ArrowProps extends ComponentProps<typeof Arrow> {}\nexport interface ArrowTipProps extends ComponentProps<typeof ArrowTip> {}\nexport interface CloseTriggerProps extends ComponentProps<typeof CloseTrigger> {}\nexport interface ContentProps extends ComponentProps<typeof Content> {}\nexport interface DescriptionProps extends ComponentProps<typeof Description> {}\nexport interface IndicatorProps extends ComponentProps<typeof Indicator> {}\nexport interface PositionerProps extends ComponentProps<typeof Positioner> {}\nexport interface TitleProps extends ComponentProps<typeof Title> {}\nexport interface TriggerProps extends ComponentProps<typeof Trigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
