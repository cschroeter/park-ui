{
  "files": [
    {
      "filename": "popover.tsx",
      "content": "import { Popover } from '@ark-ui/react/popover'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst popover = tv(\n  {\n    base: 'popover',\n    slots: {\n      arrow: 'popover__arrow',\n      arrowTip: 'popover__arrowTip',\n      anchor: 'popover__anchor',\n      trigger: 'popover__trigger',\n      indicator: 'popover__indicator',\n      positioner: 'popover__positioner',\n      content: 'popover__content',\n      title: 'popover__title',\n      description: 'popover__description',\n      closeTrigger: 'popover__closeTrigger',\n    },\n    variants: {},\n  },\n  { twMerge: false },\n)\nconst { withRootProvider, withContext } = createStyleContext(popover)\n\nexport interface RootProps extends Popover.RootProps, VariantProps<typeof popover> {}\nexport const Root = withRootProvider<RootProps>(Popover.Root)\n\nexport const Anchor = withContext<HTMLDivElement, Popover.AnchorProps>(Popover.Anchor, 'anchor')\n\nexport const Arrow = withContext<HTMLDivElement, Popover.ArrowProps>(Popover.Arrow, 'arrow')\n\nexport const ArrowTip = withContext<HTMLDivElement, Popover.ArrowTipProps>(\n  Popover.ArrowTip,\n  'arrowTip',\n)\n\nexport const CloseTrigger = withContext<HTMLButtonElement, Popover.CloseTriggerProps>(\n  Popover.CloseTrigger,\n  'closeTrigger',\n)\n\nexport const Content = withContext<HTMLDivElement, Popover.ContentProps>(Popover.Content, 'content')\n\nexport const Description = withContext<HTMLParagraphElement, Popover.DescriptionProps>(\n  Popover.Description,\n  'description',\n)\n\nexport const Indicator = withContext<HTMLDivElement, Popover.IndicatorProps>(\n  Popover.Indicator,\n  'indicator',\n)\n\nexport const Positioner = withContext<HTMLDivElement, Popover.PositionerProps>(\n  Popover.Positioner,\n  'positioner',\n)\n\nexport const Title = withContext<HTMLDivElement, Popover.TitleProps>(Popover.Title, 'title')\n\nexport const Trigger = withContext<HTMLButtonElement, Popover.TriggerProps>(\n  Popover.Trigger,\n  'trigger',\n)\n\nexport {\n  PopoverContext as Context,\n  type PopoverContextProps as ContextProps,\n} from '@ark-ui/react/popover'\n",
      "hasMultipleParts": true
    }
  ]
}
