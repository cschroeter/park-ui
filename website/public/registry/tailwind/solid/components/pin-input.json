{
  "files": [
    {
      "filename": "pin-input.tsx",
      "content": "import { PinInput as ArkPinInput, type PinInputRootProps } from '@ark-ui/solid'\nimport { Index, Show, children, splitProps } from 'solid-js'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { Input } from '~/components/ui/input'\n\nexport interface PinInputProps extends PinInputRootProps, PinInputVariantProps {\n  /**\n   * The number of inputs to render.\n   * @default 4\n   */\n  length?: number\n}\n\nexport const PinInput = (props: PinInputProps) => {\n  const [variantProps, pinInputProps] = splitProps(props, ['size', 'class'])\n  const [localProps, rootProps] = splitProps(pinInputProps, ['children', 'length'])\n  const getChildren = children(() => localProps.children)\n  const { root, control, label, input } = pinInput(variantProps)\n\n  return (\n    <ArkPinInput.Root class={root()} {...rootProps}>\n      <Show when={getChildren()}>\n        <ArkPinInput.Label class={label()}>{getChildren()}</ArkPinInput.Label>\n      </Show>\n      <ArkPinInput.Control class={control()}>\n        <Index each={Array.from({ length: localProps.length ?? 4 }, (_, index) => index)}>\n          {(index) => (\n            <ArkPinInput.Input\n              class={input()}\n              index={index()}\n              asChild={(props) => <Input {...props()} size={variantProps.size} />}\n            />\n          )}\n        </Index>\n      </ArkPinInput.Control>\n    </ArkPinInput.Root>\n  )\n}\n\ntype PinInputVariantProps = VariantProps<typeof pinInput>\n\nconst pinInput = tv(\n  {\n    base: 'pinInput',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'pinInput__root',\n      label: 'pinInput__label',\n      input: 'pinInput__input',\n      control: 'pinInput__control',\n    },\n    variants: {\n      size: {\n        xs: {\n          root: 'pinInput__root--size_xs',\n          label: 'pinInput__label--size_xs',\n          input: 'pinInput__input--size_xs',\n          control: 'pinInput__control--size_xs',\n        },\n        sm: {\n          root: 'pinInput__root--size_sm',\n          label: 'pinInput__label--size_sm',\n          input: 'pinInput__input--size_sm',\n          control: 'pinInput__control--size_sm',\n        },\n        md: {\n          root: 'pinInput__root--size_md',\n          label: 'pinInput__label--size_md',\n          input: 'pinInput__input--size_md',\n          control: 'pinInput__control--size_md',\n        },\n        lg: {\n          root: 'pinInput__root--size_lg',\n          label: 'pinInput__label--size_lg',\n          input: 'pinInput__input--size_lg',\n          control: 'pinInput__control--size_lg',\n        },\n        xl: {\n          root: 'pinInput__root--size_xl',\n          label: 'pinInput__label--size_xl',\n          input: 'pinInput__input--size_xl',\n          control: 'pinInput__control--size_xl',\n        },\n        '2xl': {\n          root: 'pinInput__root--size_2xl',\n          label: 'pinInput__label--size_2xl',\n          input: 'pinInput__input--size_2xl',\n          control: 'pinInput__control--size_2xl',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n",
      "hasMultipleParts": false
    }
  ]
}
