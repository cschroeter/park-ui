{
  "files": [
    {
      "filename": "select.tsx",
      "content": "import { Select } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst select = tv(\n  {\n    base: 'select',\n    defaultVariants: { size: 'md', variant: 'outline' },\n    slots: {\n      label: 'select__label',\n      positioner: 'select__positioner',\n      trigger: 'select__trigger',\n      indicator: 'select__indicator',\n      clearTrigger: 'select__clearTrigger',\n      item: 'select__item',\n      itemText: 'select__itemText',\n      itemIndicator: 'select__itemIndicator',\n      itemGroup: 'select__itemGroup',\n      itemGroupLabel: 'select__itemGroupLabel',\n      content: 'select__content',\n      root: 'select__root',\n      control: 'select__control',\n      valueText: 'select__valueText',\n    },\n    variants: {\n      variant: {\n        outline: {\n          label: 'select__label--variant_outline',\n          positioner: 'select__positioner--variant_outline',\n          trigger: 'select__trigger--variant_outline',\n          indicator: 'select__indicator--variant_outline',\n          clearTrigger: 'select__clearTrigger--variant_outline',\n          item: 'select__item--variant_outline',\n          itemText: 'select__itemText--variant_outline',\n          itemIndicator: 'select__itemIndicator--variant_outline',\n          itemGroup: 'select__itemGroup--variant_outline',\n          itemGroupLabel: 'select__itemGroupLabel--variant_outline',\n          content: 'select__content--variant_outline',\n          root: 'select__root--variant_outline',\n          control: 'select__control--variant_outline',\n          valueText: 'select__valueText--variant_outline',\n        },\n        ghost: {\n          label: 'select__label--variant_ghost',\n          positioner: 'select__positioner--variant_ghost',\n          trigger: 'select__trigger--variant_ghost',\n          indicator: 'select__indicator--variant_ghost',\n          clearTrigger: 'select__clearTrigger--variant_ghost',\n          item: 'select__item--variant_ghost',\n          itemText: 'select__itemText--variant_ghost',\n          itemIndicator: 'select__itemIndicator--variant_ghost',\n          itemGroup: 'select__itemGroup--variant_ghost',\n          itemGroupLabel: 'select__itemGroupLabel--variant_ghost',\n          content: 'select__content--variant_ghost',\n          root: 'select__root--variant_ghost',\n          control: 'select__control--variant_ghost',\n          valueText: 'select__valueText--variant_ghost',\n        },\n      },\n      size: {\n        sm: {\n          label: 'select__label--size_sm',\n          positioner: 'select__positioner--size_sm',\n          trigger: 'select__trigger--size_sm',\n          indicator: 'select__indicator--size_sm',\n          clearTrigger: 'select__clearTrigger--size_sm',\n          item: 'select__item--size_sm',\n          itemText: 'select__itemText--size_sm',\n          itemIndicator: 'select__itemIndicator--size_sm',\n          itemGroup: 'select__itemGroup--size_sm',\n          itemGroupLabel: 'select__itemGroupLabel--size_sm',\n          content: 'select__content--size_sm',\n          root: 'select__root--size_sm',\n          control: 'select__control--size_sm',\n          valueText: 'select__valueText--size_sm',\n        },\n        md: {\n          label: 'select__label--size_md',\n          positioner: 'select__positioner--size_md',\n          trigger: 'select__trigger--size_md',\n          indicator: 'select__indicator--size_md',\n          clearTrigger: 'select__clearTrigger--size_md',\n          item: 'select__item--size_md',\n          itemText: 'select__itemText--size_md',\n          itemIndicator: 'select__itemIndicator--size_md',\n          itemGroup: 'select__itemGroup--size_md',\n          itemGroupLabel: 'select__itemGroupLabel--size_md',\n          content: 'select__content--size_md',\n          root: 'select__root--size_md',\n          control: 'select__control--size_md',\n          valueText: 'select__valueText--size_md',\n        },\n        lg: {\n          label: 'select__label--size_lg',\n          positioner: 'select__positioner--size_lg',\n          trigger: 'select__trigger--size_lg',\n          indicator: 'select__indicator--size_lg',\n          clearTrigger: 'select__clearTrigger--size_lg',\n          item: 'select__item--size_lg',\n          itemText: 'select__itemText--size_lg',\n          itemIndicator: 'select__itemIndicator--size_lg',\n          itemGroup: 'select__itemGroup--size_lg',\n          itemGroupLabel: 'select__itemGroupLabel--size_lg',\n          content: 'select__content--size_lg',\n          root: 'select__root--size_lg',\n          control: 'select__control--size_lg',\n          valueText: 'select__valueText--size_lg',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport interface RootProps\n  extends Select.RootProps<Select.CollectionItem>,\n    VariantProps<typeof select> {}\nexport const Root = withProvider<RootProps>(Select.Root, 'root')\n\nexport const ClearTrigger = withContext<Select.ClearTriggerProps>(\n  Select.ClearTrigger,\n  'clearTrigger',\n)\n\nexport const Content = withContext<Select.ContentProps>(Select.Content, 'content')\n\nexport const Control = withContext<Select.ControlProps>(Select.Control, 'control')\n\nexport const Indicator = withContext<Select.IndicatorProps>(Select.Indicator, 'indicator')\n\nexport const ItemGroupLabel = withContext<Select.ItemGroupLabelProps>(\n  Select.ItemGroupLabel,\n  'itemGroupLabel',\n)\n\nexport const ItemGroup = withContext<Select.ItemGroupProps>(Select.ItemGroup, 'itemGroup')\n\nexport const ItemIndicator = withContext<Select.ItemIndicatorProps>(\n  Select.ItemIndicator,\n  'itemIndicator',\n)\n\nexport const Item = withContext<Select.ItemProps>(Select.Item, 'item')\n\nexport const ItemText = withContext<Select.ItemTextProps>(Select.ItemText, 'itemText')\n\nexport const Label = withContext<Select.LabelProps>(Select.Label, 'label')\n\nexport const Positioner = withContext<Select.PositionerProps>(Select.Positioner, 'positioner')\n\nexport const Trigger = withContext<Select.TriggerProps>(Select.Trigger, 'trigger')\n\nexport const ValueText = withContext<Select.ValueTextProps>(Select.ValueText, 'valueText')\n\nexport {\n  SelectContext as Context,\n  SelectHiddenSelect as HiddenSelect,\n  type SelectContextProps as ContextProps,\n  type SelectHiddenSelectProps as HiddenSelectProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
