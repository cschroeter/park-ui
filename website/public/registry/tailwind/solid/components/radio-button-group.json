{
  "files": [
    {
      "filename": "radio-button-group.tsx",
      "content": "import { RadioGroup as ArkRadioButtonGroup } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst radioButtonGroup = tv(\n  {\n    base: 'radioButtonGroup',\n    defaultVariants: { size: 'md', variant: 'solid' },\n    slots: {\n      root: 'radioButtonGroup__root',\n      label: 'radioButtonGroup__label',\n      item: 'radioButtonGroup__item',\n      itemText: 'radioButtonGroup__itemText',\n      itemControl: 'radioButtonGroup__itemControl',\n      indicator: 'radioButtonGroup__indicator',\n    },\n    variants: {\n      variant: {\n        solid: {\n          root: 'radioButtonGroup__root--variant_solid',\n          label: 'radioButtonGroup__label--variant_solid',\n          item: 'radioButtonGroup__item--variant_solid',\n          itemText: 'radioButtonGroup__itemText--variant_solid',\n          itemControl: 'radioButtonGroup__itemControl--variant_solid',\n          indicator: 'radioButtonGroup__indicator--variant_solid',\n        },\n        outline: {\n          root: 'radioButtonGroup__root--variant_outline',\n          label: 'radioButtonGroup__label--variant_outline',\n          item: 'radioButtonGroup__item--variant_outline',\n          itemText: 'radioButtonGroup__itemText--variant_outline',\n          itemControl: 'radioButtonGroup__itemControl--variant_outline',\n          indicator: 'radioButtonGroup__indicator--variant_outline',\n        },\n      },\n      size: {\n        sm: {\n          root: 'radioButtonGroup__root--size_sm',\n          label: 'radioButtonGroup__label--size_sm',\n          item: 'radioButtonGroup__item--size_sm',\n          itemText: 'radioButtonGroup__itemText--size_sm',\n          itemControl: 'radioButtonGroup__itemControl--size_sm',\n          indicator: 'radioButtonGroup__indicator--size_sm',\n        },\n        md: {\n          root: 'radioButtonGroup__root--size_md',\n          label: 'radioButtonGroup__label--size_md',\n          item: 'radioButtonGroup__item--size_md',\n          itemText: 'radioButtonGroup__itemText--size_md',\n          itemControl: 'radioButtonGroup__itemControl--size_md',\n          indicator: 'radioButtonGroup__indicator--size_md',\n        },\n        lg: {\n          root: 'radioButtonGroup__root--size_lg',\n          label: 'radioButtonGroup__label--size_lg',\n          item: 'radioButtonGroup__item--size_lg',\n          itemText: 'radioButtonGroup__itemText--size_lg',\n          itemControl: 'radioButtonGroup__itemControl--size_lg',\n          indicator: 'radioButtonGroup__indicator--size_lg',\n        },\n        xl: {\n          root: 'radioButtonGroup__root--size_xl',\n          label: 'radioButtonGroup__label--size_xl',\n          item: 'radioButtonGroup__item--size_xl',\n          itemText: 'radioButtonGroup__itemText--size_xl',\n          itemControl: 'radioButtonGroup__itemControl--size_xl',\n          indicator: 'radioButtonGroup__indicator--size_xl',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(radioButtonGroup)\n\nexport const Root = withProvider(ArkRadioButtonGroup.Root, 'root')\nexport const Indicator = withContext(ArkRadioButtonGroup.Indicator, 'indicator')\nexport const Item = withContext(ArkRadioButtonGroup.Item, 'item')\nexport const ItemControl = withContext(ArkRadioButtonGroup.ItemControl, 'itemControl')\nexport const ItemText = withContext(ArkRadioButtonGroup.ItemText, 'itemText')\nexport const Label = withContext(ArkRadioButtonGroup.Label, 'label')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface IndicatorProps extends ComponentProps<typeof Indicator> {}\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemControlProps extends ComponentProps<typeof ItemControl> {}\nexport interface ItemTextProps extends ComponentProps<typeof ItemText> {}\nexport interface LabelProps extends ComponentProps<typeof Label> {}\n",
      "hasMultipleParts": true
    }
  ]
}
