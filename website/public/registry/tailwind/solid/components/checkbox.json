{
  "files": [
    {
      "filename": "checkbox.tsx",
      "content": "import { Checkbox as ArkCheckbox, type CheckboxRootProps as ArkCheckboxProps } from '@ark-ui/solid'\nimport { Show, children, splitProps } from 'solid-js'\nimport { type VariantProps, tv } from 'tailwind-variants'\n\nexport interface CheckboxProps extends ArkCheckboxProps, CheckboxVariantProps {}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const [variantProps, avatarProps] = splitProps(props, ['size', 'class'])\n  const [localProps, rootProps] = splitProps(avatarProps, ['children'])\n  const { root, control, label, indicator } = checkbox(variantProps)\n  const getChildren = children(() => localProps.children)\n\n  return (\n    <ArkCheckbox.Root class={root()} {...rootProps}>\n      <ArkCheckbox.Control class={control()}>\n        <ArkCheckbox.Indicator class={indicator()}>\n          <CheckIcon />\n        </ArkCheckbox.Indicator>\n        <ArkCheckbox.Indicator indeterminate class={indicator()}>\n          <MinusIcon />\n        </ArkCheckbox.Indicator>\n      </ArkCheckbox.Control>\n      <Show when={getChildren()}>\n        <ArkCheckbox.Label class={label()}>{getChildren()}</ArkCheckbox.Label>\n      </Show>\n    </ArkCheckbox.Root>\n  )\n}\n\ntype CheckboxVariantProps = VariantProps<typeof checkbox>\n\nconst checkbox = tv(\n  {\n    base: 'checkbox',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'checkbox__root',\n      label: 'checkbox__label',\n      control: 'checkbox__control',\n      indicator: 'checkbox__indicator',\n    },\n    variants: {\n      size: {\n        sm: {\n          root: 'checkbox__root--size_sm',\n          label: 'checkbox__label--size_sm',\n          control: 'checkbox__control--size_sm',\n          indicator: 'checkbox__indicator--size_sm',\n        },\n        md: {\n          root: 'checkbox__root--size_md',\n          label: 'checkbox__label--size_md',\n          control: 'checkbox__control--size_md',\n          indicator: 'checkbox__indicator--size_md',\n        },\n        lg: {\n          root: 'checkbox__root--size_lg',\n          label: 'checkbox__label--size_lg',\n          control: 'checkbox__control--size_lg',\n          indicator: 'checkbox__indicator--size_lg',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n\nconst CheckIcon = () => (\n  <svg viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Check</title>\n    <path\n      d=\"M11.6666 3.5L5.24992 9.91667L2.33325 7\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n)\n\nconst MinusIcon = () => (\n  <svg viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Minus</title>\n    <path\n      d=\"M2.91675 7H11.0834\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
