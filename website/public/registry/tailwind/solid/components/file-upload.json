{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import { FileUpload } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst fileUpload = tv(\n  {\n    base: 'fileUpload',\n    slots: {\n      root: 'fileUpload__root',\n      dropzone: 'fileUpload__dropzone',\n      item: 'fileUpload__item',\n      itemDeleteTrigger: 'fileUpload__itemDeleteTrigger',\n      itemGroup: 'fileUpload__itemGroup',\n      itemName: 'fileUpload__itemName',\n      itemPreview: 'fileUpload__itemPreview',\n      itemPreviewImage: 'fileUpload__itemPreviewImage',\n      itemSizeText: 'fileUpload__itemSizeText',\n      label: 'fileUpload__label',\n      trigger: 'fileUpload__trigger',\n    },\n    variants: {},\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(fileUpload)\n\nexport interface RootProps extends FileUpload.RootProps, VariantProps<typeof fileUpload> {}\nexport const Root = withProvider<RootProps>(FileUpload.Root, 'root')\n\nexport const Dropzone = withContext<FileUpload.DropzoneProps>(FileUpload.Dropzone, 'dropzone')\n\nexport const ItemDeleteTrigger = withContext<FileUpload.ItemDeleteTriggerProps>(\n  FileUpload.ItemDeleteTrigger,\n  'itemDeleteTrigger',\n)\n\nexport const ItemGroup = withContext<FileUpload.ItemGroupProps>(FileUpload.ItemGroup, 'itemGroup')\n\nexport const ItemName = withContext<FileUpload.ItemNameProps>(FileUpload.ItemName, 'itemName')\n\nexport const ItemPreviewImage = withContext<FileUpload.ItemPreviewImageProps>(\n  FileUpload.ItemPreviewImage,\n  'itemPreviewImage',\n)\n\nexport const ItemPreview = withContext<FileUpload.ItemPreviewProps>(\n  FileUpload.ItemPreview,\n  'itemPreview',\n)\n\nexport const Item = withContext<FileUpload.ItemProps>(FileUpload.Item, 'item')\n\nexport const ItemSizeText = withContext<FileUpload.ItemSizeTextProps>(\n  FileUpload.ItemSizeText,\n  'itemSizeText',\n)\n\nexport const Label = withContext<FileUpload.LabelProps>(FileUpload.Label, 'label')\n\nexport const Trigger = withContext<FileUpload.TriggerProps>(FileUpload.Trigger, 'trigger')\n\nexport {\n  FileUploadContext as Context,\n  FileUploadHiddenInput as HiddenInput,\n  type FileUploadContextProps as ContextProps,\n  type FileUploadHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
