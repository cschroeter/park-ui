{
  "files": [
    {
      "filename": "file-upload.tsx",
      "content": "import { FileUpload } from '@ark-ui/solid'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'fileUpload',\n  slots: {\n    root: 'fileUpload__root',\n    dropzone: 'fileUpload__dropzone',\n    item: 'fileUpload__item',\n    itemDeleteTrigger: 'fileUpload__itemDeleteTrigger',\n    itemGroup: 'fileUpload__itemGroup',\n    itemName: 'fileUpload__itemName',\n    itemPreview: 'fileUpload__itemPreview',\n    itemPreviewImage: 'fileUpload__itemPreviewImage',\n    itemSizeText: 'fileUpload__itemSizeText',\n    label: 'fileUpload__label',\n    trigger: 'fileUpload__trigger',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst Root = withProvider(FileUpload.Root, 'root')\nconst Dropzone = withContext(FileUpload.Dropzone, 'dropzone')\nconst Item = withContext(FileUpload.Item, 'item')\nconst ItemDeleteTrigger = withContext(FileUpload.ItemDeleteTrigger, 'itemDeleteTrigger')\nconst ItemGroup = withContext(FileUpload.ItemGroup, 'itemGroup')\nconst ItemName = withContext(FileUpload.ItemName, 'itemName')\nconst ItemPreview = withContext(FileUpload.ItemPreview, 'itemPreview')\nconst ItemPreviewImage = withContext(FileUpload.ItemPreviewImage, 'itemPreviewImage')\nconst ItemSizeText = withContext(FileUpload.ItemSizeText, 'itemSizeText')\nconst Label = withContext(FileUpload.Label, 'label')\nconst Trigger = withContext(FileUpload.Trigger, 'trigger')\n\nexport {\n  Dropzone,\n  Item,\n  ItemDeleteTrigger,\n  ItemGroup,\n  ItemName,\n  ItemPreview,\n  ItemPreviewImage,\n  ItemSizeText,\n  Label,\n  Root,\n  Trigger,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
