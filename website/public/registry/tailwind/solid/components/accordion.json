{
  "files": [
    {
      "filename": "accordion.ts",
      "content": "import { Accordion as ArkAccordion } from '@ark-ui/solid'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'accordion',\n  defaultVariants: { size: 'md' },\n  slots: {\n    root: 'accordion__root',\n    item: 'accordion__item',\n    itemTrigger: 'accordion__itemTrigger',\n    itemContent: 'accordion__itemContent',\n    itemIndicator: 'accordion__itemIndicator',\n  },\n  variants: {\n    size: {\n      md: {\n        root: 'accordion__root--size_md',\n        item: 'accordion__item--size_md',\n        itemTrigger: 'accordion__itemTrigger--size_md',\n        itemContent: 'accordion__itemContent--size_md',\n        itemIndicator: 'accordion__itemIndicator--size_md',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const AccordionRoot = withProvider(ArkAccordion.Root, 'root')\nexport const AccordionItem = withContext(ArkAccordion.Item, 'item')\nexport const AccordionItemContent = withContext(ArkAccordion.ItemContent, 'itemContent')\nexport const AccordionItemIndicator = withContext(ArkAccordion.ItemIndicator, 'itemIndicator')\nexport const AccordionItemTrigger = withContext(ArkAccordion.ItemTrigger, 'itemTrigger')\n\nexport const Accordion = Object.assign(AccordionRoot, {\n  Root: AccordionRoot,\n  Item: AccordionItem,\n  ItemContent: AccordionItemContent,\n  ItemIndicator: AccordionItemIndicator,\n  ItemTrigger: AccordionItemTrigger,\n})\n",
      "hasMultipleParts": true
    }
  ]
}
