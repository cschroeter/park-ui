{
  "files": [
    {
      "filename": "accordion.tsx",
      "content": "import { Accordion } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst accordion = tv(\n  {\n    base: 'accordion',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'accordion__root',\n      item: 'accordion__item',\n      itemTrigger: 'accordion__itemTrigger',\n      itemContent: 'accordion__itemContent',\n      itemIndicator: 'accordion__itemIndicator',\n    },\n    variants: {\n      size: {\n        md: {\n          root: 'accordion__root--size_md',\n          item: 'accordion__item--size_md',\n          itemTrigger: 'accordion__itemTrigger--size_md',\n          itemContent: 'accordion__itemContent--size_md',\n          itemIndicator: 'accordion__itemIndicator--size_md',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(accordion)\n\nexport interface RootProps extends Accordion.RootProps, VariantProps<typeof accordion> {}\nexport const Root = withProvider<RootProps>(Accordion.Root, 'root')\n\nexport const ItemContent = withContext<Accordion.ItemContentProps>(\n  Accordion.ItemContent,\n  'itemContent',\n)\n\nexport const ItemIndicator = withContext<Accordion.ItemIndicatorProps>(\n  Accordion.ItemIndicator,\n  'itemIndicator',\n)\n\nexport const Item = withContext<Accordion.ItemProps>(Accordion.Item, 'item')\n\nexport const ItemTrigger = withContext<Accordion.ItemTriggerProps>(\n  Accordion.ItemTrigger,\n  'itemTrigger',\n)\n\nexport {\n  AccordionContext as Context,\n  AccordionItemContext as ItemContext,\n  type AccordionContextProps as ContextProps,\n  type AccordionItemContextProps as ItemContextProps,\n} from '@ark-ui/solid'\n\nexport type {\n  AccordionFocusChangeDetails as FocusChangeDetails,\n  AccordionValueChangeDetails as ValueChangeDetails,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
