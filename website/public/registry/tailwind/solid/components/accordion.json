{
  "files": [
    {
      "filename": "accordion.tsx",
      "content": "import { Accordion } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'accordion',\n  defaultVariants: { size: 'md' },\n  slots: {\n    root: 'accordion__root',\n    item: 'accordion__item',\n    itemTrigger: 'accordion__itemTrigger',\n    itemContent: 'accordion__itemContent',\n    itemIndicator: 'accordion__itemIndicator',\n  },\n  variants: {\n    size: {\n      md: {\n        root: 'accordion__root--size_md',\n        item: 'accordion__item--size_md',\n        itemTrigger: 'accordion__itemTrigger--size_md',\n        itemContent: 'accordion__itemContent--size_md',\n        itemIndicator: 'accordion__itemIndicator--size_md',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nexport const Root = withProvider(Accordion.Root, 'root')\nexport const Item = withContext(Accordion.Item, 'item')\nexport const ItemContent = withContext(Accordion.ItemContent, 'itemContent')\nexport const ItemIndicator = withContext(Accordion.ItemIndicator, 'itemIndicator')\nexport const ItemTrigger = withContext(Accordion.ItemTrigger, 'itemTrigger')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport interface ItemProps extends ComponentProps<typeof Item> {}\nexport interface ItemContentProps extends ComponentProps<typeof ItemContent> {}\nexport interface ItemIndicatorProps extends ComponentProps<typeof ItemIndicator> {}\nexport interface ItemTriggerProps extends ComponentProps<typeof ItemTrigger> {}\n",
      "hasMultipleParts": true
    }
  ]
}
