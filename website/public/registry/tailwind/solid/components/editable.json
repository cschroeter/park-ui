{
  "files": [
    {
      "filename": "editable.tsx",
      "content": "import { Editable } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst editable = tv(\n  {\n    base: 'editable',\n    slots: {\n      root: 'editable__root',\n      area: 'editable__area',\n      label: 'editable__label',\n      preview: 'editable__preview',\n      input: 'editable__input',\n      editTrigger: 'editable__editTrigger',\n      submitTrigger: 'editable__submitTrigger',\n      cancelTrigger: 'editable__cancelTrigger',\n      control: 'editable__control',\n    },\n    variants: {},\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(editable)\n\nexport interface RootProps extends Editable.RootProps, VariantProps<typeof editable> {}\nexport const Root = withProvider<RootProps>(Editable.Root, 'root')\n\nexport const Area = withContext<Editable.AreaProps>(Editable.Area, 'area')\n\nexport const CancelTrigger = withContext<Editable.CancelTriggerProps>(\n  Editable.CancelTrigger,\n  'cancelTrigger',\n)\n\nexport const Control = withContext<Editable.ControlProps>(Editable.Control, 'control')\n\nexport const EditTrigger = withContext<Editable.EditTriggerProps>(\n  Editable.EditTrigger,\n  'editTrigger',\n)\n\nexport const Input = withContext<Editable.InputProps>(Editable.Input, 'input')\n\nexport const Label = withContext<Editable.LabelProps>(Editable.Label, 'label')\n\nexport const Preview = withContext<Editable.PreviewProps>(Editable.Preview, 'preview')\n\nexport const SubmitTrigger = withContext<Editable.SubmitTriggerProps>(\n  Editable.SubmitTrigger,\n  'submitTrigger',\n)\n\nexport {\n  EditableContext as Context,\n  type EditableContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
