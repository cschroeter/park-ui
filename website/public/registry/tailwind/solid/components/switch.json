{
  "files": [
    {
      "filename": "switch.tsx",
      "content": "import { Switch as ArkSwitch, type SwitchRootProps } from '@ark-ui/solid'\nimport { Show, children, splitProps } from 'solid-js'\nimport { type VariantProps, tv } from 'tailwind-variants'\n\nexport interface SwitchProps extends SwitchRootProps, SwitchVariantProps {}\n\nexport const Switch = (props: SwitchProps) => {\n  const [variantProps, switchProps] = splitProps(props, ['size', 'class'])\n  const [localProps, rootProps] = splitProps(switchProps, ['children'])\n  const getChildren = children(() => localProps.children)\n  const { root, control, label, thumb } = styles(variantProps)\n\n  return (\n    <ArkSwitch.Root class={root()} {...rootProps}>\n      <ArkSwitch.Control class={control()}>\n        <ArkSwitch.Thumb class={thumb()} />\n      </ArkSwitch.Control>\n      <Show when={getChildren()}>\n        <ArkSwitch.Label class={label()}>{getChildren()}</ArkSwitch.Label>\n      </Show>\n    </ArkSwitch.Root>\n  )\n}\n\ntype SwitchVariantProps = VariantProps<typeof styles>\n\nconst styles = tv(\n  {\n    base: 'switchRecipe',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'switchRecipe__root',\n      label: 'switchRecipe__label',\n      control: 'switchRecipe__control',\n      thumb: 'switchRecipe__thumb',\n    },\n    variants: {\n      size: {\n        sm: {\n          root: 'switchRecipe__root--size_sm',\n          label: 'switchRecipe__label--size_sm',\n          control: 'switchRecipe__control--size_sm',\n          thumb: 'switchRecipe__thumb--size_sm',\n        },\n        md: {\n          root: 'switchRecipe__root--size_md',\n          label: 'switchRecipe__label--size_md',\n          control: 'switchRecipe__control--size_md',\n          thumb: 'switchRecipe__thumb--size_md',\n        },\n        lg: {\n          root: 'switchRecipe__root--size_lg',\n          label: 'switchRecipe__label--size_lg',\n          control: 'switchRecipe__control--size_lg',\n          thumb: 'switchRecipe__thumb--size_lg',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\n",
      "hasMultipleParts": false
    }
  ]
}
