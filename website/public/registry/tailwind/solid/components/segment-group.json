{
  "files": [
    {
      "filename": "segment-group.tsx",
      "content": "import { SegmentGroup } from '@ark-ui/solid'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'segmentGroup',\n  defaultVariants: { size: 'md' },\n  slots: {\n    root: 'segmentGroup__root',\n    label: 'segmentGroup__label',\n    item: 'segmentGroup__item',\n    itemText: 'segmentGroup__itemText',\n    itemControl: 'segmentGroup__itemControl',\n    indicator: 'segmentGroup__indicator',\n  },\n  variants: {\n    size: {\n      sm: {\n        root: 'segmentGroup__root--size_sm',\n        label: 'segmentGroup__label--size_sm',\n        item: 'segmentGroup__item--size_sm',\n        itemText: 'segmentGroup__itemText--size_sm',\n        itemControl: 'segmentGroup__itemControl--size_sm',\n        indicator: 'segmentGroup__indicator--size_sm',\n      },\n      md: {\n        root: 'segmentGroup__root--size_md',\n        label: 'segmentGroup__label--size_md',\n        item: 'segmentGroup__item--size_md',\n        itemText: 'segmentGroup__itemText--size_md',\n        itemControl: 'segmentGroup__itemControl--size_md',\n        indicator: 'segmentGroup__indicator--size_md',\n      },\n    },\n  },\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst Root = withProvider(SegmentGroup.Root, 'root')\nconst Indicator = withContext(SegmentGroup.Indicator, 'indicator')\nconst Item = withContext(SegmentGroup.Item, 'item')\nconst ItemControl = withContext(SegmentGroup.ItemControl, 'itemControl')\nconst ItemText = withContext(SegmentGroup.ItemText, 'itemText')\nconst Label = withContext(SegmentGroup.Label, 'label')\n\nexport { Indicator, Item, ItemControl, ItemText, Label, Root }\n",
      "hasMultipleParts": true
    }
  ]
}
