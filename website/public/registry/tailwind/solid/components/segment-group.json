{
  "files": [
    {
      "filename": "segment-group.tsx",
      "content": "import { SegmentGroup } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst segmentGroup = tv(\n  {\n    base: 'segmentGroup',\n    defaultVariants: { size: 'md' },\n    slots: {\n      root: 'segmentGroup__root',\n      label: 'segmentGroup__label',\n      item: 'segmentGroup__item',\n      itemText: 'segmentGroup__itemText',\n      itemControl: 'segmentGroup__itemControl',\n      indicator: 'segmentGroup__indicator',\n    },\n    variants: {\n      size: {\n        sm: {\n          root: 'segmentGroup__root--size_sm',\n          label: 'segmentGroup__label--size_sm',\n          item: 'segmentGroup__item--size_sm',\n          itemText: 'segmentGroup__itemText--size_sm',\n          itemControl: 'segmentGroup__itemControl--size_sm',\n          indicator: 'segmentGroup__indicator--size_sm',\n        },\n        md: {\n          root: 'segmentGroup__root--size_md',\n          label: 'segmentGroup__label--size_md',\n          item: 'segmentGroup__item--size_md',\n          itemText: 'segmentGroup__itemText--size_md',\n          itemControl: 'segmentGroup__itemControl--size_md',\n          indicator: 'segmentGroup__indicator--size_md',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withProvider, withContext } = createStyleContext(segmentGroup)\n\nexport interface RootProps extends SegmentGroup.RootProps, VariantProps<typeof segmentGroup> {}\nexport const Root = withProvider<RootProps>(SegmentGroup.Root, 'root')\n\nexport const Indicator = withContext<SegmentGroup.IndicatorProps>(\n  SegmentGroup.Indicator,\n  'indicator',\n)\n\nexport const ItemControl = withContext<SegmentGroup.ItemControlProps>(\n  SegmentGroup.ItemControl,\n  'itemControl',\n)\n\nexport const Item = withContext<SegmentGroup.ItemProps>(SegmentGroup.Item, 'item')\n\nexport const ItemText = withContext<SegmentGroup.ItemTextProps>(SegmentGroup.ItemText, 'itemText')\n\nexport const Label = withContext<SegmentGroup.LabelProps>(SegmentGroup.Label, 'label')\n\nexport {\n  SegmentGroupContext as Context,\n  type SegmentGroupContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
