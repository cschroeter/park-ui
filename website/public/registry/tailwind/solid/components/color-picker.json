{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst colorPicker = tv(\n  {\n    base: 'colorPicker',\n    slots: {\n      root: 'colorPicker__root',\n      label: 'colorPicker__label',\n      control: 'colorPicker__control',\n      trigger: 'colorPicker__trigger',\n      positioner: 'colorPicker__positioner',\n      content: 'colorPicker__content',\n      area: 'colorPicker__area',\n      areaThumb: 'colorPicker__areaThumb',\n      areaBackground: 'colorPicker__areaBackground',\n      channelSlider: 'colorPicker__channelSlider',\n      channelSliderTrack: 'colorPicker__channelSliderTrack',\n      channelSliderThumb: 'colorPicker__channelSliderThumb',\n      channelInput: 'colorPicker__channelInput',\n      transparencyGrid: 'colorPicker__transparencyGrid',\n      swatchGroup: 'colorPicker__swatchGroup',\n      swatchTrigger: 'colorPicker__swatchTrigger',\n      swatchIndicator: 'colorPicker__swatchIndicator',\n      swatch: 'colorPicker__swatch',\n      eyeDropperTrigger: 'colorPicker__eyeDropperTrigger',\n      formatTrigger: 'colorPicker__formatTrigger',\n      formatSelect: 'colorPicker__formatSelect',\n      valueText: 'colorPicker__valueText',\n      view: 'colorPicker__view',\n    },\n    variants: {},\n  },\n  { twMerge: false },\n)\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport interface RootProps extends ColorPicker.RootProps, VariantProps<typeof colorPicker> {}\nexport const Root = withProvider<RootProps>(ColorPicker.Root, 'root')\n\nexport const AreaBackground = withContext<ColorPicker.AreaBackgroundProps>(\n  ColorPicker.AreaBackground,\n  'areaBackground',\n)\n\nexport const Area = withContext<ColorPicker.AreaProps>(ColorPicker.Area, 'area')\n\nexport const AreaThumb = withContext<ColorPicker.AreaThumbProps>(ColorPicker.AreaThumb, 'areaThumb')\n\nexport const ChannelInput = withContext<ColorPicker.ChannelInputProps>(\n  ColorPicker.ChannelInput,\n  'channelInput',\n)\n\nexport const ChannelSlider = withContext<ColorPicker.ChannelSliderProps>(\n  ColorPicker.ChannelSlider,\n  'channelSlider',\n)\n\nexport const ChannelSliderThumb = withContext<ColorPicker.ChannelSliderThumbProps>(\n  ColorPicker.ChannelSliderThumb,\n  'channelSliderThumb',\n)\n\nexport const ChannelSliderTrack = withContext<ColorPicker.ChannelSliderTrackProps>(\n  ColorPicker.ChannelSliderTrack,\n  'channelSliderTrack',\n)\n\nexport const Content = withContext<ColorPicker.ContentProps>(ColorPicker.Content, 'content')\n\nexport const Control = withContext<ColorPicker.ControlProps>(ColorPicker.Control, 'control')\n\nexport const EyeDropperTrigger = withContext<ColorPicker.EyeDropperTriggerProps>(\n  ColorPicker.EyeDropperTrigger,\n  'eyeDropperTrigger',\n)\n\nexport const FormatSelect = withContext<ColorPicker.FormatSelectProps>(\n  ColorPicker.FormatSelect,\n  'formatSelect',\n)\n\nexport const FormatTrigger = withContext<ColorPicker.FormatTriggerProps>(\n  ColorPicker.FormatTrigger,\n  'formatTrigger',\n)\n\nexport const Label = withContext<ColorPicker.LabelProps>(ColorPicker.Label, 'label')\n\nexport const Positioner = withContext<ColorPicker.PositionerProps>(\n  ColorPicker.Positioner,\n  'positioner',\n)\n\nexport const SwatchGroup = withContext<ColorPicker.SwatchGroupProps>(\n  ColorPicker.SwatchGroup,\n  'swatchGroup',\n)\n\nexport const SwatchIndicator = withContext<ColorPicker.SwatchIndicatorProps>(\n  ColorPicker.SwatchIndicator,\n  'swatchIndicator',\n)\n\nexport const Swatch = withContext<ColorPicker.SwatchProps>(ColorPicker.Swatch, 'swatch')\n\nexport const SwatchTrigger = withContext<ColorPicker.SwatchTriggerProps>(\n  ColorPicker.SwatchTrigger,\n  'swatchTrigger',\n)\n\nexport const TransparencyGrid = withContext<ColorPicker.TransparencyGridProps>(\n  ColorPicker.TransparencyGrid,\n  'transparencyGrid',\n)\n\nexport const Trigger = withContext<ColorPicker.TriggerProps>(ColorPicker.Trigger, 'trigger')\n\nexport const ValueText = withContext<ColorPicker.ValueTextProps>(ColorPicker.ValueText, 'valueText')\n\nexport const View = withContext<ColorPicker.ViewProps>(ColorPicker.View, 'view')\n\nexport {\n  ColorPickerContext as Context,\n  ColorPickerHiddenInput as HiddenInput,\n  type ColorPickerContextProps as ContextProps,\n  type ColorPickerHiddenInputProps as HiddenInputProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
