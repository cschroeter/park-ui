{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker as ArkColorPicker } from '@ark-ui/solid'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'colorPicker',\n  slots: {\n    root: 'colorPicker__root',\n    label: 'colorPicker__label',\n    control: 'colorPicker__control',\n    trigger: 'colorPicker__trigger',\n    positioner: 'colorPicker__positioner',\n    content: 'colorPicker__content',\n    area: 'colorPicker__area',\n    areaThumb: 'colorPicker__areaThumb',\n    areaBackground: 'colorPicker__areaBackground',\n    channelSlider: 'colorPicker__channelSlider',\n    channelSliderTrack: 'colorPicker__channelSliderTrack',\n    channelSliderThumb: 'colorPicker__channelSliderThumb',\n    channelInput: 'colorPicker__channelInput',\n    transparencyGrid: 'colorPicker__transparencyGrid',\n    swatchGroup: 'colorPicker__swatchGroup',\n    swatchTrigger: 'colorPicker__swatchTrigger',\n    swatchIndicator: 'colorPicker__swatchIndicator',\n    swatch: 'colorPicker__swatch',\n    eyeDropperTrigger: 'colorPicker__eyeDropperTrigger',\n    formatTrigger: 'colorPicker__formatTrigger',\n    formatSelect: 'colorPicker__formatSelect',\n    valueText: 'colorPicker__valueText',\n    view: 'colorPicker__view',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst ColorPicker = withProvider(ArkColorPicker.Root, 'root')\nconst ColorPickerArea = withContext(ArkColorPicker.Area, 'area')\nconst ColorPickerAreaBackground = withContext(ArkColorPicker.AreaBackground, 'areaBackground')\nconst ColorPickerAreaThumb = withContext(ArkColorPicker.AreaThumb, 'areaThumb')\nconst ColorPickerChannelInput = withContext(ArkColorPicker.ChannelInput, 'channelInput')\nconst ColorPickerChannelSlider = withContext(ArkColorPicker.ChannelSlider, 'channelSlider')\nconst ColorPickerChannelSliderThumb = withContext(\n  ArkColorPicker.ChannelSliderThumb,\n  'channelSliderThumb',\n)\nconst ColorPickerChannelSliderTrack = withContext(\n  ArkColorPicker.ChannelSliderTrack,\n  'channelSliderTrack',\n)\nconst ColorPickerContent = withContext(ArkColorPicker.Content, 'content')\nconst ColorPickerControl = withContext(ArkColorPicker.Control, 'control')\nconst ColorPickerEyeDropperTrigger = withContext(\n  ArkColorPicker.EyeDropperTrigger,\n  'eyeDropperTrigger',\n)\nconst ColorPickerFormatSelect = withContext(ArkColorPicker.FormatSelect, 'formatSelect')\nconst ColorPickerFormatTrigger = withContext(ArkColorPicker.FormatTrigger, 'formatTrigger')\nconst ColorPickerLabel = withContext(ArkColorPicker.Label, 'label')\nconst ColorPickerPositioner = withContext(ArkColorPicker.Positioner, 'positioner')\nconst ColorPickerSwatch = withContext(ArkColorPicker.Swatch, 'swatch')\nconst ColorPickerSwatchGroup = withContext(ArkColorPicker.SwatchGroup, 'swatchGroup')\nconst ColorPickerSwatchIndicator = withContext(ArkColorPicker.SwatchIndicator, 'swatchIndicator')\nconst ColorPickerSwatchTrigger = withContext(ArkColorPicker.SwatchTrigger, 'swatchTrigger')\nconst ColorPickerTransparencyGrid = withContext(ArkColorPicker.TransparencyGrid, 'transparencyGrid')\nconst ColorPickerTrigger = withContext(ArkColorPicker.Trigger, 'trigger')\nconst ColorPickerValueText = withContext(ArkColorPicker.ValueText, 'valueText')\nconst ColorPickerView = withContext(ArkColorPicker.View, 'view')\n\nconst Root = ColorPicker\nconst Area = ColorPickerArea\nconst AreaBackground = ColorPickerAreaBackground\nconst AreaThumb = ColorPickerAreaThumb\nconst ChannelInput = ColorPickerChannelInput\nconst ChannelSlider = ColorPickerChannelSlider\nconst ChannelSliderThumb = ColorPickerChannelSliderThumb\nconst ChannelSliderTrack = ColorPickerChannelSliderTrack\nconst Content = ColorPickerContent\nconst Control = ColorPickerControl\nconst EyeDropperTrigger = ColorPickerEyeDropperTrigger\nconst FormatSelect = ColorPickerFormatSelect\nconst FormatTrigger = ColorPickerFormatTrigger\nconst Label = ColorPickerLabel\nconst Positioner = ColorPickerPositioner\nconst Swatch = ColorPickerSwatch\nconst SwatchGroup = ColorPickerSwatchGroup\nconst SwatchIndicator = ColorPickerSwatchIndicator\nconst SwatchTrigger = ColorPickerSwatchTrigger\nconst TransparencyGrid = ColorPickerTransparencyGrid\nconst Trigger = ColorPickerTrigger\nconst ValueText = ColorPickerValueText\nconst View = ColorPickerView\n\nexport {\n  Area,\n  AreaBackground,\n  AreaThumb,\n  ChannelInput,\n  ChannelSlider,\n  ChannelSliderThumb,\n  ChannelSliderTrack,\n  ColorPicker,\n  ColorPickerArea,\n  ColorPickerAreaBackground,\n  ColorPickerAreaThumb,\n  ColorPickerChannelInput,\n  ColorPickerChannelSlider,\n  ColorPickerChannelSliderThumb,\n  ColorPickerChannelSliderTrack,\n  ColorPickerContent,\n  ColorPickerControl,\n  ColorPickerEyeDropperTrigger,\n  ColorPickerFormatSelect,\n  ColorPickerFormatTrigger,\n  ColorPickerLabel,\n  ColorPickerPositioner,\n  ColorPickerSwatch,\n  ColorPickerSwatchGroup,\n  ColorPickerSwatchIndicator,\n  ColorPickerSwatchTrigger,\n  ColorPickerTransparencyGrid,\n  ColorPickerTrigger,\n  ColorPickerValueText,\n  ColorPickerView,\n  Content,\n  Control,\n  EyeDropperTrigger,\n  FormatSelect,\n  FormatTrigger,\n  Label,\n  Positioner,\n  Root,\n  Swatch,\n  SwatchGroup,\n  SwatchIndicator,\n  SwatchTrigger,\n  TransparencyGrid,\n  Trigger,\n  ValueText,\n  View,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
