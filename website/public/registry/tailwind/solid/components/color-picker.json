{
  "files": [
    {
      "filename": "color-picker.tsx",
      "content": "import { ColorPicker } from '@ark-ui/solid'\nimport { tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst styles = tv({\n  base: 'colorPicker',\n  slots: {\n    root: 'colorPicker__root',\n    label: 'colorPicker__label',\n    control: 'colorPicker__control',\n    trigger: 'colorPicker__trigger',\n    positioner: 'colorPicker__positioner',\n    content: 'colorPicker__content',\n    area: 'colorPicker__area',\n    areaThumb: 'colorPicker__areaThumb',\n    areaBackground: 'colorPicker__areaBackground',\n    channelSlider: 'colorPicker__channelSlider',\n    channelSliderTrack: 'colorPicker__channelSliderTrack',\n    channelSliderThumb: 'colorPicker__channelSliderThumb',\n    channelInput: 'colorPicker__channelInput',\n    transparencyGrid: 'colorPicker__transparencyGrid',\n    swatchGroup: 'colorPicker__swatchGroup',\n    swatchTrigger: 'colorPicker__swatchTrigger',\n    swatchIndicator: 'colorPicker__swatchIndicator',\n    swatch: 'colorPicker__swatch',\n    eyeDropperTrigger: 'colorPicker__eyeDropperTrigger',\n    formatTrigger: 'colorPicker__formatTrigger',\n    formatSelect: 'colorPicker__formatSelect',\n    valueText: 'colorPicker__valueText',\n    view: 'colorPicker__view',\n  },\n  variants: {},\n})\nconst { withProvider, withContext } = createStyleContext(styles)\n\nconst Root = withProvider(ColorPicker.Root, 'root')\nconst Area = withContext(ColorPicker.Area, 'area')\nconst AreaBackground = withContext(ColorPicker.AreaBackground, 'areaBackground')\nconst AreaThumb = withContext(ColorPicker.AreaThumb, 'areaThumb')\nconst ChannelInput = withContext(ColorPicker.ChannelInput, 'channelInput')\nconst ChannelSlider = withContext(ColorPicker.ChannelSlider, 'channelSlider')\nconst ChannelSliderThumb = withContext(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\nconst ChannelSliderTrack = withContext(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\nconst Content = withContext(ColorPicker.Content, 'content')\nconst Control = withContext(ColorPicker.Control, 'control')\nconst EyeDropperTrigger = withContext(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\nconst FormatSelect = withContext(ColorPicker.FormatSelect, 'formatSelect')\nconst FormatTrigger = withContext(ColorPicker.FormatTrigger, 'formatTrigger')\nconst Label = withContext(ColorPicker.Label, 'label')\nconst Positioner = withContext(ColorPicker.Positioner, 'positioner')\nconst Swatch = withContext(ColorPicker.Swatch, 'swatch')\nconst SwatchGroup = withContext(ColorPicker.SwatchGroup, 'swatchGroup')\nconst SwatchIndicator = withContext(ColorPicker.SwatchIndicator, 'swatchIndicator')\nconst SwatchTrigger = withContext(ColorPicker.SwatchTrigger, 'swatchTrigger')\nconst TransparencyGrid = withContext(ColorPicker.TransparencyGrid, 'transparencyGrid')\nconst Trigger = withContext(ColorPicker.Trigger, 'trigger')\nconst ValueText = withContext(ColorPicker.ValueText, 'valueText')\nconst View = withContext(ColorPicker.View, 'view')\n\nexport {\n  Area,\n  AreaBackground,\n  AreaThumb,\n  ChannelInput,\n  ChannelSlider,\n  ChannelSliderThumb,\n  ChannelSliderTrack,\n  Content,\n  Control,\n  EyeDropperTrigger,\n  FormatSelect,\n  FormatTrigger,\n  Label,\n  Positioner,\n  Root,\n  Swatch,\n  SwatchGroup,\n  SwatchIndicator,\n  SwatchTrigger,\n  TransparencyGrid,\n  Trigger,\n  ValueText,\n  View,\n}\n",
      "hasMultipleParts": true
    }
  ]
}
