{
  "files": [
    {
      "filename": "drawer.tsx",
      "content": "import { Dialog as Drawer, type HTMLArkProps, ark } from '@ark-ui/solid'\nimport { type VariantProps, tv } from 'tailwind-variants'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst drawer = tv(\n  {\n    base: 'drawer',\n    defaultVariants: { variant: 'right' },\n    slots: {\n      trigger: 'drawer__trigger',\n      backdrop: 'drawer__backdrop',\n      positioner: 'drawer__positioner',\n      content: 'drawer__content',\n      title: 'drawer__title',\n      description: 'drawer__description',\n      closeTrigger: 'drawer__closeTrigger',\n      header: 'drawer__header',\n      body: 'drawer__body',\n      footer: 'drawer__footer',\n    },\n    variants: {\n      variant: {\n        left: {\n          trigger: 'drawer__trigger--variant_left',\n          backdrop: 'drawer__backdrop--variant_left',\n          positioner: 'drawer__positioner--variant_left',\n          content: 'drawer__content--variant_left',\n          title: 'drawer__title--variant_left',\n          description: 'drawer__description--variant_left',\n          closeTrigger: 'drawer__closeTrigger--variant_left',\n          header: 'drawer__header--variant_left',\n          body: 'drawer__body--variant_left',\n          footer: 'drawer__footer--variant_left',\n        },\n        right: {\n          trigger: 'drawer__trigger--variant_right',\n          backdrop: 'drawer__backdrop--variant_right',\n          positioner: 'drawer__positioner--variant_right',\n          content: 'drawer__content--variant_right',\n          title: 'drawer__title--variant_right',\n          description: 'drawer__description--variant_right',\n          closeTrigger: 'drawer__closeTrigger--variant_right',\n          header: 'drawer__header--variant_right',\n          body: 'drawer__body--variant_right',\n          footer: 'drawer__footer--variant_right',\n        },\n      },\n    },\n  },\n  { twMerge: false },\n)\nconst { withRootProvider, withContext } = createStyleContext(drawer)\n\nexport interface RootProps extends Drawer.RootProps, VariantProps<typeof drawer> {}\nexport const Root = withRootProvider<RootProps>(Drawer.Root)\n\nexport const Backdrop = withContext<Drawer.BackdropProps>(Drawer.Backdrop, 'backdrop')\n\nexport const Body = withContext<HTMLArkProps<'div'>>(ark.div, 'body')\n\nexport const CloseTrigger = withContext<Drawer.CloseTriggerProps>(\n  Drawer.CloseTrigger,\n  'closeTrigger',\n)\n\nexport const Content = withContext<Drawer.ContentProps>(Drawer.Content, 'content')\n\nexport const Description = withContext<Drawer.DescriptionProps>(Drawer.Description, 'description')\n\nexport const Footer = withContext<HTMLArkProps<'div'>>(ark.div, 'footer')\n\nexport const Header = withContext<HTMLArkProps<'div'>>(ark.div, 'header')\n\nexport const Positioner = withContext<Drawer.PositionerProps>(Drawer.Positioner, 'positioner')\n\nexport const Title = withContext<Drawer.TitleProps>(Drawer.Title, 'title')\nexport const Trigger = withContext<Drawer.TriggerProps>(Drawer.Trigger, 'trigger')\n\nexport {\n  DialogContext as Context,\n  type DialogContextProps as ContextProps,\n} from '@ark-ui/solid'\n",
      "hasMultipleParts": true
    }
  ]
}
