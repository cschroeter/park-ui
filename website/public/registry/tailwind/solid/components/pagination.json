{
  "files": [
    {
      "filename": "pagination.tsx",
      "content": "import {\n  Pagination as ArkPagination,\n  type PaginationProps as ArkPaginationProps,\n} from '@ark-ui/solid'\nimport { For, splitProps } from 'solid-js'\nimport { tv, type VariantProps } from 'tailwind-variants'\nimport { Button } from '~/components/ui/button'\nimport { IconButton } from '~/components/ui/icon-button'\n\nexport interface PaginationProps extends ArkPaginationProps, PaginationVariantProps {}\n\nexport const Pagination = (props: PaginationProps) => {\n  const [variantProps, rootProps] = splitProps(props, ['class'])\n  // @ts-expect-error https://github.com/nextui-org/tailwind-variants/issues/145\n  const { root, ellipsis, item, prevTrigger, nextTrigger } = styles(variantProps)\n\n  return (\n    <ArkPagination.Root class={root()} {...rootProps}>\n      {(api) => (\n        <>\n          <ArkPagination.PrevTrigger class={prevTrigger()}>\n            <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n              <ChevronLeftIcon />\n            </IconButton>\n          </ArkPagination.PrevTrigger>\n          <For each={api().pages}>\n            {(page, index) =>\n              page.type === 'page' ? (\n                <ArkPagination.Item {...page} asChild class={item()}>\n                  <Button variant=\"outline\">{page.value}</Button>\n                </ArkPagination.Item>\n              ) : (\n                <ArkPagination.Ellipsis index={index()} class={ellipsis()}>\n                  &#8230;\n                </ArkPagination.Ellipsis>\n              )\n            }\n          </For>\n          <ArkPagination.NextTrigger class={nextTrigger()}>\n            <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n              <ChevronRightIcon />\n            </IconButton>\n          </ArkPagination.NextTrigger>\n        </>\n      )}\n    </ArkPagination.Root>\n  )\n}\n\ntype PaginationVariantProps = VariantProps<typeof styles>\n\nconst styles = tv({\n  base: 'pagination',\n  slots: {\n    root: 'pagination__root',\n    item: 'pagination__item',\n    ellipsis: 'pagination__ellipsis',\n    prevTrigger: 'pagination__prevTrigger',\n    nextTrigger: 'pagination__nextTrigger',\n  },\n  variants: {},\n})\n\nconst ChevronLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m15 18l-6-6l6-6\"\n    />\n  </svg>\n)\n\nconst ChevronRightIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m9 18l6-6l-6-6\"\n    />\n  </svg>\n)\n",
      "hasMultipleParts": false
    }
  ]
}
