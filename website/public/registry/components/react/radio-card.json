{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "radio-card",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "radio-card.tsx",
      "content": "'use client'\nimport { RadioGroup } from '@ark-ui/react/radio-group'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { radioCard } from 'styled-system/recipes'\n\nconst { withProvider, withContext } = createStyleContext(radioCard)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider(RadioGroup.Root, 'root')\nexport const RootProvider = withProvider(RadioGroup.RootProvider, 'root')\nexport const Indicator = withContext(RadioGroup.Indicator, 'indicator')\nexport const Item = withContext(RadioGroup.Item, 'item')\nexport const ItemControl = withContext(RadioGroup.ItemControl, 'itemControl')\nexport const ItemText = withContext(RadioGroup.ItemText, 'itemText')\nexport const Label = withContext(RadioGroup.Label, 'label')\nexport const ItemHiddenInput = RadioGroup.ItemHiddenInput\n\nexport { RadioGroupContext as Context } from '@ark-ui/react/radio-group'\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "RadioCard",
            "moduleSpecifier": "./radio-card"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "radio-card.ts",
      "content": "import { radioGroupAnatomy } from '@ark-ui/react/radio-group'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const radioCard = defineSlotRecipe({\n  className: 'radio-card',\n  slots: radioGroupAnatomy.keys(),\n  base: {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1.5',\n      isolation: 'isolate',\n    },\n    item: {\n      borderRadius: 'l2',\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'column',\n      position: 'relative',\n      userSelect: 'none',\n\n      // TODO rm\n      p: '4',\n      _checked: {\n        zIndex: '1',\n      },\n    },\n    // label: {\n    //   display: 'inline-flex',\n    //   fontWeight: 'medium',\n    //   textStyle: 'sm',\n    //   _disabled: {\n    //     opacity: '0.5',\n    //   },\n    // },\n    // itemText: {\n    //   fontWeight: 'medium',\n    //   flex: '1',\n    // },\n    // itemDescription: {\n    //   opacity: '0.64',\n    //   textStyle: 'sm',\n    // },\n    // itemControl: {\n    //   display: 'inline-flex',\n    //   flex: '1',\n    //   pos: 'relative',\n    //   rounded: 'inherit',\n    //   justifyContent: 'var(--radio-card-justify)',\n    //   alignItems: 'var(--radio-card-align)',\n    //   _disabled: {\n    //     bg: 'bg.muted',\n    //   },\n    // },\n    // itemIndicator: radiomarkRecipe.base,\n    // itemAddon: {\n    //   roundedBottom: 'inherit',\n    //   _disabled: {\n    //     color: 'fg.muted',\n    //   },\n    // },\n    // itemContent: {\n    //   display: 'flex',\n    //   flexDirection: 'column',\n    //   flex: '1',\n    //   gap: '1',\n    //   justifyContent: 'var(--radio-card-justify)',\n    //   alignItems: 'var(--radio-card-align)',\n    // },\n  },\n\n  variants: {\n    // size: {\n    //   sm: {\n    //     item: {\n    //       textStyle: 'sm',\n    //     },\n    //     itemControl: {\n    //       padding: '3',\n    //       gap: '1.5',\n    //     },\n    //     itemAddon: {\n    //       px: '3',\n    //       py: '1.5',\n    //       borderTopWidth: '1px',\n    //     },\n    //     itemIndicator: radiomarkRecipe.variants?.size.sm,\n    //   },\n    //   md: {\n    //     item: {\n    //       textStyle: 'sm',\n    //     },\n    //     itemControl: {\n    //       padding: '4',\n    //       gap: '2.5',\n    //     },\n    //     itemAddon: {\n    //       px: '4',\n    //       py: '2',\n    //       borderTopWidth: '1px',\n    //     },\n    //     itemIndicator: radiomarkRecipe.variants?.size.md,\n    //   },\n    //   lg: {\n    //     item: {\n    //       textStyle: 'md',\n    //     },\n    //     itemControl: {\n    //       padding: '4',\n    //       gap: '3.5',\n    //     },\n    //     itemAddon: {\n    //       px: '4',\n    //       py: '2',\n    //       borderTopWidth: '1px',\n    //     },\n    //     itemIndicator: radiomarkRecipe.variants?.size.lg,\n    //   },\n    // },\n    variant: {\n      subtle: {\n        item: {\n          bg: 'gray.subtle.bg',\n          color: 'gray.subtle.fg',\n          _checked: {\n            bg: 'colorPalette.subtle.bg',\n            color: 'colorPalette.subtle.fg',\n          },\n        },\n        itemControl: {},\n        // itemIndicator: radiomarkRecipe.variants?.variant.outline,\n      },\n      outline: {\n        item: {\n          borderWidth: '1px',\n          _checked: {\n            boxShadow: '0 0 0 1px var(--shadow-color)',\n            boxShadowColor: 'colorPalette.solid.bg',\n            borderColor: 'colorPalette.solid.bg',\n          },\n        },\n        // itemIndicator: radiomarkRecipe.variants?.variant.solid,\n      },\n      surface: {\n        item: {\n          borderWidth: '1px',\n          bg: 'gray.surface.bg',\n          borderColor: 'gray.surface.border',\n          color: 'gray.surface.fg',\n          _checked: {\n            bg: 'colorPalette.surface.bg',\n            borderColor: 'colorPalette.surface.border',\n            color: 'colorPalette.surface.fg',\n          },\n        },\n        //     itemIndicator: radiomarkRecipe.variants?.variant.solid,\n      },\n      solid: {\n        item: {\n          borderWidth: '1px',\n          _checked: {\n            bg: 'colorPalette.solid.bg',\n            color: 'colorPalette.solid.fg',\n            borderColor: 'colorPalette.solid.bg',\n          },\n        },\n        // itemIndicator: radiomarkRecipe.variants?.variant.inverted,\n      },\n    },\n    // justify: {\n    //   start: {\n    //     item: { '--radio-card-justify': 'flex-start' },\n    //   },\n    //   end: {\n    //     item: { '--radio-card-justify': 'flex-end' },\n    //   },\n    //   center: {\n    //     item: { '--radio-card-justify': 'center' },\n    //   },\n    // },\n    // align: {\n    //   start: {\n    //     item: { '--radio-card-align': 'flex-start' },\n    //     itemControl: { textAlign: 'start' },\n    //   },\n    //   end: {\n    //     item: { '--radio-card-align': 'flex-end' },\n    //     itemControl: { textAlign: 'end' },\n    //   },\n    //   center: {\n    //     item: { '--radio-card-align': 'center' },\n    //     itemControl: { textAlign: 'center' },\n    //   },\n    // },\n    orientation: {\n      vertical: {\n        itemControl: { flexDirection: 'column' },\n      },\n      horizontal: {\n        itemControl: { flexDirection: 'row' },\n      },\n    },\n  },\n\n  defaultVariants: {\n    // size: 'md',\n    variant: 'surface',\n    // align: 'start',\n    orientation: 'horizontal',\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./radio-card",
            "symbols": [
              {
                "name": "radio-card"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "radio-card"
              }
            ]
          }
        ]
      }
    }
  ]
}