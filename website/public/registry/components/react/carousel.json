{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "carousel",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "carousel.tsx",
      "content": "'use client'\nimport { Carousel, useCarouselContext } from '@ark-ui/react/carousel'\nimport { type ComponentProps, forwardRef } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { carousel } from 'styled-system/recipes'\n\nconst { withProvider, withContext } = createStyleContext(carousel)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider(Carousel.Root, 'root', { defaultProps: { spacing: '16px' } })\nexport const RootProvider = withProvider(Carousel.RootProvider, 'root')\nexport const AutoplayTrigger = withContext(Carousel.AutoplayTrigger, 'autoplayTrigger')\nexport const Control = withContext(Carousel.Control, 'control')\nexport const Indicator = withContext(Carousel.Indicator, 'indicator')\nexport const Item = withContext(Carousel.Item, 'item')\nexport const ItemGroup = withContext(Carousel.ItemGroup, 'itemGroup')\nexport const NextTrigger = withContext(Carousel.NextTrigger, 'nextTrigger')\nexport const PrevTrigger = withContext(Carousel.PrevTrigger, 'prevTrigger')\n\nconst StyledIndicatorGroup = withContext(Carousel.IndicatorGroup, 'indicatorGroup')\nexport const IndicatorGroup = forwardRef<\n  HTMLDivElement,\n  ComponentProps<typeof StyledIndicatorGroup>\n>((props, ref) => {\n  const carousel = useCarouselContext()\n\n  return (\n    <StyledIndicatorGroup {...props} ref={ref}>\n      {carousel.pageSnapPoints.map((_, index) => (\n        <Indicator key={index} index={index} />\n      ))}\n    </StyledIndicatorGroup>\n  )\n})\n\nexport { CarouselContext as Context } from '@ark-ui/react/carousel'\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "Carousel",
            "moduleSpecifier": "./carousel"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "carousel.ts",
      "content": "import { carouselAnatomy } from '@ark-ui/react/carousel'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const carousel = defineSlotRecipe({\n  className: 'carousel',\n  slots: carouselAnatomy.keys(),\n  base: {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '2',\n      _vertical: {\n        flexDirection: 'row',\n      },\n    },\n    control: {\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      borderRadius: 'l2',\n      display: 'flex',\n      _vertical: {\n        flexDirection: 'column',\n      },\n    },\n    itemGroup: {\n      flex: '1',\n    },\n    indicatorGroup: {\n      display: 'flex',\n      _vertical: {\n        flexDirection: 'column',\n      },\n    },\n    indicator: {\n      borderRadius: 'full',\n      background: 'gray.subtle.bg',\n      cursor: 'pointer',\n      _current: {\n        background: 'colorPalette.solid.bg',\n      },\n      focusVisibleRing: 'outside',\n      focusRingColor: 'colorPalette.solid.bg',\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n  },\n  variants: {\n    inline: {\n      true: {\n        control: {\n          background: { _light: 'white.a11', _dark: 'black.a11' },\n          bottom: '3',\n          left: '50%',\n          p: '1',\n          position: 'absolute',\n          transform: 'translateX(-50%)',\n        },\n      },\n    },\n    size: {\n      md: {\n        control: {\n          gap: '3',\n        },\n        indicatorGroup: {\n          gap: '3',\n        },\n        indicator: {\n          boxSize: '2.5',\n        },\n      },\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./carousel",
            "symbols": [
              {
                "name": "carousel"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "carousel"
              }
            ]
          }
        ]
      }
    }
  ]
}