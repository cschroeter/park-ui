{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "menu",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "menu.tsx",
      "content": "'use client'\nimport { Menu } from '@ark-ui/react/menu'\nimport { CheckIcon, ChevronDownIcon } from 'lucide-react'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { menu } from 'styled-system/recipes'\n\nconst { withRootProvider, withContext } = createStyleContext(menu)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider(Menu.Root, {\n  defaultProps: { unmountOnExit: true, lazyMount: true },\n})\nexport const RootProvider = withRootProvider(Menu.Root, {\n  defaultProps: { unmountOnExit: true, lazyMount: true },\n})\nexport const Arrow = withContext(Menu.Arrow, 'arrow')\nexport const ArrowTip = withContext(Menu.ArrowTip, 'arrowTip')\nexport const CheckboxItem = withContext(Menu.CheckboxItem, 'item')\nexport const Content = withContext(Menu.Content, 'content')\nexport const ContextTrigger = withContext(Menu.ContextTrigger, 'contextTrigger')\nexport const Indicator = withContext(Menu.Indicator, 'indicator', {\n  defaultProps: { children: <ChevronDownIcon /> },\n})\nexport const Item = withContext(Menu.Item, 'item')\nexport const ItemGroup = withContext(Menu.ItemGroup, 'itemGroup')\nexport const ItemGroupLabel = withContext(Menu.ItemGroupLabel, 'itemGroupLabel')\nexport const ItemIndicator = withContext(Menu.ItemIndicator, 'itemIndicator', {\n  defaultProps: { children: <CheckIcon strokeWidth=\"2.5px\" /> },\n})\nexport const ItemText = withContext(Menu.ItemText, 'itemText')\nexport const Positioner = withContext(Menu.Positioner, 'positioner')\nexport const RadioItem = withContext(Menu.RadioItem, 'item')\nexport const RadioItemGroup = withContext(Menu.RadioItemGroup, 'itemGroup')\nexport const Separator = withContext(Menu.Separator, 'separator')\nexport const Trigger = withContext(Menu.Trigger, 'trigger')\nexport const TriggerItem = withContext(Menu.TriggerItem, 'item')\n\nexport { MenuContext as Context } from '@ark-ui/react/menu'\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "Menu",
            "moduleSpecifier": "./menu"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "menu.ts",
      "content": "import { menuAnatomy } from '@ark-ui/react/menu'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const menu = defineSlotRecipe({\n  className: 'menu',\n  slots: menuAnatomy.keys(),\n  base: {\n    content: {\n      '--menu-z-index': 'zIndex.dropdown',\n\n      bg: 'bg.default',\n      borderRadius: 'l3',\n      boxShadow: 'lg',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'var(--available-height)',\n      outline: '0',\n      overflow: 'hidden',\n      overflowY: 'auto',\n      position: 'relative',\n      zIndex: 'calc(var(--menu-z-index) + var(--layer-index, 0))',\n      _open: {\n        animationStyle: 'slide-fade-in',\n        animationDuration: 'fast',\n      },\n      _closed: {\n        animationStyle: 'slide-fade-out',\n        animationDuration: 'faster',\n      },\n    },\n    item: {\n      alignItems: 'center',\n      borderRadius: 'l2',\n      display: 'flex',\n      flex: '0 0 auto',\n      fontWeight: 'medium',\n      outline: '0',\n      textAlign: 'start',\n      textDecoration: 'none',\n      userSelect: 'none',\n      width: '100%',\n      _icon: {\n        color: 'gray.plain.fg.muted',\n      },\n      _highlighted: {\n        bg: 'gray.subtle.bg',\n      },\n      _disabled: {\n        layerStyle: 'disabled',\n      },\n    },\n    trigger: {\n      focusVisibleRing: 'outside',\n      focusRingColor: 'colorPalette.solid.bg',\n    },\n\n    itemIndicator: {\n      justifyContent: 'flex-end',\n      display: 'flex',\n      flex: '1',\n      _checked: {\n        _icon: {\n          color: 'colorPalette.plain.fg',\n        },\n      },\n    },\n  },\n\n  defaultVariants: {\n    size: 'md',\n  },\n\n  variants: {\n    size: {\n      sm: {\n        content: {\n          minW: '40',\n          padding: '1.5',\n          scrollPadding: '1.5',\n          gap: '0.5',\n        },\n        separator: {\n          my: '0.5',\n          mx: '-1.5',\n        },\n        item: {\n          gap: '2',\n          textStyle: 'sm',\n          py: '2',\n          px: '1.5',\n          _icon: {\n            width: '4',\n            height: '4',\n          },\n        },\n      },\n      md: {\n        content: {\n          minW: '44',\n          padding: '1.5',\n          scrollPadding: '1.5',\n          gap: '0.5',\n        },\n        separator: {\n          my: '0.5',\n          mx: '-1.5',\n        },\n        item: {\n          gap: '3',\n          textStyle: 'sm',\n          py: '2.5',\n          px: '2',\n          _icon: {\n            width: '5',\n            height: '5',\n          },\n        },\n        itemIndicator: {\n          _icon: {\n            width: '4',\n            height: '4',\n          },\n        },\n      },\n      lg: {\n        content: {\n          minW: '48',\n          padding: '1.5',\n          scrollPadding: '1.5',\n          gap: '0.5',\n        },\n        separator: {\n          my: '0.5',\n          mx: '-1.5',\n        },\n        item: {\n          gap: '3',\n          textStyle: 'md',\n          py: '2.5',\n          px: '2.5',\n          _icon: {\n            width: '5',\n            height: '5',\n          },\n        },\n      },\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./menu",
            "symbols": [
              {
                "name": "menu"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "menu"
              }
            ]
          }
        ]
      }
    }
  ]
}