{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "select",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "select.tsx",
      "content": "'use client'\nimport { ark } from '@ark-ui/react/factory'\nimport { Select } from '@ark-ui/react/select'\nimport type { SVGProps } from 'react'\nimport { type ComponentProps, createStyleContext } from 'styled-system/jsx'\nimport { type SelectVariantProps, select } from 'styled-system/recipes'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport type RootProps = ComponentProps<typeof Root>\n\nexport const Root = withProvider(Select.Root, 'root', {\n  defaultProps: { positioning: { sameWidth: true } },\n}) as Select.RootComponent<SelectVariantProps>\n\nexport const RootProvider = withProvider(\n  Select.RootProvider,\n  'root',\n) as Select.RootProviderComponent<SelectVariantProps>\n\nexport const ClearTrigger = withContext(Select.ClearTrigger, 'clearTrigger')\nexport const Content = withContext(Select.Content, 'content')\nexport const Control = withContext(Select.Control, 'control')\nexport const IndicatorGroup = withContext(ark.div, 'indicatorGroup')\nexport const Item = withContext(Select.Item, 'item')\nexport const ItemGroup = withContext(Select.ItemGroup, 'itemGroup')\nexport const ItemGroupLabel = withContext(Select.ItemGroupLabel, 'itemGroupLabel')\nexport const ItemText = withContext(Select.ItemText, 'itemText')\nexport const Label = withContext(Select.Label, 'label')\nexport const List = withContext(Select.List, 'list')\nexport const Positioner = withContext(Select.Positioner, 'positioner')\nexport const Trigger = withContext(Select.Trigger, 'trigger')\nexport const ValueText = withContext(Select.ValueText, 'valueText')\nexport const HiddenSelect = Select.HiddenSelect\n\nexport const Context = Select.Context\nexport const ItemContext = Select.ItemContext\n\nconst CheckIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <title>Checkmark</title>\n    <path d=\"M20 6 9 17l-5-5\" />\n  </svg>\n)\n\nconst ChevronsUpDownIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <title>Chevrons Up Down</title>\n    <path d=\"m7 15 5 5 5-5\" />\n    <path d=\"m7 9 5-5 5 5\" />\n  </svg>\n)\n\nexport const Indicator = withContext(Select.Indicator, 'indicator', {\n  defaultProps: { children: <ChevronsUpDownIcon /> },\n})\n\nexport const ItemIndicator = withContext(Select.ItemIndicator, 'itemIndicator', {\n  defaultProps: { children: <CheckIcon /> },\n})\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "Select",
            "moduleSpecifier": "./select"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "select.ts",
      "content": "import { selectAnatomy } from '@ark-ui/react/select'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const select = defineSlotRecipe({\n  className: 'select',\n  slots: selectAnatomy.extendWith('indicatorGroup').keys(),\n  base: {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1.5',\n      width: 'full',\n    },\n    control: {\n      position: 'relative',\n    },\n    content: {\n      background: 'bg.default',\n      borderRadius: 'l2',\n      boxShadow: 'md',\n      display: 'flex',\n      flexDirection: 'column',\n      maxH: '96',\n      outline: 0,\n      overflowY: 'auto',\n      zIndex: 'dropdown',\n      _open: {\n        animationStyle: 'slide-fade-in',\n        animationDuration: 'slow',\n        animationTimingFunction: 'emphasized-in',\n      },\n      _closed: {\n        animationStyle: 'slide-fade-out',\n        animationTimingFunction: 'emphasized-out',\n        animationDuration: 'normal',\n      },\n    },\n    item: {\n      alignItems: 'center',\n      borderRadius: 'l1',\n      cursor: 'default',\n      display: 'flex',\n      height: 'var(--select-trigger-height)',\n      justifyContent: 'space-between',\n      transition: 'common',\n      _hover: {\n        background: 'gray.subtle.bg',\n        color: 'fg.default',\n      },\n      _highlighted: {\n        background: 'gray.subtle.bg',\n        color: 'fg.default',\n      },\n      _selected: {\n        color: 'fg.default',\n      },\n      _disabled: {\n        layerStyle: 'disabled',\n      },\n    },\n    indicatorGroup: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1',\n      pos: 'absolute',\n      insetEnd: '0',\n      top: '0',\n      bottom: '0',\n      px: 'var(--select-trigger-padding-x)',\n      pointerEvents: 'none',\n    },\n    indicator: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: { base: 'fg.muted', _disabled: 'fg.subtle', _invalid: 'fg.error' },\n    },\n    itemGroupLabel: {\n      fontWeight: 'semibold',\n      textStyle: 'sm',\n    },\n    itemIndicator: {\n      color: 'colorPalette.solid',\n    },\n    label: {\n      fontWeight: 'medium',\n      userSelect: 'none',\n      textStyle: 'sm',\n    },\n    trigger: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      width: 'full',\n      minH: 'var(--select-trigger-height)',\n      '--input-height': 'var(--select-trigger-height)',\n      px: 'var(--select-trigger-padding-x)',\n      borderRadius: 'l2',\n      userSelect: 'none',\n      textAlign: 'start',\n      transition: 'common',\n      // focusVisibleRing: 'inside',\n      // appearance: 'none',\n      // borderColor: 'border.default',\n      // cursor: 'pointer',\n      // color: 'fg.default',\n      // display: 'inline-flex',\n      // outline: 0,\n      // position: 'relative',\n      _placeholderShown: {\n        color: 'fg.subtle',\n      },\n      _disabled: {\n        layerStyle: 'disabled',\n      },\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n    variant: 'outline',\n  },\n  variants: {\n    variant: {\n      outline: {\n        trigger: {\n          borderWidth: '1px',\n          _focus: {\n            borderColor: 'colorPalette.solid.bg',\n            boxShadow: '0 0 0 1px var(--colors-color-palette-solid-bg)',\n          },\n        },\n      },\n    },\n    size: {\n      xs: {\n        root: {\n          '--select-trigger-height': 'sizes.8',\n          '--select-trigger-padding-x': 'spacing.2',\n        },\n        trigger: {\n          textStyle: 'sm',\n          gap: '2',\n          _icon: {\n            width: '4',\n            height: '4',\n          },\n        },\n        content: { p: '1', gap: '1', textStyle: 'sm' },\n        item: { px: '1', height: '8' },\n        itemGroupLabel: {\n          px: '1',\n          py: '1',\n        },\n      },\n      sm: {\n        root: {\n          '--select-trigger-height': 'sizes.9',\n          '--select-trigger-padding-x': 'spacing.2.5',\n        },\n        trigger: {\n          textStyle: 'sm',\n          gap: '2',\n          _icon: {\n            width: '4.5',\n            height: '4.5',\n          },\n        },\n        content: { p: '1', gap: '1', textStyle: 'sm' },\n        item: { px: '1.5', height: '9' },\n        itemGroupLabel: {\n          px: '1.5',\n          py: '1',\n        },\n      },\n      md: {\n        root: {\n          '--select-trigger-height': 'sizes.10',\n          '--select-trigger-padding-x': 'spacing.3',\n        },\n        trigger: {\n          gap: '2',\n          textStyle: 'md',\n          _icon: {\n            width: '5',\n            height: '5',\n          },\n        },\n        content: { p: '1', gap: '1', textStyle: 'md' },\n        item: { px: '2', height: '10' },\n        itemGroupLabel: {\n          px: '2',\n          py: '1',\n        },\n      },\n      lg: {\n        root: {\n          '--select-trigger-height': 'sizes.11',\n          '--select-trigger-padding-x': 'spacing.3.5',\n        },\n        trigger: {\n          textStyle: 'md',\n          gap: '2',\n          _icon: {\n            width: '5.5',\n            height: '5.5',\n          },\n        },\n        content: { p: '1', gap: '1', textStyle: 'md' },\n        item: { px: '2.5', height: '11' },\n        itemGroupLabel: {\n          px: '2.5',\n          py: '1',\n        },\n      },\n      xl: {\n        root: {\n          '--select-trigger-height': 'sizes.12',\n          '--select-trigger-padding-x': 'spacing.4',\n        },\n        trigger: {\n          textStyle: 'lg',\n          gap: '3',\n          _icon: {\n            width: '6',\n            height: '6',\n          },\n        },\n        content: { p: '1', gap: '1', textStyle: 'lg' },\n        item: { px: '3', height: '11' },\n        itemGroupLabel: {\n          px: '3',\n          py: '1',\n        },\n      },\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./select",
            "symbols": [
              {
                "name": "select"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "select"
              }
            ]
          }
        ]
      }
    }
  ]
}