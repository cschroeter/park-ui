{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "popover",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "popover.tsx",
      "content": "'use client'\nimport { ark } from '@ark-ui/react/factory'\nimport { Popover } from '@ark-ui/react/popover'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { popover } from 'styled-system/recipes'\n\nconst { withRootProvider, withContext } = createStyleContext(popover)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider(Popover.Root, {\n  defaultProps: { unmountOnExit: true, lazyMount: true },\n})\nexport const RootProvider = withRootProvider(Popover.Root, {\n  defaultProps: { unmountOnExit: true, lazyMount: true },\n})\nexport const Anchor = withContext(Popover.Anchor, 'anchor')\nexport const ArrowTip = withContext(Popover.ArrowTip, 'arrowTip')\nexport const Arrow = withContext(Popover.Arrow, 'arrow', {\n  defaultProps: { children: <ArrowTip /> },\n})\nexport const CloseTrigger = withContext(Popover.CloseTrigger, 'closeTrigger')\nexport const Content = withContext(Popover.Content, 'content')\nexport const Description = withContext(Popover.Description, 'description')\nexport const Indicator = withContext(Popover.Indicator, 'indicator')\nexport const Positioner = withContext(Popover.Positioner, 'positioner')\nexport const Title = withContext(Popover.Title, 'title')\nexport const Trigger = withContext(Popover.Trigger, 'trigger')\n\nexport const Body = withContext(ark.div, 'body')\nexport const Header = withContext(ark.div, 'header')\nexport const Footer = withContext(ark.div, 'footer')\n\nexport { PopoverContext as Context } from '@ark-ui/react/popover'\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "Popover",
            "moduleSpecifier": "./popover"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "popover.ts",
      "content": "import { popoverAnatomy } from '@ark-ui/react/popover'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const popover = defineSlotRecipe({\n  className: 'popover',\n  jsx: ['Popover.Root'],\n  slots: popoverAnatomy.extendWith('header', 'body', 'footer').keys(),\n  base: {\n    content: {\n      '--popover-bg': 'colors.bg.default',\n      '--popover-padding': 'spacing.4',\n\n      background: 'var(--popover-bg)',\n      borderRadius: 'l3',\n      boxShadow: 'lg',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'var(--available-height)',\n      outline: '0',\n      position: 'relative',\n      textStyle: 'sm',\n      transformOrigin: 'var(--transform-origin)',\n      width: 'xs',\n      zIndex: 'calc(var(--z-index-popover) + var(--layer-index, 0))',\n      _open: {\n        animationStyle: 'scale-fade-in',\n        animationDuration: 'fast',\n      },\n      _closed: {\n        animationStyle: 'scale-fade-out',\n        animationDuration: 'faster',\n      },\n    },\n    title: {\n      color: 'fg.default',\n      fontWeight: 'medium',\n      textStyle: 'md',\n    },\n    description: {\n      color: 'fg.muted',\n      textStyle: 'sm',\n    },\n    closeTrigger: {\n      position: 'absolute',\n      top: '1',\n      right: '1',\n    },\n    header: {\n      display: 'flex',\n      flexDirection: 'column',\n      pt: 'var(--popover-padding)',\n      px: 'var(--popover-padding)',\n    },\n    body: { p: 'var(--popover-padding)', display: 'flex', flex: '1', flexDirection: 'column' },\n    footer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      gap: '3',\n      paddingInline: 'var(--popover-padding)',\n      paddingBottom: 'var(--popover-padding)',\n    },\n    arrow: {\n      '--arrow-size': 'sizes.3',\n      '--arrow-background': 'var(--popover-bg)',\n    },\n    arrowTip: {\n      borderTopWidth: '0.5px',\n      borderInlineStartWidth: '0.5px',\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./popover",
            "symbols": [
              {
                "name": "popover"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "popover"
              }
            ]
          }
        ]
      }
    }
  ]
}