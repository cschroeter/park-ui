{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "scroll-area",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "scroll-area.tsx",
      "content": "'use client'\nimport { ScrollArea } from '@ark-ui/react/scroll-area'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { scrollArea } from 'styled-system/recipes'\n\nconst { withProvider, withContext } = createStyleContext(scrollArea)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider(ScrollArea.Root, 'root')\n\nexport const Content = withContext(ScrollArea.Content, 'content')\nexport const Corner = withContext(ScrollArea.Corner, 'corner')\nexport const Scrollbar = withContext(ScrollArea.Scrollbar, 'scrollbar')\nexport const Thumb = withContext(ScrollArea.Thumb, 'thumb')\nexport const Viewport = withContext(ScrollArea.Viewport, 'viewport')\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "ScrollArea",
            "moduleSpecifier": "./scroll-area"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "scroll-area.ts",
      "content": "import { defineSlotRecipe } from '@pandacss/dev'\n\nexport const scrollArea = defineSlotRecipe({\n  className: 'scroll-area',\n  slots: ['root', 'viewport', 'content', 'scrollbar', 'thumb', 'corner'],\n  base: {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      overflow: 'hidden',\n      '--scrollbar-margin': '0px',\n      '--scrollbar-size': 'calc(var(--thumb-size) + calc(var(--scrollbar-margin) * 2))',\n    },\n    viewport: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      width: '100%',\n      WebkitOverflowScrolling: 'touch',\n      scrollbarWidth: 'none',\n      '&::-webkit-scrollbar': {\n        display: 'none',\n      },\n    },\n    content: {\n      minWidth: '100%',\n    },\n    scrollbar: {\n      display: 'flex',\n      userSelect: 'none',\n      touchAction: 'none',\n      position: 'relative',\n      alignItems: 'center',\n      _vertical: {\n        flexDirection: 'column',\n        width: 'var(--scrollbar-size)',\n        py: 'var(--scrollbar-margin)',\n        '&:not([data-overflow-y])': {\n          display: 'none',\n        },\n      },\n      _horizontal: {\n        flexDirection: 'row',\n        height: 'var(--scrollbar-size)',\n        px: 'var(--scrollbar-margin)',\n        '&:not([data-overflow-x])': {\n          display: 'none',\n        },\n      },\n    },\n    thumb: {\n      borderRadius: 'full',\n      bg: 'var(--thumb-bg)',\n      transitionDuration: 'normal',\n      transitionProperty: 'background, color, box-shadow',\n      transitionTimingFunction: 'default',\n      _vertical: { width: 'var(--thumb-size)' },\n      _horizontal: { height: 'var(--thumb-size)' },\n    },\n    corner: {},\n  },\n  variants: {\n    variant: {\n      auto: {\n        scrollbar: {\n          '&[data-scrolling], &[data-hover]': {\n            '--thumb-bg': '{colors.gray.a8}',\n          },\n        },\n      },\n      visible: {\n        content: {\n          '&[data-overflow-y]': {\n            pe: 'calc(var(--scrollbar-size) * 2)',\n          },\n          '&[data-overflow-x]': {\n            pb: 'calc(var(--scrollbar-size) * 2)',\n          },\n        },\n        scrollbar: {\n          bg: 'gray.a3',\n          borderRadius: 'full',\n        },\n        thumb: {\n          '--thumb-bg': '{colors.gray.a8}',\n        },\n      },\n    },\n    size: {\n      xs: {\n        root: {\n          '--thumb-size': 'sizes.1',\n        },\n      },\n      sm: {\n        root: {\n          '--thumb-size': 'sizes.1.5',\n        },\n      },\n      md: {\n        root: {\n          '--thumb-size': 'sizes.2',\n        },\n      },\n      lg: {\n        root: {\n          '--thumb-size': 'sizes.2.5',\n        },\n      },\n    },\n  },\n\n  defaultVariants: {\n    size: 'md',\n    variant: 'auto',\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./scroll-area",
            "symbols": [
              {
                "name": "scroll-area"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "scroll-area"
              }
            ]
          }
        ]
      }
    }
  ]
}