{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "tooltip",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "tooltip.tsx",
      "content": "'use client'\nimport { Portal } from '@ark-ui/react/portal'\nimport { Tooltip as ArkTooltip } from '@ark-ui/react/tooltip'\nimport { type ComponentProps, forwardRef } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { tooltip } from 'styled-system/recipes'\n\nconst { withRootProvider, withContext } = createStyleContext(tooltip)\n\ntype RootProps = ComponentProps<typeof Root>\ntype ContentProps = ComponentProps<typeof Content>\nconst Root = withRootProvider(ArkTooltip.Root, {\n  defaultProps: { unmountOnExit: true, lazyMount: true },\n})\nconst Arrow = withContext(ArkTooltip.Arrow, 'arrow')\nconst ArrowTip = withContext(ArkTooltip.ArrowTip, 'arrowTip')\nconst Content = withContext(ArkTooltip.Content, 'content')\nconst Positioner = withContext(ArkTooltip.Positioner, 'positioner')\nconst Trigger = withContext(ArkTooltip.Trigger, 'trigger')\n\nexport { TooltipContext as Context } from '@ark-ui/react/tooltip'\n\nexport interface TooltipProps extends Omit<RootProps, 'content'> {\n  showArrow?: boolean\n  portalled?: boolean\n  portalRef?: React.RefObject<HTMLElement | null>\n  children: React.ReactNode | undefined\n  content: React.ReactNode | string\n  contentProps?: ContentProps\n  disabled?: boolean\n}\n\nexport const Tooltip = forwardRef<HTMLDivElement, TooltipProps>(function Tooltip(props, ref) {\n  const {\n    showArrow,\n    children,\n    disabled,\n    portalled = true,\n    content,\n    contentProps,\n    portalRef,\n    ...rootProps\n  } = props\n\n  if (disabled) return children\n\n  return (\n    <Root {...rootProps}>\n      <Trigger asChild>{children}</Trigger>\n      <Portal disabled={!portalled} container={portalRef}>\n        <Positioner>\n          <Content ref={ref} {...contentProps}>\n            {showArrow && (\n              <Arrow>\n                <ArrowTip />\n              </Arrow>\n            )}\n            {content}\n          </Content>\n        </Positioner>\n      </Portal>\n    </Root>\n  )\n})\n",
      "indexFile": {
        "exports": [
          {
            "type": "named",
            "symbols": [
              {
                "name": "Tooltip",
                "isType": false
              },
              {
                "name": "TooltipProps",
                "isType": true
              }
            ],
            "moduleSpecifier": "./tooltip"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "tooltip.ts",
      "content": "import { tooltipAnatomy } from '@ark-ui/react/tooltip'\nimport { defineSlotRecipe } from '@pandacss/dev'\n\nexport const tooltip = defineSlotRecipe({\n  className: 'tooltip',\n  slots: tooltipAnatomy.keys(),\n  base: {\n    content: {\n      '--tooltip-bg': 'colors.gray.12',\n      bg: 'var(--tooltip-bg)',\n      color: 'gray.1',\n      borderRadius: 'l2',\n      boxShadow: 'sm',\n      fontWeight: 'semibold',\n      px: '2',\n      py: '1.5',\n      textStyle: 'xs',\n      maxWidth: 'xs',\n      _open: {\n        animationStyle: 'scale-fade-in',\n        animationDuration: 'fast',\n      },\n      _closed: {\n        animationStyle: 'scale-fade-out',\n        animationDuration: 'faster',\n      },\n    },\n    arrow: {\n      '--arrow-size': 'sizes.2',\n      '--arrow-background': 'var(--tooltip-bg)',\n    },\n    arrowTip: {\n      borderTopWidth: '1px',\n      borderInlineStartWidth: '1px',\n      borderColor: 'var(--tooltip-bg)',\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./tooltip",
            "symbols": [
              {
                "name": "tooltip"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "tooltip"
              }
            ]
          }
        ]
      }
    }
  ]
}