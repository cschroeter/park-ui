{
  "$schema": "https://next.park-ui.com/schema/registry-item.json",
  "id": "number-input",
  "type": "component",
  "files": [
    {
      "type": "component",
      "fileName": "number-input.tsx",
      "content": "'use client'\nimport { NumberInput } from '@ark-ui/react/number-input'\nimport { ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\nimport type { ComponentProps } from 'react'\nimport { createStyleContext } from 'styled-system/jsx'\nimport { numberInput } from 'styled-system/recipes'\n\nconst { withProvider, withContext } = createStyleContext(numberInput)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider(NumberInput.Root, 'root')\nexport const RootProvider = withProvider(NumberInput.RootProvider, 'root')\nexport const DecrementTrigger = withContext(NumberInput.DecrementTrigger, 'decrementTrigger', {\n  defaultProps: { children: <ChevronDownIcon /> },\n})\nexport const IncrementTrigger = withContext(NumberInput.IncrementTrigger, 'incrementTrigger', {\n  defaultProps: { children: <ChevronUpIcon /> },\n})\nexport const Input = withContext(NumberInput.Input, 'input')\nexport const Label = withContext(NumberInput.Label, 'label')\nexport const Scrubber = withContext(NumberInput.Scrubber, 'scrubber')\nexport const ValueText = withContext(NumberInput.ValueText, 'valueText')\nexport const Control = withContext(NumberInput.Control, 'control', {\n  defaultProps: {\n    children: (\n      <>\n        <IncrementTrigger />\n        <DecrementTrigger />\n      </>\n    ),\n  },\n})\n\nexport { NumberInputContext as Context } from '@ark-ui/react/number-input'\n",
      "indexFile": {
        "exports": [
          {
            "type": "namespace",
            "namespace": "NumberInput",
            "moduleSpecifier": "./number-input"
          }
        ]
      }
    },
    {
      "type": "recipe",
      "fileName": "number-input.ts",
      "content": "/** biome-ignore-all lint/complexity/useLiteralKeys: Need to improve types in Panda CSS */\nimport { numberInputAnatomy } from '@ark-ui/react/number-input'\nimport { defineSlotRecipe } from '@pandacss/dev'\nimport { input } from './input'\n\nconst trigger = {\n  alignItems: 'center',\n  color: 'fg.muted',\n  cursor: 'pointer',\n  display: 'flex',\n  flex: '1',\n  justifyContent: 'center',\n  lineHeight: '1',\n  transition: 'common',\n  userSelect: 'none',\n  _icon: {\n    boxSize: '1em',\n  },\n  _hover: {\n    bg: 'bg.muted',\n  },\n  _active: {\n    bg: 'bg.emphasized',\n  },\n}\n\nexport const numberInput = defineSlotRecipe({\n  className: 'number-input',\n  slots: numberInputAnatomy.keys(),\n  base: {\n    root: {\n      isolation: 'isolate',\n      position: 'relative',\n      _disabled: {\n        layerStyle: 'disabled',\n      },\n    },\n    control: {\n      borderStartWidth: '1px',\n      display: 'flex',\n      divideY: '1px',\n      flexDirection: 'column',\n      height: 'calc(100% - 2px)',\n      insetEnd: '0px',\n      margin: '1px',\n      position: 'absolute',\n      top: '0',\n      width: 'var(--stepper-width)',\n      zIndex: '1',\n    },\n    input: {\n      ...input.base,\n      verticalAlign: 'top',\n      pe: 'calc(var(--stepper-width) + 0.5rem)',\n    },\n    label: {\n      color: 'fg.default',\n      fontWeight: 'medium',\n    },\n    incrementTrigger: {\n      ...trigger,\n      borderTopRightRadius: 'l2',\n    },\n    decrementTrigger: {\n      ...trigger,\n      borderBottomRightRadius: 'l2',\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n    variant: 'outline',\n  },\n  variants: {\n    size: {\n      sm: {\n        control: {\n          '--stepper-width': 'sizes.4.5',\n        },\n        input: input.variants?.['size']?.['sm'],\n      },\n      md: {\n        control: {\n          '--stepper-width': 'sizes.5',\n        },\n        input: input.variants?.['size']?.['md'],\n      },\n      lg: {\n        control: {\n          '--stepper-width': 'sizes.5.5',\n        },\n        input: input.variants?.['size']?.['lg'],\n      },\n      xl: {\n        control: {\n          '--stepper-width': 'sizes.6',\n        },\n        input: input.variants?.['size']?.['xl'],\n      },\n    },\n    variant: {\n      outline: {\n        input: input.variants?.['variant']?.['outline'],\n      },\n    },\n  },\n})\n",
      "indexFile": {
        "imports": [
          {
            "type": "named",
            "moduleSpecifier": "./number-input",
            "symbols": [
              {
                "name": "number-input"
              }
            ]
          }
        ],
        "exports": [
          {
            "type": "object-literal",
            "variableName": "slotRecipes",
            "properties": [
              {
                "name": "number-input"
              }
            ]
          }
        ]
      }
    }
  ]
}