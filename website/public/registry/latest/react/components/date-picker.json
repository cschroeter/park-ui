{
  "id": "date-picker",
  "name": "Date Picker",
  "variants": [
    {
      "file": "primitives/date-picker.tsx",
      "content": "'use client'\nimport type { Assign } from '@ark-ui/react'\nimport { DatePicker } from '@ark-ui/react/date-picker'\nimport { type DatePickerVariantProps, datePicker } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(datePicker)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, DatePicker.RootProviderBaseProps>, DatePickerVariantProps>\n>(DatePicker.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, DatePicker.RootBaseProps>, DatePickerVariantProps>\n>(DatePicker.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.ClearTriggerBaseProps>\n>(DatePicker.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.ContentBaseProps>\n>(DatePicker.Content, 'content')\n\nexport const Control = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.ControlBaseProps>\n>(DatePicker.Control, 'control')\n\nexport const Input = withContext<\n  HTMLInputElement,\n  Assign<HTMLStyledProps<'input'>, DatePicker.InputBaseProps>\n>(DatePicker.Input, 'input')\n\nexport const Label = withContext<\n  HTMLLabelElement,\n  Assign<HTMLStyledProps<'label'>, DatePicker.LabelBaseProps>\n>(DatePicker.Label, 'label')\n\nexport const MonthSelect = withContext<\n  HTMLSelectElement,\n  Assign<HTMLStyledProps<'select'>, DatePicker.MonthSelectBaseProps>\n>(DatePicker.MonthSelect, 'monthSelect')\n\nexport const NextTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.NextTriggerBaseProps>\n>(DatePicker.NextTrigger, 'nextTrigger')\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.PositionerBaseProps>\n>(DatePicker.Positioner, 'positioner')\n\nexport const PresetTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.PresetTriggerBaseProps>\n>(DatePicker.PresetTrigger, 'presetTrigger')\n\nexport const PrevTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.PrevTriggerBaseProps>\n>(DatePicker.PrevTrigger, 'prevTrigger')\n\nexport const RangeText = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.RangeTextBaseProps>\n>(DatePicker.RangeText, 'rangeText')\n\nexport const TableBody = withContext<\n  HTMLTableSectionElement,\n  Assign<HTMLStyledProps<'tbody'>, DatePicker.TableBodyBaseProps>\n>(DatePicker.TableBody, 'tableBody')\n\nexport const TableCell = withContext<\n  HTMLTableCellElement,\n  Assign<HTMLStyledProps<'td'>, DatePicker.TableCellBaseProps>\n>(DatePicker.TableCell, 'tableCell')\n\nexport const TableCellTrigger = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.TableCellTriggerBaseProps>\n>(DatePicker.TableCellTrigger, 'tableCellTrigger')\n\nexport const TableHead = withContext<\n  HTMLTableSectionElement,\n  Assign<HTMLStyledProps<'thead'>, DatePicker.TableHeadBaseProps>\n>(DatePicker.TableHead, 'tableHead')\n\nexport const TableHeader = withContext<\n  HTMLTableCellElement,\n  Assign<HTMLStyledProps<'th'>, DatePicker.TableHeaderBaseProps>\n>(DatePicker.TableHeader, 'tableHeader')\n\nexport const Table = withContext<\n  HTMLTableElement,\n  Assign<HTMLStyledProps<'table'>, DatePicker.TableBaseProps>\n>(DatePicker.Table, 'table')\n\nexport const TableRow = withContext<\n  HTMLTableRowElement,\n  Assign<HTMLStyledProps<'tr'>, DatePicker.TableRowBaseProps>\n>(DatePicker.TableRow, 'tableRow')\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.TriggerBaseProps>\n>(DatePicker.Trigger, 'trigger')\n\nexport const ViewControl = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.ViewControlBaseProps>\n>(DatePicker.ViewControl, 'viewControl')\n\nexport const View = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, DatePicker.ViewBaseProps>\n>(DatePicker.View, 'view')\n\nexport const ViewTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, DatePicker.ViewTriggerBaseProps>\n>(DatePicker.ViewTrigger, 'viewTrigger')\n\nexport const YearSelect = withContext<\n  HTMLSelectElement,\n  Assign<HTMLStyledProps<'select'>, DatePicker.YearSelectBaseProps>\n>(DatePicker.YearSelect, 'yearSelect')\n\nexport { DatePickerContext as Context } from '@ark-ui/react/date-picker'\n",
      "exports": "export * as DatePicker from './date-picker'"
    }
  ]
}
