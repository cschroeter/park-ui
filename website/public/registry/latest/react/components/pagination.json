{
  "id": "pagination",
  "name": "Pagination",
  "variants": [
    {
      "file": "primitives/pagination.tsx",
      "content": "'use client'\nimport type { Assign } from '@ark-ui/react'\nimport { Pagination } from '@ark-ui/react/pagination'\nimport { type PaginationVariantProps, pagination } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(pagination)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLElement,\n  Assign<Assign<HTMLStyledProps<'nav'>, Pagination.RootProviderBaseProps>, PaginationVariantProps>\n>(Pagination.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLElement,\n  Assign<Assign<HTMLStyledProps<'nav'>, Pagination.RootBaseProps>, PaginationVariantProps>\n>(Pagination.Root, 'root')\n\nexport const Ellipsis = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Pagination.EllipsisBaseProps>\n>(Pagination.Ellipsis, 'ellipsis')\n\nexport const Item = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Pagination.ItemBaseProps>\n>(Pagination.Item, 'item')\n\nexport const NextTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Pagination.NextTriggerBaseProps>\n>(Pagination.NextTrigger, 'nextTrigger')\n\nexport const PrevTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Pagination.PrevTriggerBaseProps>\n>(Pagination.PrevTrigger, 'prevTrigger')\n\nexport { PaginationContext as Context } from '@ark-ui/react/pagination'\n",
      "exports": "export * as Pagination from './pagination'"
    },
    {
      "file": "pagination.tsx",
      "content": "'use client'\nimport { forwardRef } from 'react'\nimport { Pagination as ArkPagination } from '~/components/ui/primitives'\nimport { Button } from '~/components/ui/primitives'\nimport { IconButton } from '~/components/ui/primitives'\n\nexport interface PaginationProps extends ArkPagination.RootProps {}\n\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>((props, ref) => {\n  return (\n    <ArkPagination.Root ref={ref} {...props}>\n      <ArkPagination.PrevTrigger asChild>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronLeftIcon />\n        </IconButton>\n      </ArkPagination.PrevTrigger>\n      <ArkPagination.Context>\n        {(pagination) =>\n          pagination.pages.map((page, index) =>\n            page.type === 'page' ? (\n              <ArkPagination.Item key={index} {...page} asChild>\n                <Button variant=\"outline\">{page.value}</Button>\n              </ArkPagination.Item>\n            ) : (\n              <ArkPagination.Ellipsis key={index} index={index}>\n                &#8230;\n              </ArkPagination.Ellipsis>\n            ),\n          )\n        }\n      </ArkPagination.Context>\n      <ArkPagination.NextTrigger asChild>\n        <IconButton variant=\"ghost\" aria-label=\"Next Page\">\n          <ChevronRightIcon />\n        </IconButton>\n      </ArkPagination.NextTrigger>\n    </ArkPagination.Root>\n  )\n})\n\nPagination.displayName = 'Pagination'\n\nconst ChevronLeftIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Left Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m15 18l-6-6l6-6\"\n    />\n  </svg>\n)\n\nconst ChevronRightIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Right Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      d=\"m9 18l6-6l-6-6\"\n    />\n  </svg>\n)\n",
      "exports": "export { Pagination, type PaginationProps } from './pagination'"
    }
  ]
}
