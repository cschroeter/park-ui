{
  "id": "progress",
  "name": "Progress",
  "variants": [
    {
      "file": "styled/progress.tsx",
      "content": "'use client'\nimport type { Assign } from '@ark-ui/react'\nimport { Progress } from '@ark-ui/react/progress'\nimport { type ProgressVariantProps, progress } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from './utils/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(progress)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootProviderBaseProps>, ProgressVariantProps>\n>(Progress.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootBaseProps>, ProgressVariantProps>\n>(Progress.Root, 'root')\n\nexport const Circle = withContext<\n  SVGSVGElement,\n  Assign<HTMLStyledProps<'svg'>, Progress.CircleBaseProps>\n>(Progress.Circle, 'circle')\n\nexport const CircleRange = withContext<\n  SVGCircleElement,\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleRangeBaseProps>\n>(Progress.CircleRange, 'circleRange')\n\nexport const CircleTrack = withContext<\n  SVGCircleElement,\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleTrackBaseProps>\n>(Progress.CircleTrack, 'circleTrack')\n\nexport const Label = withContext<\n  HTMLLabelElement,\n  Assign<HTMLStyledProps<'label'>, Progress.LabelBaseProps>\n>(Progress.Label, 'label')\n\nexport const Range = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Progress.RangeBaseProps>\n>(Progress.Range, 'range')\n\nexport const Track = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Progress.TrackBaseProps>\n>(Progress.Track, 'track')\n\nexport const ValueText = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<'span'>, Progress.ValueTextBaseProps>\n>(Progress.ValueText, 'valueText')\n\nexport const View = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<'span'>, Progress.ViewBaseProps>\n>(Progress.View, 'view')\n\nexport { ProgressContext as Context } from '@ark-ui/react/progress'\n"
    },
    {
      "file": "progress.tsx",
      "content": "import { forwardRef } from 'react'\nimport * as StyledProgress from './styled/progress'\n\nexport interface ProgressProps extends StyledProgress.RootProps {\n  /**\n   * The type of progress to render.\n   * @default linear\n   */\n  type?: 'linear' | 'circular'\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>((props, ref) => {\n  const { children, type = 'linear', ...rootProps } = props\n\n  return (\n    <StyledProgress.Root ref={ref} {...rootProps}>\n      {children && <StyledProgress.Label>{children}</StyledProgress.Label>}\n      {type === 'linear' && (\n        <StyledProgress.Track>\n          <StyledProgress.Range />\n        </StyledProgress.Track>\n      )}\n      {type === 'circular' && (\n        <StyledProgress.Circle>\n          <StyledProgress.CircleTrack />\n          <StyledProgress.CircleRange />\n          <StyledProgress.ValueText />\n        </StyledProgress.Circle>\n      )}\n      <StyledProgress.ValueText />\n    </StyledProgress.Root>\n  )\n})\n\nProgress.displayName = 'Progress'\n"
    }
  ]
}
