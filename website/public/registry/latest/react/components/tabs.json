{
  "id": "tabs",
  "name": "Tabs",
  "variants": [
    {
      "file": "primitives/tabs.tsx",
      "content": "'use client'\nimport type { Assign } from '@ark-ui/react'\nimport { Tabs } from '@ark-ui/react/tabs'\nimport { type TabsVariantProps, tabs } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(tabs)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, Tabs.RootProviderBaseProps>, TabsVariantProps>\n>(Tabs.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<Assign<HTMLStyledProps<'div'>, Tabs.RootBaseProps>, TabsVariantProps>\n>(Tabs.Root, 'root')\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Tabs.ContentBaseProps>\n>(Tabs.Content, 'content')\n\nexport const Indicator = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Tabs.IndicatorBaseProps>\n>(Tabs.Indicator, 'indicator')\n\nexport const List = withContext<HTMLDivElement, Assign<HTMLStyledProps<'div'>, Tabs.ListBaseProps>>(\n  Tabs.List,\n  'list',\n)\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Tabs.TriggerBaseProps>\n>(Tabs.Trigger, 'trigger')\n\nexport { TabsContext as Context } from '@ark-ui/react/tabs'\n"
    },
    { "file": "tabs.tsx", "content": "export * as Tabs from './primitives/tabs'\n" }
  ]
}
