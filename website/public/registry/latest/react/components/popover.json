{
  "id": "popover",
  "name": "Popover",
  "variants": [
    {
      "file": "styled/popover.tsx",
      "content": "'use client'\nimport type { Assign } from '@ark-ui/react'\nimport { Popover } from '@ark-ui/react/popover'\nimport { type PopoverVariantProps, popover } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from './utils/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(popover)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<\n  Assign<Popover.RootProviderProps, PopoverVariantProps>\n>(Popover.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<Assign<Popover.RootProps, PopoverVariantProps>>(Popover.Root)\n\nexport const Anchor = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.AnchorBaseProps>\n>(Popover.Anchor, 'anchor')\n\nexport const Arrow = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.ArrowBaseProps>\n>(Popover.Arrow, 'arrow')\n\nexport const ArrowTip = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.ArrowTipBaseProps>\n>(Popover.ArrowTip, 'arrowTip')\n\nexport const CloseTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Popover.CloseTriggerBaseProps>\n>(Popover.CloseTrigger, 'closeTrigger')\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.ContentBaseProps>\n>(Popover.Content, 'content')\n\nexport const Description = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.DescriptionBaseProps>\n>(Popover.Description, 'description')\n\nexport const Indicator = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.IndicatorBaseProps>\n>(Popover.Indicator, 'indicator')\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.PositionerBaseProps>\n>(Popover.Positioner, 'positioner')\n\nexport const Title = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Popover.TitleBaseProps>\n>(Popover.Title, 'title')\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Popover.TriggerBaseProps>\n>(Popover.Trigger, 'trigger')\n\nexport { PopoverContext as Context } from '@ark-ui/react/popover'\n"
    },
    { "file": "popover.tsx", "content": "export * as Popover from './styled/popover'\n" }
  ]
}
