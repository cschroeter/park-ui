{
  "id": "select",
  "name": "Select",
  "filename": "select.tsx",
  "variants": [
    {
      "file": "primitives/select.tsx",
      "content": "import type { Assign } from '@ark-ui/react'\nimport { Select } from '@ark-ui/react/select'\nimport { type SelectVariantProps, select } from 'styled-system/recipes'\nimport type { ComponentProps, HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  HTMLDivElement,\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Select.RootProviderBaseProps<Select.CollectionItem>>,\n    SelectVariantProps\n  >\n>(Select.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Select.RootBaseProps<Select.CollectionItem>>,\n    SelectVariantProps\n  >\n>(Select.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Select.ClearTriggerBaseProps>\n>(Select.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ContentBaseProps>\n>(Select.Content, 'content')\n\nexport const Control = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ControlBaseProps>\n>(Select.Control, 'control')\n\nexport const Indicator = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.IndicatorBaseProps>\n>(Select.Indicator, 'indicator')\n\nexport const ItemGroupLabel = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ItemGroupLabelBaseProps>\n>(Select.ItemGroupLabel, 'itemGroupLabel')\n\nexport const ItemGroup = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ItemGroupBaseProps>\n>(Select.ItemGroup, 'itemGroup')\n\nexport const ItemIndicator = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ItemIndicatorBaseProps>\n>(Select.ItemIndicator, 'itemIndicator')\n\nexport const Item = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ItemBaseProps>\n>(Select.Item, 'item')\n\nexport const ItemText = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'span'>, Select.ItemTextBaseProps>\n>(Select.ItemText, 'itemText')\n\nexport const Label = withContext<\n  HTMLLabelElement,\n  Assign<HTMLStyledProps<'label'>, Select.LabelBaseProps>\n>(Select.Label, 'label')\n\nexport const List = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.ListBaseProps>\n>(Select.List, 'list')\n\nexport const Positioner = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<'div'>, Select.PositionerBaseProps>\n>(Select.Positioner, 'positioner')\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<'button'>, Select.TriggerBaseProps>\n>(Select.Trigger, 'trigger')\n\nexport const ValueText = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<'span'>, Select.ValueTextBaseProps>\n>(Select.ValueText, 'valueText')\n\nexport {\n  SelectContext as Context,\n  SelectHiddenSelect as HiddenSelect,\n} from '@ark-ui/react/select'\n",
      "exports": "export * as Select from './select'"
    }
  ]
}
