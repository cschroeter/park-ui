{
  "id": "color-picker",
  "name": "Color Picker",
  "variants": [
    {
      "file": "primitives/color-picker.tsx",
      "content": "import { type Assign, ColorPicker } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type ColorPickerVariantProps, colorPicker } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(colorPicker)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, ColorPicker.RootProviderBaseProps>, ColorPickerVariantProps>\n>(ColorPicker.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, ColorPicker.RootBaseProps>, ColorPickerVariantProps>\n>(ColorPicker.Root, 'root')\n\nexport const AreaBackground = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.AreaBackgroundBaseProps>\n>(ColorPicker.AreaBackground, 'areaBackground')\n\nexport const Area = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.AreaBaseProps>>(\n  ColorPicker.Area,\n  'area',\n)\n\nexport const AreaThumb = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.AreaThumbBaseProps>\n>(ColorPicker.AreaThumb, 'areaThumb')\n\nexport const ChannelInput = withContext<\n  Assign<HTMLStyledProps<'input'>, ColorPicker.ChannelInputBaseProps>\n>(ColorPicker.ChannelInput, 'channelInput')\n\nexport const ChannelSliderLabel = withContext<\n  Assign<HTMLStyledProps<'label'>, ColorPicker.ChannelSliderLabelBaseProps>\n>(ColorPicker.ChannelSliderLabel, 'channelSliderLabel')\n\nexport const ChannelSlider = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderBaseProps>\n>(ColorPicker.ChannelSlider, 'channelSlider')\n\nexport const ChannelSliderThumb = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderThumbBaseProps>\n>(ColorPicker.ChannelSliderThumb, 'channelSliderThumb')\n\nexport const ChannelSliderTrack = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ChannelSliderTrackBaseProps>\n>(ColorPicker.ChannelSliderTrack, 'channelSliderTrack')\n\nexport const ChannelSliderValueText = withContext<\n  Assign<HTMLStyledProps<'span'>, ColorPicker.ChannelSliderValueTextBaseProps>\n>(ColorPicker.ChannelSliderValueText, 'channelSliderValueText')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ContentBaseProps>>(\n  ColorPicker.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ControlBaseProps>>(\n  ColorPicker.Control,\n  'control',\n)\n\nexport const EyeDropperTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.EyeDropperTriggerBaseProps>\n>(ColorPicker.EyeDropperTrigger, 'eyeDropperTrigger')\n\nexport const FormatSelect = withContext<\n  Assign<HTMLStyledProps<'select'>, ColorPicker.FormatSelectBaseProps>\n>(ColorPicker.FormatSelect, 'formatSelect')\n\nexport const FormatTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.FormatTriggerBaseProps>\n>(ColorPicker.FormatTrigger, 'formatTrigger')\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, ColorPicker.LabelBaseProps>>(\n  ColorPicker.Label,\n  'label',\n)\n\nexport const Positioner = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.PositionerBaseProps>\n>(ColorPicker.Positioner, 'positioner')\n\nexport const SwatchGroup = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchGroupBaseProps>\n>(ColorPicker.SwatchGroup, 'swatchGroup')\n\nexport const SwatchIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchIndicatorBaseProps>\n>(ColorPicker.SwatchIndicator, 'swatchIndicator')\n\nexport const Swatch = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.SwatchBaseProps>>(\n  ColorPicker.Swatch,\n  'swatch',\n)\n\nexport const SwatchTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, ColorPicker.SwatchTriggerBaseProps>\n>(ColorPicker.SwatchTrigger, 'swatchTrigger')\n\nexport const TransparencyGrid = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.TransparencyGridBaseProps>\n>(ColorPicker.TransparencyGrid, 'transparencyGrid')\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, ColorPicker.TriggerBaseProps>>(\n  ColorPicker.Trigger,\n  'trigger',\n)\n\nexport const ValueSwatch = withContext<\n  Assign<HTMLStyledProps<'div'>, ColorPicker.ValueSwatchBaseProps>\n>(ColorPicker.ValueSwatch, 'swatch')\n\nexport const ValueText = withContext<\n  Assign<HTMLStyledProps<'span'>, ColorPicker.ValueTextBaseProps>\n>(ColorPicker.ValueText, 'valueText')\n\nexport const View = withContext<Assign<HTMLStyledProps<'div'>, ColorPicker.ViewBaseProps>>(\n  ColorPicker.View,\n  'view',\n)\n\nexport {\n  ColorPickerContext as Context,\n  ColorPickerHiddenInput as HiddenInput,\n} from '@ark-ui/solid'\n"
    },
    {
      "file": "color-picker.tsx",
      "content": "export * as ColorPicker from './primitives/color-picker'\n"
    }
  ]
}
