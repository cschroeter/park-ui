{
  "id": "date-picker",
  "name": "Date Picker",
  "variants": [
    {
      "file": "primitives/date-picker.tsx",
      "content": "import { type Assign, DatePicker } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type DatePickerVariantProps, datePicker } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(datePicker)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, DatePicker.RootProviderBaseProps>, DatePickerVariantProps>\n>(DatePicker.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, DatePicker.RootBaseProps>, DatePickerVariantProps>\n>(DatePicker.Root, 'root')\n\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, DatePicker.ClearTriggerBaseProps>\n>(DatePicker.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, DatePicker.ContentBaseProps>>(\n  DatePicker.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, DatePicker.ControlBaseProps>>(\n  DatePicker.Control,\n  'control',\n)\n\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, DatePicker.InputBaseProps>>(\n  DatePicker.Input,\n  'input',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, DatePicker.LabelBaseProps>>(\n  DatePicker.Label,\n  'label',\n)\n\nexport const MonthSelect = withContext<\n  Assign<HTMLStyledProps<'select'>, DatePicker.MonthSelectBaseProps>\n>(DatePicker.MonthSelect, 'monthSelect')\n\nexport const NextTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, DatePicker.NextTriggerBaseProps>\n>(DatePicker.NextTrigger, 'nextTrigger')\n\nexport const Positioner = withContext<\n  Assign<HTMLStyledProps<'div'>, DatePicker.PositionerBaseProps>\n>(DatePicker.Positioner, 'positioner')\n\nexport const PresetTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, DatePicker.PresetTriggerBaseProps>\n>(DatePicker.PresetTrigger, 'presetTrigger')\n\nexport const PrevTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, DatePicker.PrevTriggerBaseProps>\n>(DatePicker.PrevTrigger, 'prevTrigger')\n\nexport const RangeText = withContext<Assign<HTMLStyledProps<'div'>, DatePicker.RangeTextBaseProps>>(\n  DatePicker.RangeText,\n  'rangeText',\n)\n\nexport const TableBody = withContext<\n  Assign<HTMLStyledProps<'tbody'>, DatePicker.TableBodyBaseProps>\n>(DatePicker.TableBody, 'tableBody')\n\nexport const TableCell = withContext<Assign<HTMLStyledProps<'td'>, DatePicker.TableCellBaseProps>>(\n  DatePicker.TableCell,\n  'tableCell',\n)\n\nexport const TableCellTrigger = withContext<\n  Assign<HTMLStyledProps<'div'>, DatePicker.TableCellTriggerBaseProps>\n>(DatePicker.TableCellTrigger, 'tableCellTrigger')\n\nexport const TableHead = withContext<\n  Assign<HTMLStyledProps<'thead'>, DatePicker.TableHeadBaseProps>\n>(DatePicker.TableHead, 'tableHead')\n\nexport const TableHeader = withContext<\n  Assign<HTMLStyledProps<'th'>, DatePicker.TableHeaderBaseProps>\n>(DatePicker.TableHeader, 'tableHeader')\n\nexport const Table = withContext<Assign<HTMLStyledProps<'table'>, DatePicker.TableBaseProps>>(\n  DatePicker.Table,\n  'table',\n)\n\nexport const TableRow = withContext<Assign<HTMLStyledProps<'tr'>, DatePicker.TableRowBaseProps>>(\n  DatePicker.TableRow,\n  'tableRow',\n)\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, DatePicker.TriggerBaseProps>>(\n  DatePicker.Trigger,\n  'trigger',\n)\n\nexport const ViewControl = withContext<\n  Assign<HTMLStyledProps<'div'>, DatePicker.ViewControlBaseProps>\n>(DatePicker.ViewControl, 'viewControl')\n\nexport const View = withContext<Assign<HTMLStyledProps<'div'>, DatePicker.ViewBaseProps>>(\n  DatePicker.View,\n  'view',\n)\n\nexport const ViewTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, DatePicker.ViewTriggerBaseProps>\n>(DatePicker.ViewTrigger, 'viewTrigger')\n\nexport const YearSelect = withContext<\n  Assign<HTMLStyledProps<'select'>, DatePicker.YearSelectBaseProps>\n>(DatePicker.YearSelect, 'yearSelect')\n\nexport { DatePickerContext as Context } from '@ark-ui/solid'\n"
    },
    {
      "file": "date-picker.tsx",
      "content": "export * as DatePicker from './primitives/date-picker'\n"
    }
  ]
}
