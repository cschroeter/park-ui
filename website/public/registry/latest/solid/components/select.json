{
  "id": "select",
  "name": "Select",
  "filename": "select.tsx",
  "variants": [
    {
      "file": "primitives/select.tsx",
      "content": "import { type Assign, Select } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type SelectVariantProps, select } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(select)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Select.RootProviderBaseProps<Select.CollectionItem>>,\n    SelectVariantProps\n  >\n>(Select.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Select.RootBaseProps<Select.CollectionItem>>,\n    SelectVariantProps\n  >\n>(Select.Root)\n\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Select.ClearTriggerProps>\n>(Select.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Select.ContentProps>>(\n  Select.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Select.ControlProps>>(\n  Select.Control,\n  'control',\n)\n\nexport const Indicator = withContext<Assign<HTMLStyledProps<'div'>, Select.IndicatorProps>>(\n  Select.Indicator,\n  'indicator',\n)\n\nexport const ItemGroupLabel = withContext<\n  Assign<HTMLStyledProps<'div'>, Select.ItemGroupLabelProps>\n>(Select.ItemGroupLabel, 'itemGroupLabel')\n\nexport const ItemGroup = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemGroupProps>>(\n  Select.ItemGroup,\n  'itemGroup',\n)\n\nexport const ItemIndicator = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemIndicatorProps>>(\n  Select.ItemIndicator,\n  'itemIndicator',\n)\n\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Select.ItemProps>>(\n  Select.Item,\n  'item',\n)\n\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, Select.ItemTextProps>>(\n  Select.ItemText,\n  'itemText',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Select.LabelProps>>(\n  Select.Label,\n  'label',\n)\n\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Select.ListProps>>(\n  Select.List,\n  'list',\n)\n\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Select.PositionerProps>>(\n  Select.Positioner,\n  'positioner',\n)\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Select.TriggerProps>>(\n  Select.Trigger,\n  'trigger',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Select.ValueTextProps>>(\n  Select.ValueText,\n  'valueText',\n)\n\nexport {\n  SelectContext as Context,\n  SelectHiddenSelect as HiddenSelect,\n} from '@ark-ui/solid'\n",
      "exports": "export * as Select from './select'"
    }
  ]
}
