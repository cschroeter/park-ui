{
  "id": "field",
  "name": "Field",
  "variants": [
    {
      "file": "primitives/field.tsx",
      "content": "import { type Assign, Field } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type FieldVariantProps, field } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(field)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Field.RootProviderBaseProps>, FieldVariantProps>\n>(Field.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Field.RootBaseProps>, FieldVariantProps>\n>(Field.Root, 'root')\n\nexport const ErrorText = withContext<Assign<HTMLStyledProps<'span'>, Field.ErrorTextBaseProps>>(\n  Field.ErrorText,\n  'errorText',\n)\n\nexport const HelperText = withContext<Assign<HTMLStyledProps<'span'>, Field.HelperTextBaseProps>>(\n  Field.HelperText,\n  'helperText',\n)\n\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, Field.InputBaseProps>>(\n  Field.Input,\n  'input',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Field.LabelBaseProps>>(\n  Field.Label,\n  'label',\n)\n\nexport const Select = withContext<Assign<HTMLStyledProps<'select'>, Field.SelectBaseProps>>(\n  Field.Select,\n  'select',\n)\n\nexport const Textarea = withContext<Assign<HTMLStyledProps<'textarea'>, Field.TextareaBaseProps>>(\n  Field.Textarea,\n  'textarea',\n)\n\nexport { FieldContext as Context } from '@ark-ui/solid'\n",
      "exports": "export * as Field from './field'"
    }
  ]
}
