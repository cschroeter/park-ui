{
  "id": "combobox",
  "name": "Combobox",
  "variants": [
    {
      "file": "styled/combobox.tsx",
      "content": "import { type Assign, Combobox } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type ComboboxVariantProps, combobox } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from './utils/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(combobox)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Combobox.RootProviderBaseProps<Combobox.CollectionItem>>,\n    ComboboxVariantProps\n  >\n>(Combobox.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<\n  Assign<\n    Assign<HTMLStyledProps<'div'>, Combobox.RootBaseProps<Combobox.CollectionItem>>,\n    ComboboxVariantProps\n  >\n>(Combobox.Root)\n\nexport const ClearTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Combobox.ClearTriggerBaseProps>\n>(Combobox.ClearTrigger, 'clearTrigger')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ContentBaseProps>>(\n  Combobox.Content,\n  'content',\n)\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ControlBaseProps>>(\n  Combobox.Control,\n  'control',\n)\n\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, Combobox.InputBaseProps>>(\n  Combobox.Input,\n  'input',\n)\n\nexport const ItemGroupLabel = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupLabelBaseProps>\n>(Combobox.ItemGroupLabel, 'itemGroupLabel')\n\nexport const ItemGroup = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemGroupBaseProps>>(\n  Combobox.ItemGroup,\n  'itemGroup',\n)\n\nexport const ItemIndicator = withContext<\n  Assign<HTMLStyledProps<'div'>, Combobox.ItemIndicatorBaseProps>\n>(Combobox.ItemIndicator, 'itemIndicator')\n\nexport const Item = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ItemBaseProps>>(\n  Combobox.Item,\n  'item',\n)\n\nexport const ItemText = withContext<Assign<HTMLStyledProps<'span'>, Combobox.ItemTextBaseProps>>(\n  Combobox.ItemText,\n  'itemText',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Combobox.LabelBaseProps>>(\n  Combobox.Label,\n  'label',\n)\n\nexport const List = withContext<Assign<HTMLStyledProps<'div'>, Combobox.ListBaseProps>>(\n  Combobox.List,\n  'list',\n)\n\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Combobox.PositionerBaseProps>>(\n  Combobox.Positioner,\n  'positioner',\n)\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Combobox.TriggerBaseProps>>(\n  Combobox.Trigger,\n  'trigger',\n)\n\nexport { ComboboxContext as Context } from '@ark-ui/solid'\n\nexport type {\n  ComboboxHighlightChangeDetails as HighlightChangeDetails,\n  ComboboxInputValueChangeDetails as InputValueChangeDetails,\n  ComboboxOpenChangeDetails as OpenChangeDetails,\n  ComboboxValueChangeDetails as ValueChangeDetails,\n} from '@ark-ui/react/combobox'\n"
    },
    { "file": "combobox.tsx", "content": "export * as Combobox from './styled/combobox'\n" }
  ]
}
