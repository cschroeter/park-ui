{
  "id": "popover",
  "name": "Popover",
  "filename": "popover.tsx",
  "variants": [
    {
      "file": "primitives/popover.tsx",
      "content": "import { Popover, type Assign } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type PopoverVariantProps, popover } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(popover)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<\n  Assign<Popover.RootProviderProps, PopoverVariantProps>\n>(Popover.RootProvider)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<Assign<Popover.RootProps, PopoverVariantProps>>(Popover.Root)\n\nexport const Anchor = withContext<Assign<HTMLStyledProps<'div'>, Popover.AnchorProps>>(\n  Popover.Anchor,\n  'anchor',\n)\n\nexport const Arrow = withContext<Assign<HTMLStyledProps<'div'>, Popover.ArrowProps>>(\n  Popover.Arrow,\n  'arrow',\n)\n\nexport const ArrowTip = withContext<Assign<HTMLStyledProps<'div'>, Popover.ArrowTipProps>>(\n  Popover.ArrowTip,\n  'arrowTip',\n)\n\nexport const CloseTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Popover.CloseTriggerProps>\n>(Popover.CloseTrigger, 'closeTrigger')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Popover.ContentProps>>(\n  Popover.Content,\n  'content',\n)\n\nexport const Description = withContext<Assign<HTMLStyledProps<'div'>, Popover.DescriptionProps>>(\n  Popover.Description,\n  'description',\n)\n\nexport const Indicator = withContext<Assign<HTMLStyledProps<'div'>, Popover.IndicatorProps>>(\n  Popover.Indicator,\n  'indicator',\n)\n\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Popover.PositionerProps>>(\n  Popover.Positioner,\n  'positioner',\n)\n\nexport const Title = withContext<Assign<HTMLStyledProps<'div'>, Popover.TitleProps>>(\n  Popover.Title,\n  'title',\n)\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Popover.TriggerProps>>(\n  Popover.Trigger,\n  'trigger',\n)\n\nexport { PopoverContext as Context } from '@ark-ui/solid'\n",
      "exports": "export * as Popover from './popover'"
    }
  ]
}
