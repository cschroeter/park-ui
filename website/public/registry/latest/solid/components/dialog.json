{
  "id": "dialog",
  "name": "Dialog",
  "variants": [
    {
      "file": "primitives/dialog.tsx",
      "content": "import { type Assign, Dialog } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type DialogVariantProps, dialog } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withRootProvider, withContext } = createStyleContext(dialog)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withRootProvider<Assign<Dialog.RootProviderProps, DialogVariantProps>>(\n  Dialog.RootProvider,\n)\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withRootProvider<Assign<Dialog.RootProps, DialogVariantProps>>(Dialog.Root)\n\nexport const Backdrop = withContext<Assign<HTMLStyledProps<'div'>, Dialog.BackdropBaseProps>>(\n  Dialog.Backdrop,\n  'backdrop',\n)\n\nexport const CloseTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, Dialog.CloseTriggerBaseProps>\n>(Dialog.CloseTrigger, 'closeTrigger')\n\nexport const Content = withContext<Assign<HTMLStyledProps<'div'>, Dialog.ContentBaseProps>>(\n  Dialog.Content,\n  'content',\n)\n\nexport const Description = withContext<Assign<HTMLStyledProps<'div'>, Dialog.DescriptionBaseProps>>(\n  Dialog.Description,\n  'description',\n)\n\nexport const Positioner = withContext<Assign<HTMLStyledProps<'div'>, Dialog.PositionerBaseProps>>(\n  Dialog.Positioner,\n  'positioner',\n)\n\nexport const Title = withContext<Assign<HTMLStyledProps<'h2'>, Dialog.TitleBaseProps>>(\n  Dialog.Title,\n  'title',\n)\n\nexport const Trigger = withContext<Assign<HTMLStyledProps<'button'>, Dialog.TriggerBaseProps>>(\n  Dialog.Trigger,\n  'trigger',\n)\n\nexport { DialogContext as Context } from '@ark-ui/solid'\n",
      "exports": "export * as Dialog from './dialog'"
    }
  ]
}
