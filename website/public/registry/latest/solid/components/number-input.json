{
  "id": "number-input",
  "name": "Number Input",
  "variants": [
    {
      "file": "primitives/number-input.tsx",
      "content": "import { type Assign, NumberInput } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type NumberInputVariantProps, numberInput } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(numberInput)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, NumberInput.RootProviderBaseProps>, NumberInputVariantProps>\n>(NumberInput.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, NumberInput.RootBaseProps>, NumberInputVariantProps>\n>(NumberInput.Root, 'root')\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, NumberInput.ControlBaseProps>>(\n  NumberInput.Control,\n  'control',\n)\n\nexport const DecrementTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, NumberInput.DecrementTriggerBaseProps>\n>(NumberInput.DecrementTrigger, 'decrementTrigger')\n\nexport const IncrementTrigger = withContext<\n  Assign<HTMLStyledProps<'button'>, NumberInput.IncrementTriggerBaseProps>\n>(NumberInput.IncrementTrigger, 'incrementTrigger')\n\nexport const Input = withContext<Assign<HTMLStyledProps<'input'>, NumberInput.InputBaseProps>>(\n  NumberInput.Input,\n  'input',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, NumberInput.LabelBaseProps>>(\n  NumberInput.Label,\n  'label',\n)\n\nexport const Scrubber = withContext<Assign<HTMLStyledProps<'div'>, NumberInput.ScrubberBaseProps>>(\n  NumberInput.Scrubber,\n  'scrubber',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, NumberInput.ValueTextProps>>(\n  NumberInput.ValueText,\n  'valueText',\n)\n\nexport { NumberInputContext as Context } from '@ark-ui/solid'\n"
    },
    {
      "file": "number-input.tsx",
      "content": "import { Show, children } from 'solid-js'\nimport * as ArkNumberInput from './primitives/number-input'\n\nexport interface NumberInputProps extends ArkNumberInput.RootProps {}\n\nexport const NumberInput = (props: NumberInputProps) => {\n  const getChildren = children(() => props.children)\n\n  return (\n    <ArkNumberInput.Root {...props}>\n      <Show when={getChildren()}>\n        <ArkNumberInput.Label>{getChildren()}</ArkNumberInput.Label>\n      </Show>\n      <ArkNumberInput.Control>\n        <ArkNumberInput.Input />\n        <ArkNumberInput.IncrementTrigger>\n          <ChevronUpIcon />\n        </ArkNumberInput.IncrementTrigger>\n        <ArkNumberInput.DecrementTrigger>\n          <ChevronDownIcon />\n        </ArkNumberInput.DecrementTrigger>\n      </ArkNumberInput.Control>\n    </ArkNumberInput.Root>\n  )\n}\n\nconst ChevronUpIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Up Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m18 15l-6-6l-6 6\"\n    />\n  </svg>\n)\n\nconst ChevronDownIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <title>Chevron Down Icon</title>\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"m6 9l6 6l6-6\"\n    />\n  </svg>\n)\n"
    }
  ]
}
