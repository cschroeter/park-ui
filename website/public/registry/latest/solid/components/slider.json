{
  "id": "slider",
  "name": "Slider",
  "variants": [
    {
      "file": "primitives/slider.tsx",
      "content": "import { Slider, type Assign } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type SliderVariantProps, slider } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(slider)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Slider.RootProviderProps>, SliderVariantProps>\n>(Slider.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Slider.RootProps>, SliderVariantProps>\n>(Slider.Root, 'root')\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Slider.ControlProps>>(\n  Slider.Control,\n  'control',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Slider.LabelProps>>(\n  Slider.Label,\n  'label',\n)\n\nexport const MarkerGroup = withContext<Assign<HTMLStyledProps<'div'>, Slider.MarkerGroupProps>>(\n  Slider.MarkerGroup,\n  'markerGroup',\n)\n\nexport const Marker = withContext<Assign<HTMLStyledProps<'span'>, Slider.MarkerProps>>(\n  Slider.Marker,\n  'marker',\n)\n\nexport const Range = withContext<Assign<HTMLStyledProps<'div'>, Slider.RangeProps>>(\n  Slider.Range,\n  'range',\n)\n\nexport const Thumb = withContext<Assign<HTMLStyledProps<'div'>, Slider.ThumbProps>>(\n  Slider.Thumb,\n  'thumb',\n)\n\nexport const Track = withContext<Assign<HTMLStyledProps<'div'>, Slider.TrackProps>>(\n  Slider.Track,\n  'track',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Slider.ValueTextProps>>(\n  Slider.ValueText,\n  'valueText',\n)\n\nexport {\n  SliderContext as Context,\n  SliderHiddenInput as HiddenInput,\n} from '@ark-ui/solid'\n",
      "exports": "export * as Slider from './slider'"
    },
    {
      "file": "slider.tsx",
      "content": "import { Index, type JSX, Show, children, splitProps } from 'solid-js'\nimport { Slider as ArkSlider } from '~/components/ui/primitives'\n\nexport interface SliderProps extends ArkSlider.RootProps {\n  marks?: {\n    value: number\n    label?: JSX.Element\n  }[]\n}\n\nexport const Slider = (props: SliderProps) => {\n  const [localProps, rootProps] = splitProps(props, ['children', 'marks'])\n  const getChildren = children(() => localProps.children)\n\n  return (\n    <ArkSlider.Root {...rootProps}>\n      <ArkSlider.Context>\n        {(slider) => (\n          <>\n            <Show when={getChildren()}>\n              <ArkSlider.Label>{getChildren()}</ArkSlider.Label>\n            </Show>\n            <ArkSlider.Control>\n              <ArkSlider.Track>\n                <ArkSlider.Range />\n              </ArkSlider.Track>\n              <Index each={slider().value}>{(_, index) => <ArkSlider.Thumb index={index} />}</Index>\n            </ArkSlider.Control>\n            <Show when={localProps.marks}>\n              <ArkSlider.MarkerGroup>\n                <Index each={localProps.marks}>\n                  {(mark) => (\n                    <ArkSlider.Marker value={mark().value}>{mark().label}</ArkSlider.Marker>\n                  )}\n                </Index>\n              </ArkSlider.MarkerGroup>\n            </Show>\n          </>\n        )}\n      </ArkSlider.Context>\n    </ArkSlider.Root>\n  )\n}\n",
      "exports": "export { Slider, type SliderProps } from './slider'"
    }
  ]
}
