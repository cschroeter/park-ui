{
  "id": "slider",
  "name": "Slider",
  "variants": [
    {
      "file": "styled/slider.tsx",
      "content": "import { type Assign, Slider } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type SliderVariantProps, slider } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from './utils/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(slider)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Slider.RootProviderBaseProps>, SliderVariantProps>\n>(Slider.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Slider.RootBaseProps>, SliderVariantProps>\n>(Slider.Root, 'root')\n\nexport const Control = withContext<Assign<HTMLStyledProps<'div'>, Slider.ControlBaseProps>>(\n  Slider.Control,\n  'control',\n)\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Slider.LabelBaseProps>>(\n  Slider.Label,\n  'label',\n)\n\nexport const MarkerGroup = withContext<Assign<HTMLStyledProps<'div'>, Slider.MarkerGroupBaseProps>>(\n  Slider.MarkerGroup,\n  'markerGroup',\n)\n\nexport const Marker = withContext<Assign<HTMLStyledProps<'span'>, Slider.MarkerBaseProps>>(\n  Slider.Marker,\n  'marker',\n)\n\nexport const Range = withContext<Assign<HTMLStyledProps<'div'>, Slider.RangeBaseProps>>(\n  Slider.Range,\n  'range',\n)\n\nexport const Thumb = withContext<Assign<HTMLStyledProps<'div'>, Slider.ThumbBaseProps>>(\n  Slider.Thumb,\n  'thumb',\n)\n\nexport const Track = withContext<Assign<HTMLStyledProps<'div'>, Slider.TrackBaseProps>>(\n  Slider.Track,\n  'track',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Slider.ValueTextBaseProps>>(\n  Slider.ValueText,\n  'valueText',\n)\n\nexport {\n  SliderContext as Context,\n  SliderHiddenInput as HiddenInput,\n} from '@ark-ui/solid'\n"
    },
    {
      "file": "slider.tsx",
      "content": "import { Index, type JSX, Show, children, splitProps } from 'solid-js'\nimport * as StyledSlider from './styled/slider'\n\nexport interface SliderProps extends StyledSlider.RootProps {\n  marks?: {\n    value: number\n    label?: JSX.Element\n  }[]\n}\n\nexport const Slider = (props: SliderProps) => {\n  const [localProps, rootProps] = splitProps(props, ['children', 'marks'])\n  const getChildren = children(() => localProps.children)\n\n  return (\n    <StyledSlider.Root {...rootProps}>\n      <StyledSlider.Context>\n        {(slider) => (\n          <>\n            <Show when={getChildren()}>\n              <StyledSlider.Label>{getChildren()}</StyledSlider.Label>\n            </Show>\n            <StyledSlider.Control>\n              <StyledSlider.Track>\n                <StyledSlider.Range />\n              </StyledSlider.Track>\n              <Index each={slider().value}>\n                {(_, index) => (\n                  <StyledSlider.Thumb index={index}>\n                    <StyledSlider.HiddenInput />\n                  </StyledSlider.Thumb>\n                )}\n              </Index>\n            </StyledSlider.Control>\n            <Show when={localProps.marks}>\n              <StyledSlider.MarkerGroup>\n                <Index each={localProps.marks}>\n                  {(mark) => (\n                    <StyledSlider.Marker value={mark().value}>{mark().label}</StyledSlider.Marker>\n                  )}\n                </Index>\n              </StyledSlider.MarkerGroup>\n            </Show>\n          </>\n        )}\n      </StyledSlider.Context>\n    </StyledSlider.Root>\n  )\n}\n"
    }
  ]
}
