{
  "id": "progress",
  "name": "Progress",
  "filename": "progress.tsx",
  "variants": {
    "primitive": "import { Progress, type Assign } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type ProgressVariantProps, progress } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from '~/lib/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(progress)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootProviderProps>, ProgressVariantProps>\n>(Progress.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootProps>, ProgressVariantProps>\n>(Progress.Root, 'root')\n\nexport const Circle = withContext<Assign<HTMLStyledProps<'svg'>, Progress.CircleProps>>(\n  Progress.Circle,\n  'circle',\n)\n\nexport const CircleRange = withContext<\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleRangeProps>\n>(Progress.CircleRange, 'circleRange')\n\nexport const CircleTrack = withContext<\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleTrackProps>\n>(Progress.CircleTrack, 'circleTrack')\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Progress.LabelProps>>(\n  Progress.Label,\n  'label',\n)\n\nexport const Range = withContext<Assign<HTMLStyledProps<'div'>, Progress.RangeProps>>(\n  Progress.Range,\n  'range',\n)\n\nexport const Track = withContext<Assign<HTMLStyledProps<'div'>, Progress.TrackProps>>(\n  Progress.Track,\n  'track',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Progress.ValueTextProps>>(\n  Progress.ValueText,\n  'valueText',\n)\n\nexport const View = withContext<Assign<HTMLStyledProps<'span'>, Progress.ViewProps>>(\n  Progress.View,\n  'view',\n)\n\nexport { ProgressContext as Context } from '@ark-ui/solid'\n",
    "composition": "import { Show, children, splitProps } from 'solid-js'\nimport { Progress as ArkProgress } from '~/components/ui/primitives'\n\nexport interface ProgressProps extends ArkProgress.RootProps {\n  /**\n   * The type of progress to render.\n   * @default linear\n   */\n  type?: 'linear' | 'circular'\n}\n\nexport const Progress = (props: ProgressProps) => {\n  const [localProps, rootProps] = splitProps(props, ['children', 'type'])\n  const getChildren = children(() => localProps.children)\n\n  return (\n    <ArkProgress.Root {...rootProps}>\n      <Show when={getChildren()}>\n        <ArkProgress.Label>{getChildren()}</ArkProgress.Label>\n      </Show>\n      <Show\n        when={localProps.type === 'circular'}\n        fallback={\n          <ArkProgress.Track>\n            <ArkProgress.Range />\n          </ArkProgress.Track>\n        }\n      >\n        <ArkProgress.Circle>\n          <ArkProgress.CircleTrack />\n          <ArkProgress.CircleRange />\n          <ArkProgress.ValueText />\n        </ArkProgress.Circle>\n      </Show>\n      <ArkProgress.ValueText />\n    </ArkProgress.Root>\n  )\n}\n"
  }
}
