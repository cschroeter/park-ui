{
  "id": "progress",
  "name": "Progress",
  "variants": [
    {
      "file": "styled/progress.tsx",
      "content": "import { type Assign, Progress } from '@ark-ui/solid'\nimport type { ComponentProps } from 'solid-js'\nimport { type ProgressVariantProps, progress } from 'styled-system/recipes'\nimport type { HTMLStyledProps } from 'styled-system/types'\nimport { createStyleContext } from './utils/create-style-context'\n\nconst { withProvider, withContext } = createStyleContext(progress)\n\nexport type RootProviderProps = ComponentProps<typeof RootProvider>\nexport const RootProvider = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootProviderBaseProps>, ProgressVariantProps>\n>(Progress.RootProvider, 'root')\n\nexport type RootProps = ComponentProps<typeof Root>\nexport const Root = withProvider<\n  Assign<Assign<HTMLStyledProps<'div'>, Progress.RootBaseProps>, ProgressVariantProps>\n>(Progress.Root, 'root')\n\nexport const Circle = withContext<Assign<HTMLStyledProps<'svg'>, Progress.CircleBaseProps>>(\n  Progress.Circle,\n  'circle',\n)\n\nexport const CircleRange = withContext<\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleRangeBaseProps>\n>(Progress.CircleRange, 'circleRange')\n\nexport const CircleTrack = withContext<\n  Assign<HTMLStyledProps<'circle'>, Progress.CircleTrackBaseProps>\n>(Progress.CircleTrack, 'circleTrack')\n\nexport const Label = withContext<Assign<HTMLStyledProps<'label'>, Progress.LabelBaseProps>>(\n  Progress.Label,\n  'label',\n)\n\nexport const Range = withContext<Assign<HTMLStyledProps<'div'>, Progress.RangeBaseProps>>(\n  Progress.Range,\n  'range',\n)\n\nexport const Track = withContext<Assign<HTMLStyledProps<'div'>, Progress.TrackBaseProps>>(\n  Progress.Track,\n  'track',\n)\n\nexport const ValueText = withContext<Assign<HTMLStyledProps<'span'>, Progress.ValueTextBaseProps>>(\n  Progress.ValueText,\n  'valueText',\n)\n\nexport const View = withContext<Assign<HTMLStyledProps<'span'>, Progress.ViewBaseProps>>(\n  Progress.View,\n  'view',\n)\n\nexport { ProgressContext as Context } from '@ark-ui/solid'\n"
    },
    {
      "file": "progress.tsx",
      "content": "import { Show, children, splitProps } from 'solid-js'\nimport * as StyledProgress from './styled/progress'\n\nexport interface ProgressProps extends StyledProgress.RootProps {\n  /**\n   * The type of progress to render.\n   * @default linear\n   */\n  type?: 'linear' | 'circular'\n}\n\nexport const Progress = (props: ProgressProps) => {\n  const [localProps, rootProps] = splitProps(props, ['children', 'type'])\n  const getChildren = children(() => localProps.children)\n\n  return (\n    <StyledProgress.Root {...rootProps}>\n      <Show when={getChildren()}>\n        <StyledProgress.Label>{getChildren()}</StyledProgress.Label>\n      </Show>\n      <Show\n        when={localProps.type === 'circular'}\n        fallback={\n          <StyledProgress.Track>\n            <StyledProgress.Range />\n          </StyledProgress.Track>\n        }\n      >\n        <StyledProgress.Circle>\n          <StyledProgress.CircleTrack />\n          <StyledProgress.CircleRange />\n          <StyledProgress.ValueText />\n        </StyledProgress.Circle>\n      </Show>\n      <StyledProgress.ValueText />\n    </StyledProgress.Root>\n  )\n}\n"
    }
  ]
}
